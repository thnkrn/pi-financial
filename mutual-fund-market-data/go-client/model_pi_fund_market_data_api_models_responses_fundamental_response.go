/*
Pi.FundMarketData.API, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package go_client

import (
	"encoding/json"
	"time"
)

// checks if the PiFundMarketDataAPIModelsResponsesFundamentalResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PiFundMarketDataAPIModelsResponsesFundamentalResponse{}

// PiFundMarketDataAPIModelsResponsesFundamentalResponse struct for PiFundMarketDataAPIModelsResponsesFundamentalResponse
type PiFundMarketDataAPIModelsResponsesFundamentalResponse struct {
	RiskLevel           *int32          `json:"riskLevel,omitempty"`
	IsForeignInvestment *bool           `json:"isForeignInvestment,omitempty"`
	InvestmentPolicy    NullableString  `json:"investmentPolicy,omitempty"`
	HasCurrencyRisk     *bool           `json:"hasCurrencyRisk,omitempty"`
	AssetClassFocus     NullableString  `json:"assetClassFocus,omitempty"`
	AllowSwitchOut      *bool           `json:"allowSwitchOut,omitempty"`
	InceptionDate       NullableTime    `json:"inceptionDate,omitempty"`
	Objective           NullableString  `json:"objective,omitempty"`
	FundSize            NullableFloat32 `json:"fundSize,omitempty"`
	IsDividend          *bool           `json:"isDividend,omitempty"`
	TaxType             NullableString  `json:"taxType,omitempty"`
	Currency            NullableString  `json:"currency,omitempty"`
	AsOfDate            *time.Time      `json:"asOfDate,omitempty"`
}

// NewPiFundMarketDataAPIModelsResponsesFundamentalResponse instantiates a new PiFundMarketDataAPIModelsResponsesFundamentalResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPiFundMarketDataAPIModelsResponsesFundamentalResponse() *PiFundMarketDataAPIModelsResponsesFundamentalResponse {
	this := PiFundMarketDataAPIModelsResponsesFundamentalResponse{}
	return &this
}

// NewPiFundMarketDataAPIModelsResponsesFundamentalResponseWithDefaults instantiates a new PiFundMarketDataAPIModelsResponsesFundamentalResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPiFundMarketDataAPIModelsResponsesFundamentalResponseWithDefaults() *PiFundMarketDataAPIModelsResponsesFundamentalResponse {
	this := PiFundMarketDataAPIModelsResponsesFundamentalResponse{}
	return &this
}

// GetRiskLevel returns the RiskLevel field value if set, zero value otherwise.
func (o *PiFundMarketDataAPIModelsResponsesFundamentalResponse) GetRiskLevel() int32 {
	if o == nil || IsNil(o.RiskLevel) {
		var ret int32
		return ret
	}
	return *o.RiskLevel
}

// GetRiskLevelOk returns a tuple with the RiskLevel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PiFundMarketDataAPIModelsResponsesFundamentalResponse) GetRiskLevelOk() (*int32, bool) {
	if o == nil || IsNil(o.RiskLevel) {
		return nil, false
	}
	return o.RiskLevel, true
}

// HasRiskLevel returns a boolean if a field has been set.
func (o *PiFundMarketDataAPIModelsResponsesFundamentalResponse) HasRiskLevel() bool {
	if o != nil && !IsNil(o.RiskLevel) {
		return true
	}

	return false
}

// SetRiskLevel gets a reference to the given int32 and assigns it to the RiskLevel field.
func (o *PiFundMarketDataAPIModelsResponsesFundamentalResponse) SetRiskLevel(v int32) {
	o.RiskLevel = &v
}

// GetIsForeignInvestment returns the IsForeignInvestment field value if set, zero value otherwise.
func (o *PiFundMarketDataAPIModelsResponsesFundamentalResponse) GetIsForeignInvestment() bool {
	if o == nil || IsNil(o.IsForeignInvestment) {
		var ret bool
		return ret
	}
	return *o.IsForeignInvestment
}

// GetIsForeignInvestmentOk returns a tuple with the IsForeignInvestment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PiFundMarketDataAPIModelsResponsesFundamentalResponse) GetIsForeignInvestmentOk() (*bool, bool) {
	if o == nil || IsNil(o.IsForeignInvestment) {
		return nil, false
	}
	return o.IsForeignInvestment, true
}

// HasIsForeignInvestment returns a boolean if a field has been set.
func (o *PiFundMarketDataAPIModelsResponsesFundamentalResponse) HasIsForeignInvestment() bool {
	if o != nil && !IsNil(o.IsForeignInvestment) {
		return true
	}

	return false
}

// SetIsForeignInvestment gets a reference to the given bool and assigns it to the IsForeignInvestment field.
func (o *PiFundMarketDataAPIModelsResponsesFundamentalResponse) SetIsForeignInvestment(v bool) {
	o.IsForeignInvestment = &v
}

// GetInvestmentPolicy returns the InvestmentPolicy field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiFundMarketDataAPIModelsResponsesFundamentalResponse) GetInvestmentPolicy() string {
	if o == nil || IsNil(o.InvestmentPolicy.Get()) {
		var ret string
		return ret
	}
	return *o.InvestmentPolicy.Get()
}

// GetInvestmentPolicyOk returns a tuple with the InvestmentPolicy field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiFundMarketDataAPIModelsResponsesFundamentalResponse) GetInvestmentPolicyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.InvestmentPolicy.Get(), o.InvestmentPolicy.IsSet()
}

// HasInvestmentPolicy returns a boolean if a field has been set.
func (o *PiFundMarketDataAPIModelsResponsesFundamentalResponse) HasInvestmentPolicy() bool {
	if o != nil && o.InvestmentPolicy.IsSet() {
		return true
	}

	return false
}

// SetInvestmentPolicy gets a reference to the given NullableString and assigns it to the InvestmentPolicy field.
func (o *PiFundMarketDataAPIModelsResponsesFundamentalResponse) SetInvestmentPolicy(v string) {
	o.InvestmentPolicy.Set(&v)
}

// SetInvestmentPolicyNil sets the value for InvestmentPolicy to be an explicit nil
func (o *PiFundMarketDataAPIModelsResponsesFundamentalResponse) SetInvestmentPolicyNil() {
	o.InvestmentPolicy.Set(nil)
}

// UnsetInvestmentPolicy ensures that no value is present for InvestmentPolicy, not even an explicit nil
func (o *PiFundMarketDataAPIModelsResponsesFundamentalResponse) UnsetInvestmentPolicy() {
	o.InvestmentPolicy.Unset()
}

// GetHasCurrencyRisk returns the HasCurrencyRisk field value if set, zero value otherwise.
func (o *PiFundMarketDataAPIModelsResponsesFundamentalResponse) GetHasCurrencyRisk() bool {
	if o == nil || IsNil(o.HasCurrencyRisk) {
		var ret bool
		return ret
	}
	return *o.HasCurrencyRisk
}

// GetHasCurrencyRiskOk returns a tuple with the HasCurrencyRisk field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PiFundMarketDataAPIModelsResponsesFundamentalResponse) GetHasCurrencyRiskOk() (*bool, bool) {
	if o == nil || IsNil(o.HasCurrencyRisk) {
		return nil, false
	}
	return o.HasCurrencyRisk, true
}

// HasHasCurrencyRisk returns a boolean if a field has been set.
func (o *PiFundMarketDataAPIModelsResponsesFundamentalResponse) HasHasCurrencyRisk() bool {
	if o != nil && !IsNil(o.HasCurrencyRisk) {
		return true
	}

	return false
}

// SetHasCurrencyRisk gets a reference to the given bool and assigns it to the HasCurrencyRisk field.
func (o *PiFundMarketDataAPIModelsResponsesFundamentalResponse) SetHasCurrencyRisk(v bool) {
	o.HasCurrencyRisk = &v
}

// GetAssetClassFocus returns the AssetClassFocus field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiFundMarketDataAPIModelsResponsesFundamentalResponse) GetAssetClassFocus() string {
	if o == nil || IsNil(o.AssetClassFocus.Get()) {
		var ret string
		return ret
	}
	return *o.AssetClassFocus.Get()
}

// GetAssetClassFocusOk returns a tuple with the AssetClassFocus field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiFundMarketDataAPIModelsResponsesFundamentalResponse) GetAssetClassFocusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AssetClassFocus.Get(), o.AssetClassFocus.IsSet()
}

// HasAssetClassFocus returns a boolean if a field has been set.
func (o *PiFundMarketDataAPIModelsResponsesFundamentalResponse) HasAssetClassFocus() bool {
	if o != nil && o.AssetClassFocus.IsSet() {
		return true
	}

	return false
}

// SetAssetClassFocus gets a reference to the given NullableString and assigns it to the AssetClassFocus field.
func (o *PiFundMarketDataAPIModelsResponsesFundamentalResponse) SetAssetClassFocus(v string) {
	o.AssetClassFocus.Set(&v)
}

// SetAssetClassFocusNil sets the value for AssetClassFocus to be an explicit nil
func (o *PiFundMarketDataAPIModelsResponsesFundamentalResponse) SetAssetClassFocusNil() {
	o.AssetClassFocus.Set(nil)
}

// UnsetAssetClassFocus ensures that no value is present for AssetClassFocus, not even an explicit nil
func (o *PiFundMarketDataAPIModelsResponsesFundamentalResponse) UnsetAssetClassFocus() {
	o.AssetClassFocus.Unset()
}

// GetAllowSwitchOut returns the AllowSwitchOut field value if set, zero value otherwise.
func (o *PiFundMarketDataAPIModelsResponsesFundamentalResponse) GetAllowSwitchOut() bool {
	if o == nil || IsNil(o.AllowSwitchOut) {
		var ret bool
		return ret
	}
	return *o.AllowSwitchOut
}

// GetAllowSwitchOutOk returns a tuple with the AllowSwitchOut field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PiFundMarketDataAPIModelsResponsesFundamentalResponse) GetAllowSwitchOutOk() (*bool, bool) {
	if o == nil || IsNil(o.AllowSwitchOut) {
		return nil, false
	}
	return o.AllowSwitchOut, true
}

// HasAllowSwitchOut returns a boolean if a field has been set.
func (o *PiFundMarketDataAPIModelsResponsesFundamentalResponse) HasAllowSwitchOut() bool {
	if o != nil && !IsNil(o.AllowSwitchOut) {
		return true
	}

	return false
}

// SetAllowSwitchOut gets a reference to the given bool and assigns it to the AllowSwitchOut field.
func (o *PiFundMarketDataAPIModelsResponsesFundamentalResponse) SetAllowSwitchOut(v bool) {
	o.AllowSwitchOut = &v
}

// GetInceptionDate returns the InceptionDate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiFundMarketDataAPIModelsResponsesFundamentalResponse) GetInceptionDate() time.Time {
	if o == nil || IsNil(o.InceptionDate.Get()) {
		var ret time.Time
		return ret
	}
	return *o.InceptionDate.Get()
}

// GetInceptionDateOk returns a tuple with the InceptionDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiFundMarketDataAPIModelsResponsesFundamentalResponse) GetInceptionDateOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.InceptionDate.Get(), o.InceptionDate.IsSet()
}

// HasInceptionDate returns a boolean if a field has been set.
func (o *PiFundMarketDataAPIModelsResponsesFundamentalResponse) HasInceptionDate() bool {
	if o != nil && o.InceptionDate.IsSet() {
		return true
	}

	return false
}

// SetInceptionDate gets a reference to the given NullableTime and assigns it to the InceptionDate field.
func (o *PiFundMarketDataAPIModelsResponsesFundamentalResponse) SetInceptionDate(v time.Time) {
	o.InceptionDate.Set(&v)
}

// SetInceptionDateNil sets the value for InceptionDate to be an explicit nil
func (o *PiFundMarketDataAPIModelsResponsesFundamentalResponse) SetInceptionDateNil() {
	o.InceptionDate.Set(nil)
}

// UnsetInceptionDate ensures that no value is present for InceptionDate, not even an explicit nil
func (o *PiFundMarketDataAPIModelsResponsesFundamentalResponse) UnsetInceptionDate() {
	o.InceptionDate.Unset()
}

// GetObjective returns the Objective field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiFundMarketDataAPIModelsResponsesFundamentalResponse) GetObjective() string {
	if o == nil || IsNil(o.Objective.Get()) {
		var ret string
		return ret
	}
	return *o.Objective.Get()
}

// GetObjectiveOk returns a tuple with the Objective field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiFundMarketDataAPIModelsResponsesFundamentalResponse) GetObjectiveOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Objective.Get(), o.Objective.IsSet()
}

// HasObjective returns a boolean if a field has been set.
func (o *PiFundMarketDataAPIModelsResponsesFundamentalResponse) HasObjective() bool {
	if o != nil && o.Objective.IsSet() {
		return true
	}

	return false
}

// SetObjective gets a reference to the given NullableString and assigns it to the Objective field.
func (o *PiFundMarketDataAPIModelsResponsesFundamentalResponse) SetObjective(v string) {
	o.Objective.Set(&v)
}

// SetObjectiveNil sets the value for Objective to be an explicit nil
func (o *PiFundMarketDataAPIModelsResponsesFundamentalResponse) SetObjectiveNil() {
	o.Objective.Set(nil)
}

// UnsetObjective ensures that no value is present for Objective, not even an explicit nil
func (o *PiFundMarketDataAPIModelsResponsesFundamentalResponse) UnsetObjective() {
	o.Objective.Unset()
}

// GetFundSize returns the FundSize field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiFundMarketDataAPIModelsResponsesFundamentalResponse) GetFundSize() float32 {
	if o == nil || IsNil(o.FundSize.Get()) {
		var ret float32
		return ret
	}
	return *o.FundSize.Get()
}

// GetFundSizeOk returns a tuple with the FundSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiFundMarketDataAPIModelsResponsesFundamentalResponse) GetFundSizeOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return o.FundSize.Get(), o.FundSize.IsSet()
}

// HasFundSize returns a boolean if a field has been set.
func (o *PiFundMarketDataAPIModelsResponsesFundamentalResponse) HasFundSize() bool {
	if o != nil && o.FundSize.IsSet() {
		return true
	}

	return false
}

// SetFundSize gets a reference to the given NullableFloat32 and assigns it to the FundSize field.
func (o *PiFundMarketDataAPIModelsResponsesFundamentalResponse) SetFundSize(v float32) {
	o.FundSize.Set(&v)
}

// SetFundSizeNil sets the value for FundSize to be an explicit nil
func (o *PiFundMarketDataAPIModelsResponsesFundamentalResponse) SetFundSizeNil() {
	o.FundSize.Set(nil)
}

// UnsetFundSize ensures that no value is present for FundSize, not even an explicit nil
func (o *PiFundMarketDataAPIModelsResponsesFundamentalResponse) UnsetFundSize() {
	o.FundSize.Unset()
}

// GetIsDividend returns the IsDividend field value if set, zero value otherwise.
func (o *PiFundMarketDataAPIModelsResponsesFundamentalResponse) GetIsDividend() bool {
	if o == nil || IsNil(o.IsDividend) {
		var ret bool
		return ret
	}
	return *o.IsDividend
}

// GetIsDividendOk returns a tuple with the IsDividend field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PiFundMarketDataAPIModelsResponsesFundamentalResponse) GetIsDividendOk() (*bool, bool) {
	if o == nil || IsNil(o.IsDividend) {
		return nil, false
	}
	return o.IsDividend, true
}

// HasIsDividend returns a boolean if a field has been set.
func (o *PiFundMarketDataAPIModelsResponsesFundamentalResponse) HasIsDividend() bool {
	if o != nil && !IsNil(o.IsDividend) {
		return true
	}

	return false
}

// SetIsDividend gets a reference to the given bool and assigns it to the IsDividend field.
func (o *PiFundMarketDataAPIModelsResponsesFundamentalResponse) SetIsDividend(v bool) {
	o.IsDividend = &v
}

// GetTaxType returns the TaxType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiFundMarketDataAPIModelsResponsesFundamentalResponse) GetTaxType() string {
	if o == nil || IsNil(o.TaxType.Get()) {
		var ret string
		return ret
	}
	return *o.TaxType.Get()
}

// GetTaxTypeOk returns a tuple with the TaxType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiFundMarketDataAPIModelsResponsesFundamentalResponse) GetTaxTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TaxType.Get(), o.TaxType.IsSet()
}

// HasTaxType returns a boolean if a field has been set.
func (o *PiFundMarketDataAPIModelsResponsesFundamentalResponse) HasTaxType() bool {
	if o != nil && o.TaxType.IsSet() {
		return true
	}

	return false
}

// SetTaxType gets a reference to the given NullableString and assigns it to the TaxType field.
func (o *PiFundMarketDataAPIModelsResponsesFundamentalResponse) SetTaxType(v string) {
	o.TaxType.Set(&v)
}

// SetTaxTypeNil sets the value for TaxType to be an explicit nil
func (o *PiFundMarketDataAPIModelsResponsesFundamentalResponse) SetTaxTypeNil() {
	o.TaxType.Set(nil)
}

// UnsetTaxType ensures that no value is present for TaxType, not even an explicit nil
func (o *PiFundMarketDataAPIModelsResponsesFundamentalResponse) UnsetTaxType() {
	o.TaxType.Unset()
}

// GetCurrency returns the Currency field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiFundMarketDataAPIModelsResponsesFundamentalResponse) GetCurrency() string {
	if o == nil || IsNil(o.Currency.Get()) {
		var ret string
		return ret
	}
	return *o.Currency.Get()
}

// GetCurrencyOk returns a tuple with the Currency field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiFundMarketDataAPIModelsResponsesFundamentalResponse) GetCurrencyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Currency.Get(), o.Currency.IsSet()
}

// HasCurrency returns a boolean if a field has been set.
func (o *PiFundMarketDataAPIModelsResponsesFundamentalResponse) HasCurrency() bool {
	if o != nil && o.Currency.IsSet() {
		return true
	}

	return false
}

// SetCurrency gets a reference to the given NullableString and assigns it to the Currency field.
func (o *PiFundMarketDataAPIModelsResponsesFundamentalResponse) SetCurrency(v string) {
	o.Currency.Set(&v)
}

// SetCurrencyNil sets the value for Currency to be an explicit nil
func (o *PiFundMarketDataAPIModelsResponsesFundamentalResponse) SetCurrencyNil() {
	o.Currency.Set(nil)
}

// UnsetCurrency ensures that no value is present for Currency, not even an explicit nil
func (o *PiFundMarketDataAPIModelsResponsesFundamentalResponse) UnsetCurrency() {
	o.Currency.Unset()
}

// GetAsOfDate returns the AsOfDate field value if set, zero value otherwise.
func (o *PiFundMarketDataAPIModelsResponsesFundamentalResponse) GetAsOfDate() time.Time {
	if o == nil || IsNil(o.AsOfDate) {
		var ret time.Time
		return ret
	}
	return *o.AsOfDate
}

// GetAsOfDateOk returns a tuple with the AsOfDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PiFundMarketDataAPIModelsResponsesFundamentalResponse) GetAsOfDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.AsOfDate) {
		return nil, false
	}
	return o.AsOfDate, true
}

// HasAsOfDate returns a boolean if a field has been set.
func (o *PiFundMarketDataAPIModelsResponsesFundamentalResponse) HasAsOfDate() bool {
	if o != nil && !IsNil(o.AsOfDate) {
		return true
	}

	return false
}

// SetAsOfDate gets a reference to the given time.Time and assigns it to the AsOfDate field.
func (o *PiFundMarketDataAPIModelsResponsesFundamentalResponse) SetAsOfDate(v time.Time) {
	o.AsOfDate = &v
}

func (o PiFundMarketDataAPIModelsResponsesFundamentalResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PiFundMarketDataAPIModelsResponsesFundamentalResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.RiskLevel) {
		toSerialize["riskLevel"] = o.RiskLevel
	}
	if !IsNil(o.IsForeignInvestment) {
		toSerialize["isForeignInvestment"] = o.IsForeignInvestment
	}
	if o.InvestmentPolicy.IsSet() {
		toSerialize["investmentPolicy"] = o.InvestmentPolicy.Get()
	}
	if !IsNil(o.HasCurrencyRisk) {
		toSerialize["hasCurrencyRisk"] = o.HasCurrencyRisk
	}
	if o.AssetClassFocus.IsSet() {
		toSerialize["assetClassFocus"] = o.AssetClassFocus.Get()
	}
	if !IsNil(o.AllowSwitchOut) {
		toSerialize["allowSwitchOut"] = o.AllowSwitchOut
	}
	if o.InceptionDate.IsSet() {
		toSerialize["inceptionDate"] = o.InceptionDate.Get()
	}
	if o.Objective.IsSet() {
		toSerialize["objective"] = o.Objective.Get()
	}
	if o.FundSize.IsSet() {
		toSerialize["fundSize"] = o.FundSize.Get()
	}
	if !IsNil(o.IsDividend) {
		toSerialize["isDividend"] = o.IsDividend
	}
	if o.TaxType.IsSet() {
		toSerialize["taxType"] = o.TaxType.Get()
	}
	if o.Currency.IsSet() {
		toSerialize["currency"] = o.Currency.Get()
	}
	if !IsNil(o.AsOfDate) {
		toSerialize["asOfDate"] = o.AsOfDate
	}
	return toSerialize, nil
}

type NullablePiFundMarketDataAPIModelsResponsesFundamentalResponse struct {
	value *PiFundMarketDataAPIModelsResponsesFundamentalResponse
	isSet bool
}

func (v NullablePiFundMarketDataAPIModelsResponsesFundamentalResponse) Get() *PiFundMarketDataAPIModelsResponsesFundamentalResponse {
	return v.value
}

func (v *NullablePiFundMarketDataAPIModelsResponsesFundamentalResponse) Set(val *PiFundMarketDataAPIModelsResponsesFundamentalResponse) {
	v.value = val
	v.isSet = true
}

func (v NullablePiFundMarketDataAPIModelsResponsesFundamentalResponse) IsSet() bool {
	return v.isSet
}

func (v *NullablePiFundMarketDataAPIModelsResponsesFundamentalResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePiFundMarketDataAPIModelsResponsesFundamentalResponse(val *PiFundMarketDataAPIModelsResponsesFundamentalResponse) *NullablePiFundMarketDataAPIModelsResponsesFundamentalResponse {
	return &NullablePiFundMarketDataAPIModelsResponsesFundamentalResponse{value: val, isSet: true}
}

func (v NullablePiFundMarketDataAPIModelsResponsesFundamentalResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePiFundMarketDataAPIModelsResponsesFundamentalResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
