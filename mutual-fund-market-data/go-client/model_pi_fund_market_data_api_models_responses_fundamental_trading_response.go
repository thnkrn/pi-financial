/*
Pi.FundMarketData.API, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package go_client

import (
	"encoding/json"
)

// checks if the PiFundMarketDataAPIModelsResponsesFundamentalTradingResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PiFundMarketDataAPIModelsResponsesFundamentalTradingResponse{}

// PiFundMarketDataAPIModelsResponsesFundamentalTradingResponse struct for PiFundMarketDataAPIModelsResponsesFundamentalTradingResponse
type PiFundMarketDataAPIModelsResponsesFundamentalTradingResponse struct {
	TaxType                   NullableString                           `json:"taxType,omitempty"`
	FundRiskLevel             NullableInt32                            `json:"fundRiskLevel,omitempty"`
	FundType                  *PiFundMarketDataConstantsFundType       `json:"fundType,omitempty"`
	ProjectType               *PiFundMarketDataConstantsProjectType    `json:"projectType,omitempty"`
	IsFatcaAllow              NullableBool                             `json:"isFatcaAllow,omitempty"`
	HasCurrencyRisk           NullableBool                             `json:"hasCurrencyRisk,omitempty"`
	IsDerivative              NullableBool                             `json:"isDerivative,omitempty"`
	HasHealthInsuranceBenefit NullableBool                             `json:"hasHealthInsuranceBenefit,omitempty"`
	InvestorAlerts            []PiFundMarketDataConstantsInvestorAlert `json:"investorAlerts,omitempty"`
}

// NewPiFundMarketDataAPIModelsResponsesFundamentalTradingResponse instantiates a new PiFundMarketDataAPIModelsResponsesFundamentalTradingResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPiFundMarketDataAPIModelsResponsesFundamentalTradingResponse() *PiFundMarketDataAPIModelsResponsesFundamentalTradingResponse {
	this := PiFundMarketDataAPIModelsResponsesFundamentalTradingResponse{}
	return &this
}

// NewPiFundMarketDataAPIModelsResponsesFundamentalTradingResponseWithDefaults instantiates a new PiFundMarketDataAPIModelsResponsesFundamentalTradingResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPiFundMarketDataAPIModelsResponsesFundamentalTradingResponseWithDefaults() *PiFundMarketDataAPIModelsResponsesFundamentalTradingResponse {
	this := PiFundMarketDataAPIModelsResponsesFundamentalTradingResponse{}
	return &this
}

// GetTaxType returns the TaxType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiFundMarketDataAPIModelsResponsesFundamentalTradingResponse) GetTaxType() string {
	if o == nil || IsNil(o.TaxType.Get()) {
		var ret string
		return ret
	}
	return *o.TaxType.Get()
}

// GetTaxTypeOk returns a tuple with the TaxType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiFundMarketDataAPIModelsResponsesFundamentalTradingResponse) GetTaxTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TaxType.Get(), o.TaxType.IsSet()
}

// HasTaxType returns a boolean if a field has been set.
func (o *PiFundMarketDataAPIModelsResponsesFundamentalTradingResponse) HasTaxType() bool {
	if o != nil && o.TaxType.IsSet() {
		return true
	}

	return false
}

// SetTaxType gets a reference to the given NullableString and assigns it to the TaxType field.
func (o *PiFundMarketDataAPIModelsResponsesFundamentalTradingResponse) SetTaxType(v string) {
	o.TaxType.Set(&v)
}

// SetTaxTypeNil sets the value for TaxType to be an explicit nil
func (o *PiFundMarketDataAPIModelsResponsesFundamentalTradingResponse) SetTaxTypeNil() {
	o.TaxType.Set(nil)
}

// UnsetTaxType ensures that no value is present for TaxType, not even an explicit nil
func (o *PiFundMarketDataAPIModelsResponsesFundamentalTradingResponse) UnsetTaxType() {
	o.TaxType.Unset()
}

// GetFundRiskLevel returns the FundRiskLevel field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiFundMarketDataAPIModelsResponsesFundamentalTradingResponse) GetFundRiskLevel() int32 {
	if o == nil || IsNil(o.FundRiskLevel.Get()) {
		var ret int32
		return ret
	}
	return *o.FundRiskLevel.Get()
}

// GetFundRiskLevelOk returns a tuple with the FundRiskLevel field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiFundMarketDataAPIModelsResponsesFundamentalTradingResponse) GetFundRiskLevelOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.FundRiskLevel.Get(), o.FundRiskLevel.IsSet()
}

// HasFundRiskLevel returns a boolean if a field has been set.
func (o *PiFundMarketDataAPIModelsResponsesFundamentalTradingResponse) HasFundRiskLevel() bool {
	if o != nil && o.FundRiskLevel.IsSet() {
		return true
	}

	return false
}

// SetFundRiskLevel gets a reference to the given NullableInt32 and assigns it to the FundRiskLevel field.
func (o *PiFundMarketDataAPIModelsResponsesFundamentalTradingResponse) SetFundRiskLevel(v int32) {
	o.FundRiskLevel.Set(&v)
}

// SetFundRiskLevelNil sets the value for FundRiskLevel to be an explicit nil
func (o *PiFundMarketDataAPIModelsResponsesFundamentalTradingResponse) SetFundRiskLevelNil() {
	o.FundRiskLevel.Set(nil)
}

// UnsetFundRiskLevel ensures that no value is present for FundRiskLevel, not even an explicit nil
func (o *PiFundMarketDataAPIModelsResponsesFundamentalTradingResponse) UnsetFundRiskLevel() {
	o.FundRiskLevel.Unset()
}

// GetFundType returns the FundType field value if set, zero value otherwise.
func (o *PiFundMarketDataAPIModelsResponsesFundamentalTradingResponse) GetFundType() PiFundMarketDataConstantsFundType {
	if o == nil || IsNil(o.FundType) {
		var ret PiFundMarketDataConstantsFundType
		return ret
	}
	return *o.FundType
}

// GetFundTypeOk returns a tuple with the FundType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PiFundMarketDataAPIModelsResponsesFundamentalTradingResponse) GetFundTypeOk() (*PiFundMarketDataConstantsFundType, bool) {
	if o == nil || IsNil(o.FundType) {
		return nil, false
	}
	return o.FundType, true
}

// HasFundType returns a boolean if a field has been set.
func (o *PiFundMarketDataAPIModelsResponsesFundamentalTradingResponse) HasFundType() bool {
	if o != nil && !IsNil(o.FundType) {
		return true
	}

	return false
}

// SetFundType gets a reference to the given PiFundMarketDataConstantsFundType and assigns it to the FundType field.
func (o *PiFundMarketDataAPIModelsResponsesFundamentalTradingResponse) SetFundType(v PiFundMarketDataConstantsFundType) {
	o.FundType = &v
}

// GetProjectType returns the ProjectType field value if set, zero value otherwise.
func (o *PiFundMarketDataAPIModelsResponsesFundamentalTradingResponse) GetProjectType() PiFundMarketDataConstantsProjectType {
	if o == nil || IsNil(o.ProjectType) {
		var ret PiFundMarketDataConstantsProjectType
		return ret
	}
	return *o.ProjectType
}

// GetProjectTypeOk returns a tuple with the ProjectType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PiFundMarketDataAPIModelsResponsesFundamentalTradingResponse) GetProjectTypeOk() (*PiFundMarketDataConstantsProjectType, bool) {
	if o == nil || IsNil(o.ProjectType) {
		return nil, false
	}
	return o.ProjectType, true
}

// HasProjectType returns a boolean if a field has been set.
func (o *PiFundMarketDataAPIModelsResponsesFundamentalTradingResponse) HasProjectType() bool {
	if o != nil && !IsNil(o.ProjectType) {
		return true
	}

	return false
}

// SetProjectType gets a reference to the given PiFundMarketDataConstantsProjectType and assigns it to the ProjectType field.
func (o *PiFundMarketDataAPIModelsResponsesFundamentalTradingResponse) SetProjectType(v PiFundMarketDataConstantsProjectType) {
	o.ProjectType = &v
}

// GetIsFatcaAllow returns the IsFatcaAllow field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiFundMarketDataAPIModelsResponsesFundamentalTradingResponse) GetIsFatcaAllow() bool {
	if o == nil || IsNil(o.IsFatcaAllow.Get()) {
		var ret bool
		return ret
	}
	return *o.IsFatcaAllow.Get()
}

// GetIsFatcaAllowOk returns a tuple with the IsFatcaAllow field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiFundMarketDataAPIModelsResponsesFundamentalTradingResponse) GetIsFatcaAllowOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.IsFatcaAllow.Get(), o.IsFatcaAllow.IsSet()
}

// HasIsFatcaAllow returns a boolean if a field has been set.
func (o *PiFundMarketDataAPIModelsResponsesFundamentalTradingResponse) HasIsFatcaAllow() bool {
	if o != nil && o.IsFatcaAllow.IsSet() {
		return true
	}

	return false
}

// SetIsFatcaAllow gets a reference to the given NullableBool and assigns it to the IsFatcaAllow field.
func (o *PiFundMarketDataAPIModelsResponsesFundamentalTradingResponse) SetIsFatcaAllow(v bool) {
	o.IsFatcaAllow.Set(&v)
}

// SetIsFatcaAllowNil sets the value for IsFatcaAllow to be an explicit nil
func (o *PiFundMarketDataAPIModelsResponsesFundamentalTradingResponse) SetIsFatcaAllowNil() {
	o.IsFatcaAllow.Set(nil)
}

// UnsetIsFatcaAllow ensures that no value is present for IsFatcaAllow, not even an explicit nil
func (o *PiFundMarketDataAPIModelsResponsesFundamentalTradingResponse) UnsetIsFatcaAllow() {
	o.IsFatcaAllow.Unset()
}

// GetHasCurrencyRisk returns the HasCurrencyRisk field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiFundMarketDataAPIModelsResponsesFundamentalTradingResponse) GetHasCurrencyRisk() bool {
	if o == nil || IsNil(o.HasCurrencyRisk.Get()) {
		var ret bool
		return ret
	}
	return *o.HasCurrencyRisk.Get()
}

// GetHasCurrencyRiskOk returns a tuple with the HasCurrencyRisk field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiFundMarketDataAPIModelsResponsesFundamentalTradingResponse) GetHasCurrencyRiskOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.HasCurrencyRisk.Get(), o.HasCurrencyRisk.IsSet()
}

// HasHasCurrencyRisk returns a boolean if a field has been set.
func (o *PiFundMarketDataAPIModelsResponsesFundamentalTradingResponse) HasHasCurrencyRisk() bool {
	if o != nil && o.HasCurrencyRisk.IsSet() {
		return true
	}

	return false
}

// SetHasCurrencyRisk gets a reference to the given NullableBool and assigns it to the HasCurrencyRisk field.
func (o *PiFundMarketDataAPIModelsResponsesFundamentalTradingResponse) SetHasCurrencyRisk(v bool) {
	o.HasCurrencyRisk.Set(&v)
}

// SetHasCurrencyRiskNil sets the value for HasCurrencyRisk to be an explicit nil
func (o *PiFundMarketDataAPIModelsResponsesFundamentalTradingResponse) SetHasCurrencyRiskNil() {
	o.HasCurrencyRisk.Set(nil)
}

// UnsetHasCurrencyRisk ensures that no value is present for HasCurrencyRisk, not even an explicit nil
func (o *PiFundMarketDataAPIModelsResponsesFundamentalTradingResponse) UnsetHasCurrencyRisk() {
	o.HasCurrencyRisk.Unset()
}

// GetIsDerivative returns the IsDerivative field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiFundMarketDataAPIModelsResponsesFundamentalTradingResponse) GetIsDerivative() bool {
	if o == nil || IsNil(o.IsDerivative.Get()) {
		var ret bool
		return ret
	}
	return *o.IsDerivative.Get()
}

// GetIsDerivativeOk returns a tuple with the IsDerivative field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiFundMarketDataAPIModelsResponsesFundamentalTradingResponse) GetIsDerivativeOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.IsDerivative.Get(), o.IsDerivative.IsSet()
}

// HasIsDerivative returns a boolean if a field has been set.
func (o *PiFundMarketDataAPIModelsResponsesFundamentalTradingResponse) HasIsDerivative() bool {
	if o != nil && o.IsDerivative.IsSet() {
		return true
	}

	return false
}

// SetIsDerivative gets a reference to the given NullableBool and assigns it to the IsDerivative field.
func (o *PiFundMarketDataAPIModelsResponsesFundamentalTradingResponse) SetIsDerivative(v bool) {
	o.IsDerivative.Set(&v)
}

// SetIsDerivativeNil sets the value for IsDerivative to be an explicit nil
func (o *PiFundMarketDataAPIModelsResponsesFundamentalTradingResponse) SetIsDerivativeNil() {
	o.IsDerivative.Set(nil)
}

// UnsetIsDerivative ensures that no value is present for IsDerivative, not even an explicit nil
func (o *PiFundMarketDataAPIModelsResponsesFundamentalTradingResponse) UnsetIsDerivative() {
	o.IsDerivative.Unset()
}

// GetHasHealthInsuranceBenefit returns the HasHealthInsuranceBenefit field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiFundMarketDataAPIModelsResponsesFundamentalTradingResponse) GetHasHealthInsuranceBenefit() bool {
	if o == nil || IsNil(o.HasHealthInsuranceBenefit.Get()) {
		var ret bool
		return ret
	}
	return *o.HasHealthInsuranceBenefit.Get()
}

// GetHasHealthInsuranceBenefitOk returns a tuple with the HasHealthInsuranceBenefit field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiFundMarketDataAPIModelsResponsesFundamentalTradingResponse) GetHasHealthInsuranceBenefitOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.HasHealthInsuranceBenefit.Get(), o.HasHealthInsuranceBenefit.IsSet()
}

// HasHasHealthInsuranceBenefit returns a boolean if a field has been set.
func (o *PiFundMarketDataAPIModelsResponsesFundamentalTradingResponse) HasHasHealthInsuranceBenefit() bool {
	if o != nil && o.HasHealthInsuranceBenefit.IsSet() {
		return true
	}

	return false
}

// SetHasHealthInsuranceBenefit gets a reference to the given NullableBool and assigns it to the HasHealthInsuranceBenefit field.
func (o *PiFundMarketDataAPIModelsResponsesFundamentalTradingResponse) SetHasHealthInsuranceBenefit(v bool) {
	o.HasHealthInsuranceBenefit.Set(&v)
}

// SetHasHealthInsuranceBenefitNil sets the value for HasHealthInsuranceBenefit to be an explicit nil
func (o *PiFundMarketDataAPIModelsResponsesFundamentalTradingResponse) SetHasHealthInsuranceBenefitNil() {
	o.HasHealthInsuranceBenefit.Set(nil)
}

// UnsetHasHealthInsuranceBenefit ensures that no value is present for HasHealthInsuranceBenefit, not even an explicit nil
func (o *PiFundMarketDataAPIModelsResponsesFundamentalTradingResponse) UnsetHasHealthInsuranceBenefit() {
	o.HasHealthInsuranceBenefit.Unset()
}

// GetInvestorAlerts returns the InvestorAlerts field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiFundMarketDataAPIModelsResponsesFundamentalTradingResponse) GetInvestorAlerts() []PiFundMarketDataConstantsInvestorAlert {
	if o == nil {
		var ret []PiFundMarketDataConstantsInvestorAlert
		return ret
	}
	return o.InvestorAlerts
}

// GetInvestorAlertsOk returns a tuple with the InvestorAlerts field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiFundMarketDataAPIModelsResponsesFundamentalTradingResponse) GetInvestorAlertsOk() ([]PiFundMarketDataConstantsInvestorAlert, bool) {
	if o == nil || IsNil(o.InvestorAlerts) {
		return nil, false
	}
	return o.InvestorAlerts, true
}

// HasInvestorAlerts returns a boolean if a field has been set.
func (o *PiFundMarketDataAPIModelsResponsesFundamentalTradingResponse) HasInvestorAlerts() bool {
	if o != nil && !IsNil(o.InvestorAlerts) {
		return true
	}

	return false
}

// SetInvestorAlerts gets a reference to the given []PiFundMarketDataConstantsInvestorAlert and assigns it to the InvestorAlerts field.
func (o *PiFundMarketDataAPIModelsResponsesFundamentalTradingResponse) SetInvestorAlerts(v []PiFundMarketDataConstantsInvestorAlert) {
	o.InvestorAlerts = v
}

func (o PiFundMarketDataAPIModelsResponsesFundamentalTradingResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PiFundMarketDataAPIModelsResponsesFundamentalTradingResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.TaxType.IsSet() {
		toSerialize["taxType"] = o.TaxType.Get()
	}
	if o.FundRiskLevel.IsSet() {
		toSerialize["fundRiskLevel"] = o.FundRiskLevel.Get()
	}
	if !IsNil(o.FundType) {
		toSerialize["fundType"] = o.FundType
	}
	if !IsNil(o.ProjectType) {
		toSerialize["projectType"] = o.ProjectType
	}
	if o.IsFatcaAllow.IsSet() {
		toSerialize["isFatcaAllow"] = o.IsFatcaAllow.Get()
	}
	if o.HasCurrencyRisk.IsSet() {
		toSerialize["hasCurrencyRisk"] = o.HasCurrencyRisk.Get()
	}
	if o.IsDerivative.IsSet() {
		toSerialize["isDerivative"] = o.IsDerivative.Get()
	}
	if o.HasHealthInsuranceBenefit.IsSet() {
		toSerialize["hasHealthInsuranceBenefit"] = o.HasHealthInsuranceBenefit.Get()
	}
	if o.InvestorAlerts != nil {
		toSerialize["investorAlerts"] = o.InvestorAlerts
	}
	return toSerialize, nil
}

type NullablePiFundMarketDataAPIModelsResponsesFundamentalTradingResponse struct {
	value *PiFundMarketDataAPIModelsResponsesFundamentalTradingResponse
	isSet bool
}

func (v NullablePiFundMarketDataAPIModelsResponsesFundamentalTradingResponse) Get() *PiFundMarketDataAPIModelsResponsesFundamentalTradingResponse {
	return v.value
}

func (v *NullablePiFundMarketDataAPIModelsResponsesFundamentalTradingResponse) Set(val *PiFundMarketDataAPIModelsResponsesFundamentalTradingResponse) {
	v.value = val
	v.isSet = true
}

func (v NullablePiFundMarketDataAPIModelsResponsesFundamentalTradingResponse) IsSet() bool {
	return v.isSet
}

func (v *NullablePiFundMarketDataAPIModelsResponsesFundamentalTradingResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePiFundMarketDataAPIModelsResponsesFundamentalTradingResponse(val *PiFundMarketDataAPIModelsResponsesFundamentalTradingResponse) *NullablePiFundMarketDataAPIModelsResponsesFundamentalTradingResponse {
	return &NullablePiFundMarketDataAPIModelsResponsesFundamentalTradingResponse{value: val, isSet: true}
}

func (v NullablePiFundMarketDataAPIModelsResponsesFundamentalTradingResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePiFundMarketDataAPIModelsResponsesFundamentalTradingResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
