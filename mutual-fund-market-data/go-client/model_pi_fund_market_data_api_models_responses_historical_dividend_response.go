/*
Pi.FundMarketData.API, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package go_client

import (
	"encoding/json"
	"time"
)

// checks if the PiFundMarketDataAPIModelsResponsesHistoricalDividendResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PiFundMarketDataAPIModelsResponsesHistoricalDividendResponse{}

// PiFundMarketDataAPIModelsResponsesHistoricalDividendResponse struct for PiFundMarketDataAPIModelsResponsesHistoricalDividendResponse
type PiFundMarketDataAPIModelsResponsesHistoricalDividendResponse struct {
	PayDate  *time.Time `json:"payDate,omitempty"`
	Dividend *float64   `json:"dividend,omitempty"`
}

// NewPiFundMarketDataAPIModelsResponsesHistoricalDividendResponse instantiates a new PiFundMarketDataAPIModelsResponsesHistoricalDividendResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPiFundMarketDataAPIModelsResponsesHistoricalDividendResponse() *PiFundMarketDataAPIModelsResponsesHistoricalDividendResponse {
	this := PiFundMarketDataAPIModelsResponsesHistoricalDividendResponse{}
	return &this
}

// NewPiFundMarketDataAPIModelsResponsesHistoricalDividendResponseWithDefaults instantiates a new PiFundMarketDataAPIModelsResponsesHistoricalDividendResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPiFundMarketDataAPIModelsResponsesHistoricalDividendResponseWithDefaults() *PiFundMarketDataAPIModelsResponsesHistoricalDividendResponse {
	this := PiFundMarketDataAPIModelsResponsesHistoricalDividendResponse{}
	return &this
}

// GetPayDate returns the PayDate field value if set, zero value otherwise.
func (o *PiFundMarketDataAPIModelsResponsesHistoricalDividendResponse) GetPayDate() time.Time {
	if o == nil || IsNil(o.PayDate) {
		var ret time.Time
		return ret
	}
	return *o.PayDate
}

// GetPayDateOk returns a tuple with the PayDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PiFundMarketDataAPIModelsResponsesHistoricalDividendResponse) GetPayDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.PayDate) {
		return nil, false
	}
	return o.PayDate, true
}

// HasPayDate returns a boolean if a field has been set.
func (o *PiFundMarketDataAPIModelsResponsesHistoricalDividendResponse) HasPayDate() bool {
	if o != nil && !IsNil(o.PayDate) {
		return true
	}

	return false
}

// SetPayDate gets a reference to the given time.Time and assigns it to the PayDate field.
func (o *PiFundMarketDataAPIModelsResponsesHistoricalDividendResponse) SetPayDate(v time.Time) {
	o.PayDate = &v
}

// GetDividend returns the Dividend field value if set, zero value otherwise.
func (o *PiFundMarketDataAPIModelsResponsesHistoricalDividendResponse) GetDividend() float64 {
	if o == nil || IsNil(o.Dividend) {
		var ret float64
		return ret
	}
	return *o.Dividend
}

// GetDividendOk returns a tuple with the Dividend field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PiFundMarketDataAPIModelsResponsesHistoricalDividendResponse) GetDividendOk() (*float64, bool) {
	if o == nil || IsNil(o.Dividend) {
		return nil, false
	}
	return o.Dividend, true
}

// HasDividend returns a boolean if a field has been set.
func (o *PiFundMarketDataAPIModelsResponsesHistoricalDividendResponse) HasDividend() bool {
	if o != nil && !IsNil(o.Dividend) {
		return true
	}

	return false
}

// SetDividend gets a reference to the given float64 and assigns it to the Dividend field.
func (o *PiFundMarketDataAPIModelsResponsesHistoricalDividendResponse) SetDividend(v float64) {
	o.Dividend = &v
}

func (o PiFundMarketDataAPIModelsResponsesHistoricalDividendResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PiFundMarketDataAPIModelsResponsesHistoricalDividendResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.PayDate) {
		toSerialize["payDate"] = o.PayDate
	}
	if !IsNil(o.Dividend) {
		toSerialize["dividend"] = o.Dividend
	}
	return toSerialize, nil
}

type NullablePiFundMarketDataAPIModelsResponsesHistoricalDividendResponse struct {
	value *PiFundMarketDataAPIModelsResponsesHistoricalDividendResponse
	isSet bool
}

func (v NullablePiFundMarketDataAPIModelsResponsesHistoricalDividendResponse) Get() *PiFundMarketDataAPIModelsResponsesHistoricalDividendResponse {
	return v.value
}

func (v *NullablePiFundMarketDataAPIModelsResponsesHistoricalDividendResponse) Set(val *PiFundMarketDataAPIModelsResponsesHistoricalDividendResponse) {
	v.value = val
	v.isSet = true
}

func (v NullablePiFundMarketDataAPIModelsResponsesHistoricalDividendResponse) IsSet() bool {
	return v.isSet
}

func (v *NullablePiFundMarketDataAPIModelsResponsesHistoricalDividendResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePiFundMarketDataAPIModelsResponsesHistoricalDividendResponse(val *PiFundMarketDataAPIModelsResponsesHistoricalDividendResponse) *NullablePiFundMarketDataAPIModelsResponsesHistoricalDividendResponse {
	return &NullablePiFundMarketDataAPIModelsResponsesHistoricalDividendResponse{value: val, isSet: true}
}

func (v NullablePiFundMarketDataAPIModelsResponsesHistoricalDividendResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePiFundMarketDataAPIModelsResponsesHistoricalDividendResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
