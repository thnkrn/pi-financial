// <auto-generated />
using System;
using System.ComponentModel.DataAnnotations;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Pi.BackofficeService.Infrastructure;

#nullable disable

namespace Pi.BackofficeService.Migrations.Migrations.BackofficeDb
{
    [DbContext(typeof(BackofficeDbContext))]
    [Migration("20231003030446_PopulateBankChannels")]
    partial class PopulateBankChannels
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseCollation("utf8mb4_0900_ai_ci")
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Pi.BackofficeService.Domain.AggregateModels.ResponseCodeAggregate.ResponseCode", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .HasColumnName("id");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("description");

                    b.Property<string>("Machine")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("machine");

                    b.Property<string>("ProductType")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("product_type");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("state");

                    b.Property<string>("Suggestion")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("suggestion");

                    b.HasKey("Id")
                        .HasName("pk_response_codes");

                    b.ToTable("response_codes", (string)null);
                });

            modelBuilder.Entity("Pi.BackofficeService.Domain.AggregateModels.ResponseCodeAggregate.ResponseCodeAction", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .HasColumnName("id");

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("action");

                    b.Property<Guid>("ResponseCodeId")
                        .HasColumnType("char(36)")
                        .HasColumnName("response_code_id");

                    b.HasKey("Id")
                        .HasName("pk_response_code_actions");

                    b.HasIndex("ResponseCodeId")
                        .HasDatabaseName("ix_response_code_actions_response_code_id");

                    b.ToTable("response_code_actions", (string)null);
                });

            modelBuilder.Entity("Pi.BackofficeService.Domain.AggregateModels.TransactionAggregate.Bank", b =>
                {
                    b.Property<string>("Abbreviation")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("abbreviation");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("code");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("name");

                    b.ToTable("banks", (string)null);
                });

            modelBuilder.Entity("Pi.BackofficeService.Domain.AggregateModels.TransactionAggregate.BankChannel", b =>
                {
                    b.Property<string>("BankCode")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("bank_code");

                    b.Property<string>("Channel")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("channel");

                    b.ToTable("bank_channels", (string)null);
                });

            modelBuilder.Entity("Pi.BackofficeService.Domain.AggregateModels.User.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_at");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("email")
                        .HasAnnotation("Microsoft.EntityFrameworkCore.DataEncryption.IsEncrypted", true)
                        .HasAnnotation("Microsoft.EntityFrameworkCore.DataEncryption.StorageFormat", StorageFormat.Default);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("first_name")
                        .HasAnnotation("Microsoft.EntityFrameworkCore.DataEncryption.IsEncrypted", true)
                        .HasAnnotation("Microsoft.EntityFrameworkCore.DataEncryption.StorageFormat", StorageFormat.Default);

                    b.Property<Guid>("IamUserId")
                        .HasColumnType("char(36)")
                        .HasColumnName("iam_user_id");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("last_name")
                        .HasAnnotation("Microsoft.EntityFrameworkCore.DataEncryption.IsEncrypted", true)
                        .HasAnnotation("Microsoft.EntityFrameworkCore.DataEncryption.StorageFormat", StorageFormat.Default);

                    b.HasKey("Id")
                        .HasName("pk_users");

                    b.ToTable("users", (string)null);
                });

            modelBuilder.Entity("Pi.BackofficeService.Domain.AggregateModels.ResponseCodeAggregate.ResponseCodeAction", b =>
                {
                    b.HasOne("Pi.BackofficeService.Domain.AggregateModels.ResponseCodeAggregate.ResponseCode", "ResponseCode")
                        .WithMany("Actions")
                        .HasForeignKey("ResponseCodeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_response_code_actions_response_codes_response_code_id");

                    b.Navigation("ResponseCode");
                });

            modelBuilder.Entity("Pi.BackofficeService.Domain.AggregateModels.ResponseCodeAggregate.ResponseCode", b =>
                {
                    b.Navigation("Actions");
                });
#pragma warning restore 612, 618
        }
    }
}
