// <auto-generated />
using System;
using System.ComponentModel.DataAnnotations;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Pi.BackofficeService.Infrastructure;

#nullable disable

namespace Pi.BackofficeService.Migrations.Migrations.TicketDb
{
    [DbContext(typeof(TicketDbContext))]
    [Migration("20230609075931_FixTransactionTypeColumn")]
    partial class FixTransactionTypeColumn
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Pi.BackofficeService.Domain.AggregateModels.TicketAggregate.TicketState", b =>
                {
                    b.Property<Guid>("CorrelationId")
                        .HasColumnType("char(36)")
                        .HasColumnName("correlation_id");

                    b.Property<Guid?>("CheckerId")
                        .HasColumnType("char(36)")
                        .HasColumnName("checker_id");

                    b.Property<string>("CheckerRemark")
                        .HasColumnType("longtext")
                        .HasColumnName("checker_remark");

                    b.Property<string>("CurrentState")
                        .HasColumnType("longtext")
                        .HasColumnName("current_state");

                    b.Property<string>("CustomerName")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("customer_name")
                        .HasAnnotation("Microsoft.EntityFrameworkCore.DataEncryption.IsEncrypted", true)
                        .HasAnnotation("Microsoft.EntityFrameworkCore.DataEncryption.StorageFormat", StorageFormat.Default);

                    b.Property<Guid?>("ErrorMappingId")
                        .HasColumnType("char(36)")
                        .HasColumnName("error_mapping_id");

                    b.Property<Guid?>("MakerId")
                        .HasColumnType("char(36)")
                        .HasColumnName("maker_id");

                    b.Property<string>("MakerRemark")
                        .HasColumnType("longtext")
                        .HasColumnName("maker_remark");

                    b.Property<string>("Method")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("method");

                    b.Property<Guid?>("RequestId")
                        .HasColumnType("char(36)")
                        .HasColumnName("request_id");

                    b.Property<string>("ResponseAddress")
                        .HasColumnType("longtext")
                        .HasColumnName("response_address");

                    b.Property<string>("Status")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("status");

                    b.Property<Guid>("TransactionId")
                        .HasColumnType("char(36)")
                        .HasColumnName("transaction_id");

                    b.Property<string>("TransactionNo")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("transaction_no");

                    b.Property<string>("TransactionType")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("transaction_type");

                    b.HasKey("CorrelationId")
                        .HasName("pk_ticket_state");

                    b.ToTable("ticket_state", (string)null);
                });
#pragma warning restore 612, 618
        }
    }
}
