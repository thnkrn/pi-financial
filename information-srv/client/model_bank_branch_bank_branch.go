/*
Information API

Contain Generic Information.

API version: 1.0
Contact: support@swagger.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the BankBranchBankBranch type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BankBranchBankBranch{}

// BankBranchBankBranch struct for BankBranchBankBranch
type BankBranchBankBranch struct {
	BankBranchCode *string `json:"bank_branch_code,omitempty"`
	BankCode       *string `json:"bank_code,omitempty"`
	BranchName     *string `json:"branch_name,omitempty"`
	Id             *string `json:"id,omitempty"`
}

// NewBankBranchBankBranch instantiates a new BankBranchBankBranch object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBankBranchBankBranch() *BankBranchBankBranch {
	this := BankBranchBankBranch{}
	return &this
}

// NewBankBranchBankBranchWithDefaults instantiates a new BankBranchBankBranch object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBankBranchBankBranchWithDefaults() *BankBranchBankBranch {
	this := BankBranchBankBranch{}
	return &this
}

// GetBankBranchCode returns the BankBranchCode field value if set, zero value otherwise.
func (o *BankBranchBankBranch) GetBankBranchCode() string {
	if o == nil || IsNil(o.BankBranchCode) {
		var ret string
		return ret
	}
	return *o.BankBranchCode
}

// GetBankBranchCodeOk returns a tuple with the BankBranchCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BankBranchBankBranch) GetBankBranchCodeOk() (*string, bool) {
	if o == nil || IsNil(o.BankBranchCode) {
		return nil, false
	}
	return o.BankBranchCode, true
}

// HasBankBranchCode returns a boolean if a field has been set.
func (o *BankBranchBankBranch) HasBankBranchCode() bool {
	if o != nil && !IsNil(o.BankBranchCode) {
		return true
	}

	return false
}

// SetBankBranchCode gets a reference to the given string and assigns it to the BankBranchCode field.
func (o *BankBranchBankBranch) SetBankBranchCode(v string) {
	o.BankBranchCode = &v
}

// GetBankCode returns the BankCode field value if set, zero value otherwise.
func (o *BankBranchBankBranch) GetBankCode() string {
	if o == nil || IsNil(o.BankCode) {
		var ret string
		return ret
	}
	return *o.BankCode
}

// GetBankCodeOk returns a tuple with the BankCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BankBranchBankBranch) GetBankCodeOk() (*string, bool) {
	if o == nil || IsNil(o.BankCode) {
		return nil, false
	}
	return o.BankCode, true
}

// HasBankCode returns a boolean if a field has been set.
func (o *BankBranchBankBranch) HasBankCode() bool {
	if o != nil && !IsNil(o.BankCode) {
		return true
	}

	return false
}

// SetBankCode gets a reference to the given string and assigns it to the BankCode field.
func (o *BankBranchBankBranch) SetBankCode(v string) {
	o.BankCode = &v
}

// GetBranchName returns the BranchName field value if set, zero value otherwise.
func (o *BankBranchBankBranch) GetBranchName() string {
	if o == nil || IsNil(o.BranchName) {
		var ret string
		return ret
	}
	return *o.BranchName
}

// GetBranchNameOk returns a tuple with the BranchName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BankBranchBankBranch) GetBranchNameOk() (*string, bool) {
	if o == nil || IsNil(o.BranchName) {
		return nil, false
	}
	return o.BranchName, true
}

// HasBranchName returns a boolean if a field has been set.
func (o *BankBranchBankBranch) HasBranchName() bool {
	if o != nil && !IsNil(o.BranchName) {
		return true
	}

	return false
}

// SetBranchName gets a reference to the given string and assigns it to the BranchName field.
func (o *BankBranchBankBranch) SetBranchName(v string) {
	o.BranchName = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *BankBranchBankBranch) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BankBranchBankBranch) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *BankBranchBankBranch) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *BankBranchBankBranch) SetId(v string) {
	o.Id = &v
}

func (o BankBranchBankBranch) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BankBranchBankBranch) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.BankBranchCode) {
		toSerialize["bank_branch_code"] = o.BankBranchCode
	}
	if !IsNil(o.BankCode) {
		toSerialize["bank_code"] = o.BankCode
	}
	if !IsNil(o.BranchName) {
		toSerialize["branch_name"] = o.BranchName
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	return toSerialize, nil
}

type NullableBankBranchBankBranch struct {
	value *BankBranchBankBranch
	isSet bool
}

func (v NullableBankBranchBankBranch) Get() *BankBranchBankBranch {
	return v.value
}

func (v *NullableBankBranchBankBranch) Set(val *BankBranchBankBranch) {
	v.value = val
	v.isSet = true
}

func (v NullableBankBranchBankBranch) IsSet() bool {
	return v.isSet
}

func (v *NullableBankBranchBankBranch) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBankBranchBankBranch(val *BankBranchBankBranch) *NullableBankBranchBankBranch {
	return &NullableBankBranchBankBranch{value: val, isSet: true}
}

func (v NullableBankBranchBankBranch) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBankBranchBankBranch) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
