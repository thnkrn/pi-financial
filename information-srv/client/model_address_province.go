/*
Information API

Contain Generic Information.

API version: 1.0
Contact: support@swagger.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the AddressProvince type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AddressProvince{}

// AddressProvince struct for AddressProvince
type AddressProvince struct {
	Code       *string `json:"code,omitempty"`
	IsoCode    *string `json:"iso_code,omitempty"`
	ProvinceEn *string `json:"province_en,omitempty"`
	ProvinceTh *string `json:"province_th,omitempty"`
}

// NewAddressProvince instantiates a new AddressProvince object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddressProvince() *AddressProvince {
	this := AddressProvince{}
	return &this
}

// NewAddressProvinceWithDefaults instantiates a new AddressProvince object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddressProvinceWithDefaults() *AddressProvince {
	this := AddressProvince{}
	return &this
}

// GetCode returns the Code field value if set, zero value otherwise.
func (o *AddressProvince) GetCode() string {
	if o == nil || IsNil(o.Code) {
		var ret string
		return ret
	}
	return *o.Code
}

// GetCodeOk returns a tuple with the Code field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddressProvince) GetCodeOk() (*string, bool) {
	if o == nil || IsNil(o.Code) {
		return nil, false
	}
	return o.Code, true
}

// HasCode returns a boolean if a field has been set.
func (o *AddressProvince) HasCode() bool {
	if o != nil && !IsNil(o.Code) {
		return true
	}

	return false
}

// SetCode gets a reference to the given string and assigns it to the Code field.
func (o *AddressProvince) SetCode(v string) {
	o.Code = &v
}

// GetIsoCode returns the IsoCode field value if set, zero value otherwise.
func (o *AddressProvince) GetIsoCode() string {
	if o == nil || IsNil(o.IsoCode) {
		var ret string
		return ret
	}
	return *o.IsoCode
}

// GetIsoCodeOk returns a tuple with the IsoCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddressProvince) GetIsoCodeOk() (*string, bool) {
	if o == nil || IsNil(o.IsoCode) {
		return nil, false
	}
	return o.IsoCode, true
}

// HasIsoCode returns a boolean if a field has been set.
func (o *AddressProvince) HasIsoCode() bool {
	if o != nil && !IsNil(o.IsoCode) {
		return true
	}

	return false
}

// SetIsoCode gets a reference to the given string and assigns it to the IsoCode field.
func (o *AddressProvince) SetIsoCode(v string) {
	o.IsoCode = &v
}

// GetProvinceEn returns the ProvinceEn field value if set, zero value otherwise.
func (o *AddressProvince) GetProvinceEn() string {
	if o == nil || IsNil(o.ProvinceEn) {
		var ret string
		return ret
	}
	return *o.ProvinceEn
}

// GetProvinceEnOk returns a tuple with the ProvinceEn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddressProvince) GetProvinceEnOk() (*string, bool) {
	if o == nil || IsNil(o.ProvinceEn) {
		return nil, false
	}
	return o.ProvinceEn, true
}

// HasProvinceEn returns a boolean if a field has been set.
func (o *AddressProvince) HasProvinceEn() bool {
	if o != nil && !IsNil(o.ProvinceEn) {
		return true
	}

	return false
}

// SetProvinceEn gets a reference to the given string and assigns it to the ProvinceEn field.
func (o *AddressProvince) SetProvinceEn(v string) {
	o.ProvinceEn = &v
}

// GetProvinceTh returns the ProvinceTh field value if set, zero value otherwise.
func (o *AddressProvince) GetProvinceTh() string {
	if o == nil || IsNil(o.ProvinceTh) {
		var ret string
		return ret
	}
	return *o.ProvinceTh
}

// GetProvinceThOk returns a tuple with the ProvinceTh field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddressProvince) GetProvinceThOk() (*string, bool) {
	if o == nil || IsNil(o.ProvinceTh) {
		return nil, false
	}
	return o.ProvinceTh, true
}

// HasProvinceTh returns a boolean if a field has been set.
func (o *AddressProvince) HasProvinceTh() bool {
	if o != nil && !IsNil(o.ProvinceTh) {
		return true
	}

	return false
}

// SetProvinceTh gets a reference to the given string and assigns it to the ProvinceTh field.
func (o *AddressProvince) SetProvinceTh(v string) {
	o.ProvinceTh = &v
}

func (o AddressProvince) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AddressProvince) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Code) {
		toSerialize["code"] = o.Code
	}
	if !IsNil(o.IsoCode) {
		toSerialize["iso_code"] = o.IsoCode
	}
	if !IsNil(o.ProvinceEn) {
		toSerialize["province_en"] = o.ProvinceEn
	}
	if !IsNil(o.ProvinceTh) {
		toSerialize["province_th"] = o.ProvinceTh
	}
	return toSerialize, nil
}

type NullableAddressProvince struct {
	value *AddressProvince
	isSet bool
}

func (v NullableAddressProvince) Get() *AddressProvince {
	return v.value
}

func (v *NullableAddressProvince) Set(val *AddressProvince) {
	v.value = val
	v.isSet = true
}

func (v NullableAddressProvince) IsSet() bool {
	return v.isSet
}

func (v *NullableAddressProvince) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddressProvince(val *AddressProvince) *NullableAddressProvince {
	return &NullableAddressProvince{value: val, isSet: true}
}

func (v NullableAddressProvince) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddressProvince) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
