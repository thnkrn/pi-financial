/*
Information API

Contain Generic Information.

API version: 1.0
Contact: support@swagger.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the ProductProduct type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ProductProduct{}

// ProductProduct struct for ProductProduct
type ProductProduct struct {
	AccountType      *string `json:"account_type,omitempty"`
	AccountTypeCode  *string `json:"account_type_code,omitempty"`
	ExchangeMarketId *string `json:"exchange_market_id,omitempty"`
	Id               *string `json:"id,omitempty"`
	Name             *string `json:"name,omitempty"`
	Suffix           *string `json:"suffix,omitempty"`
	TransactionType  *string `json:"transaction_type,omitempty"`
}

// NewProductProduct instantiates a new ProductProduct object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProductProduct() *ProductProduct {
	this := ProductProduct{}
	return &this
}

// NewProductProductWithDefaults instantiates a new ProductProduct object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProductProductWithDefaults() *ProductProduct {
	this := ProductProduct{}
	return &this
}

// GetAccountType returns the AccountType field value if set, zero value otherwise.
func (o *ProductProduct) GetAccountType() string {
	if o == nil || IsNil(o.AccountType) {
		var ret string
		return ret
	}
	return *o.AccountType
}

// GetAccountTypeOk returns a tuple with the AccountType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductProduct) GetAccountTypeOk() (*string, bool) {
	if o == nil || IsNil(o.AccountType) {
		return nil, false
	}
	return o.AccountType, true
}

// HasAccountType returns a boolean if a field has been set.
func (o *ProductProduct) HasAccountType() bool {
	if o != nil && !IsNil(o.AccountType) {
		return true
	}

	return false
}

// SetAccountType gets a reference to the given string and assigns it to the AccountType field.
func (o *ProductProduct) SetAccountType(v string) {
	o.AccountType = &v
}

// GetAccountTypeCode returns the AccountTypeCode field value if set, zero value otherwise.
func (o *ProductProduct) GetAccountTypeCode() string {
	if o == nil || IsNil(o.AccountTypeCode) {
		var ret string
		return ret
	}
	return *o.AccountTypeCode
}

// GetAccountTypeCodeOk returns a tuple with the AccountTypeCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductProduct) GetAccountTypeCodeOk() (*string, bool) {
	if o == nil || IsNil(o.AccountTypeCode) {
		return nil, false
	}
	return o.AccountTypeCode, true
}

// HasAccountTypeCode returns a boolean if a field has been set.
func (o *ProductProduct) HasAccountTypeCode() bool {
	if o != nil && !IsNil(o.AccountTypeCode) {
		return true
	}

	return false
}

// SetAccountTypeCode gets a reference to the given string and assigns it to the AccountTypeCode field.
func (o *ProductProduct) SetAccountTypeCode(v string) {
	o.AccountTypeCode = &v
}

// GetExchangeMarketId returns the ExchangeMarketId field value if set, zero value otherwise.
func (o *ProductProduct) GetExchangeMarketId() string {
	if o == nil || IsNil(o.ExchangeMarketId) {
		var ret string
		return ret
	}
	return *o.ExchangeMarketId
}

// GetExchangeMarketIdOk returns a tuple with the ExchangeMarketId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductProduct) GetExchangeMarketIdOk() (*string, bool) {
	if o == nil || IsNil(o.ExchangeMarketId) {
		return nil, false
	}
	return o.ExchangeMarketId, true
}

// HasExchangeMarketId returns a boolean if a field has been set.
func (o *ProductProduct) HasExchangeMarketId() bool {
	if o != nil && !IsNil(o.ExchangeMarketId) {
		return true
	}

	return false
}

// SetExchangeMarketId gets a reference to the given string and assigns it to the ExchangeMarketId field.
func (o *ProductProduct) SetExchangeMarketId(v string) {
	o.ExchangeMarketId = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ProductProduct) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductProduct) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ProductProduct) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *ProductProduct) SetId(v string) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ProductProduct) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductProduct) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ProductProduct) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ProductProduct) SetName(v string) {
	o.Name = &v
}

// GetSuffix returns the Suffix field value if set, zero value otherwise.
func (o *ProductProduct) GetSuffix() string {
	if o == nil || IsNil(o.Suffix) {
		var ret string
		return ret
	}
	return *o.Suffix
}

// GetSuffixOk returns a tuple with the Suffix field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductProduct) GetSuffixOk() (*string, bool) {
	if o == nil || IsNil(o.Suffix) {
		return nil, false
	}
	return o.Suffix, true
}

// HasSuffix returns a boolean if a field has been set.
func (o *ProductProduct) HasSuffix() bool {
	if o != nil && !IsNil(o.Suffix) {
		return true
	}

	return false
}

// SetSuffix gets a reference to the given string and assigns it to the Suffix field.
func (o *ProductProduct) SetSuffix(v string) {
	o.Suffix = &v
}

// GetTransactionType returns the TransactionType field value if set, zero value otherwise.
func (o *ProductProduct) GetTransactionType() string {
	if o == nil || IsNil(o.TransactionType) {
		var ret string
		return ret
	}
	return *o.TransactionType
}

// GetTransactionTypeOk returns a tuple with the TransactionType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductProduct) GetTransactionTypeOk() (*string, bool) {
	if o == nil || IsNil(o.TransactionType) {
		return nil, false
	}
	return o.TransactionType, true
}

// HasTransactionType returns a boolean if a field has been set.
func (o *ProductProduct) HasTransactionType() bool {
	if o != nil && !IsNil(o.TransactionType) {
		return true
	}

	return false
}

// SetTransactionType gets a reference to the given string and assigns it to the TransactionType field.
func (o *ProductProduct) SetTransactionType(v string) {
	o.TransactionType = &v
}

func (o ProductProduct) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ProductProduct) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AccountType) {
		toSerialize["account_type"] = o.AccountType
	}
	if !IsNil(o.AccountTypeCode) {
		toSerialize["account_type_code"] = o.AccountTypeCode
	}
	if !IsNil(o.ExchangeMarketId) {
		toSerialize["exchange_market_id"] = o.ExchangeMarketId
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Suffix) {
		toSerialize["suffix"] = o.Suffix
	}
	if !IsNil(o.TransactionType) {
		toSerialize["transaction_type"] = o.TransactionType
	}
	return toSerialize, nil
}

type NullableProductProduct struct {
	value *ProductProduct
	isSet bool
}

func (v NullableProductProduct) Get() *ProductProduct {
	return v.value
}

func (v *NullableProductProduct) Set(val *ProductProduct) {
	v.value = val
	v.isSet = true
}

func (v NullableProductProduct) IsSet() bool {
	return v.isSet
}

func (v *NullableProductProduct) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProductProduct(val *ProductProduct) *NullableProductProduct {
	return &NullableProductProduct{value: val, isSet: true}
}

func (v NullableProductProduct) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProductProduct) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
