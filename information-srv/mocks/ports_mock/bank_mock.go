// Code generated by MockGen. DO NOT EDIT.
// Source: bank.go
//
// Generated by this command:
//
//	mockgen -package mocks -source=bank.go -destination=../../../mocks/ports_mock/bank_mock.go
//

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	dto "github.com/pi-financial/information-srv/internal/adapters/handler/http/dto"
	bank "github.com/pi-financial/information-srv/internal/core/domain/bank"
	gomock "go.uber.org/mock/gomock"
)

// MockBankRepository is a mock of BankRepository interface.
type MockBankRepository struct {
	ctrl     *gomock.Controller
	recorder *MockBankRepositoryMockRecorder
	isgomock struct{}
}

// MockBankRepositoryMockRecorder is the mock recorder for MockBankRepository.
type MockBankRepositoryMockRecorder struct {
	mock *MockBankRepository
}

// NewMockBankRepository creates a new mock instance.
func NewMockBankRepository(ctrl *gomock.Controller) *MockBankRepository {
	mock := &MockBankRepository{ctrl: ctrl}
	mock.recorder = &MockBankRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockBankRepository) EXPECT() *MockBankRepositoryMockRecorder {
	return m.recorder
}

// GetBanks mocks base method.
func (m *MockBankRepository) GetBanks(ctx context.Context, filters map[string]string) ([]bank.Bank, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetBanks", ctx, filters)
	ret0, _ := ret[0].([]bank.Bank)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetBanks indicates an expected call of GetBanks.
func (mr *MockBankRepositoryMockRecorder) GetBanks(ctx, filters any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetBanks", reflect.TypeOf((*MockBankRepository)(nil).GetBanks), ctx, filters)
}

// MockBankService is a mock of BankService interface.
type MockBankService struct {
	ctrl     *gomock.Controller
	recorder *MockBankServiceMockRecorder
	isgomock struct{}
}

// MockBankServiceMockRecorder is the mock recorder for MockBankService.
type MockBankServiceMockRecorder struct {
	mock *MockBankService
}

// NewMockBankService creates a new mock instance.
func NewMockBankService(ctrl *gomock.Controller) *MockBankService {
	mock := &MockBankService{ctrl: ctrl}
	mock.recorder = &MockBankServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockBankService) EXPECT() *MockBankServiceMockRecorder {
	return m.recorder
}

// GetBanks mocks base method.
func (m *MockBankService) GetBanks(ctx context.Context, req dto.GetBankByFiltersRequest) ([]bank.Bank, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetBanks", ctx, req)
	ret0, _ := ret[0].([]bank.Bank)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetBanks indicates an expected call of GetBanks.
func (mr *MockBankServiceMockRecorder) GetBanks(ctx, req any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetBanks", reflect.TypeOf((*MockBankService)(nil).GetBanks), ctx, req)
}
