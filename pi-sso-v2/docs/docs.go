// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "pongtorn.po@pi.financial"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/internal/accounts": {
            "get": {
                "description": "Get all accounts",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "account"
                ],
                "summary": "Get all accounts",
                "parameters": [
                    {
                        "type": "string",
                        "name": "userId",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "username",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get all accounts",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/result.ResponseSuccess"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/ssodb.Account"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Failed to retrieve accounts",
                        "schema": {
                            "$ref": "#/definitions/result.ResponseError"
                        }
                    }
                }
            }
        },
        "/internal/accounts/accountInfoAll": {
            "get": {
                "description": "Retrieve all account information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "account"
                ],
                "summary": "Get Account Info All",
                "responses": {
                    "200": {
                        "description": "Account Info All",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/result.ResponseSuccess"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/types.AccountInfoResponse"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/result.ResponseError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/result.ResponseError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/result.ResponseError"
                        }
                    }
                }
            }
        },
        "/internal/accounts/accountInfoByCustomerCode/{customercode}": {
            "get": {
                "description": "Retrieve account information using customer code",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "account"
                ],
                "summary": "Get Account Info by Customer Code",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Customer Code",
                        "name": "customercode",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Account Info by Customer Code",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/result.ResponseSuccess"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/domain.User"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/result.ResponseError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/result.ResponseError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/result.ResponseError"
                        }
                    }
                }
            }
        },
        "/internal/accounts/accountInfoByUsername/{username}": {
            "get": {
                "description": "Retrieve account information using username",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "account"
                ],
                "summary": "Get Account Info by Username",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Username",
                        "name": "username",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Account Info by Username",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/result.ResponseSuccess"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/types.PaginatedResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/result.ResponseError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/result.ResponseError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/result.ResponseError"
                        }
                    }
                }
            }
        },
        "/internal/accounts/accountInfoByUsernameOrPage": {
            "get": {
                "description": "Retrieve account information using username or fetch paginated list if username is not provided",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "account"
                ],
                "summary": "Get Account Info by Username or Paginated List",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Username",
                        "name": "username",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page number (default 1)",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page size (default 10)",
                        "name": "pageSize",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Account Info or Paginated List",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/result.ResponseSuccess"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/types.PaginatedResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/result.ResponseError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/result.ResponseError"
                        }
                    }
                }
            }
        },
        "/internal/accounts/accountWithoutPin": {
            "get": {
                "description": "List Accounts Without Pin",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "account"
                ],
                "summary": "List Accounts Without Pin",
                "responses": {
                    "200": {
                        "description": "List Accounts Without Pin",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/result.ResponseSuccess"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/types.UserList"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/result.ResponseError"
                        }
                    }
                }
            }
        },
        "/internal/accounts/accountWithoutPin/{userId}": {
            "get": {
                "description": "List Accounts Without Pin By UserID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "account"
                ],
                "summary": "List Accounts Without Pin By UserID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "userId",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List Accounts Without Pin By UserID",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/result.ResponseSuccess"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/types.PinAccountInfoList"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/result.ResponseError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/result.ResponseError"
                        }
                    }
                }
            }
        },
        "/internal/accounts/changUsername": {
            "put": {
                "description": "Change Email Username",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "account"
                ],
                "summary": "Change Email Username",
                "parameters": [
                    {
                        "description": "Change Username Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.ChangeUsernameRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Change Username",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/result.ResponseSuccess"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/ssodb.Account"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/result.ResponseError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/result.ResponseError"
                        }
                    }
                }
            }
        },
        "/internal/accounts/check-duplicate": {
            "post": {
                "description": "use internally to check for existing username and mobile phone",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "account"
                ],
                "summary": "Check Email and PhoneNumber Duplication",
                "parameters": [
                    {
                        "description": "Check Duplicate Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.CheckDuplicateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Check Duplicate",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/result.ResponseSuccess"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/handler.CheckDuplicateResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Validation failed",
                        "schema": {
                            "$ref": "#/definitions/result.ResponseError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/result.ResponseError"
                        }
                    }
                }
            }
        },
        "/internal/accounts/check-synced-pin": {
            "post": {
                "description": "Check Sync Pin",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "account"
                ],
                "summary": "Check Sync Pin",
                "parameters": [
                    {
                        "description": "Check Sync Pin Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.CheckSyncedPinRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Check Sync Pin",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/result.ResponseSuccess"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/types.CheckSyncedPinResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/result.ResponseError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/result.ResponseError"
                        }
                    }
                }
            }
        },
        "/internal/accounts/checkEmailAccountByUserID/{userID}": {
            "get": {
                "description": "Check Email Account By UserID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "account"
                ],
                "summary": "Check Email Account By UserID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "userID",
                        "name": "userID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Check Email Account By UserID",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/result.ResponseSuccess"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/types.CheckEmailAccountByUserIDResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/result.ResponseError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/result.ResponseError"
                        }
                    }
                }
            }
        },
        "/internal/accounts/customerInfoByCustomerCode/{customercode}": {
            "get": {
                "description": "Retrieve customer information using customer code",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "account"
                ],
                "summary": "Get Customer Info by Customer Code",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Customer Code",
                        "name": "customercode",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Customer Info by Customer Code",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/result.ResponseSuccess"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/domain.User"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/result.ResponseError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/result.ResponseError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/result.ResponseError"
                        }
                    }
                }
            }
        },
        "/internal/accounts/forceChangePassword": {
            "post": {
                "description": "Force change password for user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "account"
                ],
                "summary": "Force Change Password",
                "parameters": [
                    {
                        "description": "Customer Code",
                        "name": "custcode",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.ForceChangePasswordRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Password Changed",
                        "schema": {
                            "$ref": "#/definitions/result.ResponseSuccess"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/result.ResponseError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/result.ResponseError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/result.ResponseError"
                        }
                    }
                }
            }
        },
        "/internal/accounts/forceChangePin": {
            "post": {
                "description": "Force change pin for user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "account"
                ],
                "summary": "Force Change Pin",
                "parameters": [
                    {
                        "description": "Customer Code",
                        "name": "custcode",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.ForceChangePinRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Pin Changed",
                        "schema": {
                            "$ref": "#/definitions/result.ResponseSuccess"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/result.ResponseError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/result.ResponseError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/result.ResponseError"
                        }
                    }
                }
            }
        },
        "/internal/accounts/guest/migration": {
            "post": {
                "description": "use internally to migrate guest account",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "account"
                ],
                "summary": "Migrate Guest Account",
                "parameters": [
                    {
                        "description": "Migrate Guest Account Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.MigrateGuestAccountRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Migrate Guest Account",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/result.ResponseSuccess"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/types.MigrateGuestAccountResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/result.ResponseError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/result.ResponseError"
                        }
                    }
                }
            }
        },
        "/internal/accounts/link/{id}": {
            "get": {
                "description": "Get Link the authenticated user's account to a member using id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "account"
                ],
                "summary": "Get Link an account to a member",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Link Account ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Link Account To Member created successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/result.ResponseSuccess"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/ssodb.SendLinkAccount"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Validation failed",
                        "schema": {
                            "$ref": "#/definitions/result.ResponseError"
                        }
                    }
                }
            }
        },
        "/internal/accounts/send-link-account/{custcode}": {
            "get": {
                "description": "Get Send Link Account By Custcode",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "account"
                ],
                "summary": "Get Send Link Account By Custcode",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Custcode",
                        "name": "custcode",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get Send Link Account By Custcode",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/result.ResponseSuccess"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/ssodb.SendLinkAccount"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/result.ResponseError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/result.ResponseError"
                        }
                    }
                }
            }
        },
        "/internal/accounts/sendLinkAccount": {
            "post": {
                "description": "Send Link Account",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "account"
                ],
                "summary": "Send Link Account",
                "parameters": [
                    {
                        "description": "Send Link Account Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.SendLinkAccountRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Send Link Account",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/result.ResponseSuccess"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/result.ResponseError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/result.ResponseError"
                        }
                    }
                }
            }
        },
        "/internal/accounts/trading/sync": {
            "post": {
                "description": "Sync Account Trading",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "account"
                ],
                "summary": "Sync Account Trading",
                "parameters": [
                    {
                        "description": "Account Trading Sync Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.AccountTradingSyncRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Sync Account Trading",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/result.ResponseSuccess"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/result.ResponseError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/result.ResponseError"
                        }
                    }
                }
            }
        },
        "/internal/accounts/unlockPin": {
            "post": {
                "description": "Unlock pin for user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "account"
                ],
                "summary": "Unlock Pin",
                "parameters": [
                    {
                        "description": "Customer Code",
                        "name": "custcode",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.UnlockPinRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Pin Unlocked",
                        "schema": {
                            "$ref": "#/definitions/result.ResponseSuccess"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/result.ResponseError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/result.ResponseError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/result.ResponseError"
                        }
                    }
                }
            }
        },
        "/internal/accounts/updateUserInfo": {
            "put": {
                "description": "Update user information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "account"
                ],
                "summary": "Update User Info",
                "parameters": [
                    {
                        "description": "Customer Code",
                        "name": "custcode",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.UpdateUserInfoRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User Info Updated",
                        "schema": {
                            "$ref": "#/definitions/result.ResponseSuccess"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/result.ResponseError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/result.ResponseError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/result.ResponseError"
                        }
                    }
                }
            }
        },
        "/internal/accounts/userIdByCustomerCode/{customercode}": {
            "get": {
                "description": "Retrieve user ID using customer code",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "account"
                ],
                "summary": "Get User ID by Customer Code",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Customer Code",
                        "name": "customercode",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User ID by Customer Code",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/result.ResponseSuccess"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/types.UserIdByCustomerCodeResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/result.ResponseError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/result.ResponseError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/result.ResponseError"
                        }
                    }
                }
            }
        },
        "/internal/auth/change-password": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Change the password for the authenticated user by verifying the user ID and username",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Change user's password",
                "parameters": [
                    {
                        "description": "Change Password Request Body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.InternalChangePasswordRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Password changed successfully",
                        "schema": {
                            "$ref": "#/definitions/result.ResponseSuccess"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/result.ResponseError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/result.ResponseError"
                        }
                    }
                }
            }
        },
        "/internal/auth/changePasswordWithOtp": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Change the password for the authenticated user by verifying the user ID and username",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Change user's password with OTP",
                "parameters": [
                    {
                        "description": "Change Password Request Body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.InternalChangePasswordRequestWithOtp"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Password changed successfully",
                        "schema": {
                            "$ref": "#/definitions/result.ResponseSuccess"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/result.ResponseError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/result.ResponseError"
                        }
                    }
                }
            }
        },
        "/internal/auth/otw/getLogSessionById/{id}": {
            "get": {
                "description": "Get Log Session By Id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Get Log Session By Id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get Log Session By Id",
                        "schema": {
                            "$ref": "#/definitions/result.ResponseSuccess"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/result.ResponseError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/result.ResponseError"
                        }
                    }
                }
            }
        },
        "/internal/auth/otw/getSyncTokenById/{id}": {
            "get": {
                "description": "Get Sync Token By Id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Get Sync Token By Id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get Sync Token By Id",
                        "schema": {
                            "$ref": "#/definitions/result.ResponseSuccess"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/result.ResponseError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/result.ResponseError"
                        }
                    }
                }
            }
        },
        "/internal/auth/request-reset-password/backOffice": {
            "post": {
                "description": "request reset password email link",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Request Reset Password Link",
                "parameters": [
                    {
                        "description": "Reset Password Request Body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.ResetPasswordRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Password reset link has been sent",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Validation failed",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/internal/auth/request-reset-pin/backOffice": {
            "post": {
                "description": "request reset pin email link",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Request Reset Pin Link",
                "parameters": [
                    {
                        "description": "Reset Password Request Body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.ResetPasswordRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Pin reset link has been sent",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Validation failed",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/internal/auth/unlock-account": {
            "post": {
                "description": "Unlock a locked account by providing the username",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Unlock a locked account",
                "parameters": [
                    {
                        "description": "Unlock Account Request Body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.UnlockUserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Account unlocked successfully",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Validation failed",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/internal/auth/verify-pin": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Verify the PIN for the authenticated user by verifying the user ID and custcode",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Verify user's PIN",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Verify Pin Request Body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.VerifyPinRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Pin verified successfully",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Validation failed",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/internal/auth/verify/token": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Verify Access Token for the authenticated user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Verify Access Token",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "token verified successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/result.ResponseSuccess"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/handler.VerifyTokenResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Validation failed",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/public/accounts/generateEmailOtpForForgotPassword": {
            "post": {
                "description": "Generate OTP For Forgot Password",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "account"
                ],
                "summary": "Generate OTP For Forgot Password",
                "parameters": [
                    {
                        "description": "Generate OTP For Setup Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.GenerateEmailOtpForSetupRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Generate OTP For Setup",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/result.ResponseSuccess"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/types.GenerateEmailOtpForSetupResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/result.ResponseError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/result.ResponseError"
                        }
                    }
                }
            }
        },
        "/public/accounts/generateEmailOtpForSetup": {
            "post": {
                "description": "Generate OTP For Setup",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "account"
                ],
                "summary": "Generate OTP For Setup",
                "parameters": [
                    {
                        "description": "Generate OTP For Setup Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.GenerateEmailOtpForSetupRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Generate OTP For Setup",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/result.ResponseSuccess"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/types.GenerateEmailOtpForSetupResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/result.ResponseError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/result.ResponseError"
                        }
                    }
                }
            }
        },
        "/public/accounts/generatePhoneOtpForForgotPassword": {
            "post": {
                "description": "Generate Phone OTP For Forgot Password",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "account"
                ],
                "summary": "Generate Phone OTP For Forgot Password",
                "parameters": [
                    {
                        "description": "Generate Phone OTP For Setup Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.GeneratePhoneOtpForSetupRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Generate Phone OTP For Setup",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/result.ResponseSuccess"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/types.GeneratePhoneOtpForSetupResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/result.ResponseError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/result.ResponseError"
                        }
                    }
                }
            }
        },
        "/public/accounts/generatePhoneOtpForSetup": {
            "post": {
                "description": "Generate Phone OTP For Setup",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "account"
                ],
                "summary": "Generate Phone OTP For Setup",
                "parameters": [
                    {
                        "description": "Generate Phone OTP For Setup Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.GeneratePhoneOtpForSetupRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Generate Phone OTP For Setup",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/result.ResponseSuccess"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/types.GeneratePhoneOtpForSetupResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/result.ResponseError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/result.ResponseError"
                        }
                    }
                }
            }
        },
        "/public/accounts/guest/register": {
            "post": {
                "description": "Create a new guest account with username, password, and phone number",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "account"
                ],
                "summary": "Register a new guest account",
                "parameters": [
                    {
                        "description": "Guest Register Request Body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.GuestRegisterRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Guest registered successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/result.ResponseSuccess"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/types.GuestRegisterResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Validation failed",
                        "schema": {
                            "$ref": "#/definitions/result.ResponseError"
                        }
                    },
                    "500": {
                        "description": "Failed to register guest",
                        "schema": {
                            "$ref": "#/definitions/result.ResponseError"
                        }
                    }
                }
            }
        },
        "/public/accounts/setupWithOTP": {
            "post": {
                "description": "Setup With OTP",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "account"
                ],
                "summary": "Setup With OTP",
                "parameters": [
                    {
                        "description": "Setup With OTP Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.SetupWithOTPRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Setup With OTP",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/result.ResponseSuccess"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/types.LoginResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/result.ResponseError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/result.ResponseError"
                        }
                    }
                }
            }
        },
        "/public/accounts/verifyEmailOtpForSetup": {
            "post": {
                "description": "Verify OTP For Setup",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "account"
                ],
                "summary": "Verify OTP For Setup",
                "parameters": [
                    {
                        "description": "Verify Email OTP For Setup Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.VerifyEmailOtpForSetupRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Verify OTP For Setup",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/result.ResponseSuccess"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/types.VerifyEmailOtpForSetupResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/result.ResponseError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/result.ResponseError"
                        }
                    }
                }
            }
        },
        "/public/accounts/verifyPhoneOtpForSetup": {
            "post": {
                "description": "Verify Phone OTP For Setup",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "account"
                ],
                "summary": "Verify Phone OTP For Setup",
                "parameters": [
                    {
                        "description": "Verify Phone OTP For Setup Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.VerifyPhoneOtpForSetupRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Verify Phone OTP For Setup",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/result.ResponseSuccess"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/types.VerifyPhoneOtpForSetupResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/result.ResponseError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/result.ResponseError"
                        }
                    }
                }
            }
        },
        "/public/auth/generateOtp": {
            "post": {
                "description": "Generate OTP for user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Generate OTP",
                "parameters": [
                    {
                        "description": "Generate OTP request body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.GenerateOtpRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns OTP",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/result.ResponseSuccess"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/types.GenerateOtpResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/result.ResponseError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/result.ResponseError"
                        }
                    }
                }
            }
        },
        "/public/auth/login": {
            "post": {
                "description": "Authenticate user with username and password and return JWT tokens",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Login with username and password",
                "parameters": [
                    {
                        "description": "Login request body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.LoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns access and refresh tokens",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/result.ResponseSuccess"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/types.LoginResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/result.ResponseError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/result.ResponseError"
                        }
                    }
                }
            }
        },
        "/public/auth/login/biometric": {
            "post": {
                "description": "Authenticate user with biometric and return JWT tokens",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "LoginBiometric with biometric and token",
                "parameters": [
                    {
                        "description": "Login request body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.LoginBiometricRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns access and refresh tokens",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/result.ResponseSuccess"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/types.LoginResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/result.ResponseError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/result.ResponseError"
                        }
                    }
                }
            }
        },
        "/public/auth/request-reset-password": {
            "post": {
                "description": "request reset password email link",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Request Reset Password Link",
                "parameters": [
                    {
                        "description": "Reset Password Request Body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.ResetPasswordRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Password reset link has been sent",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Validation failed",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/public/auth/request-reset-password/guest": {
            "post": {
                "description": "request reset password email link",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Request Reset Password Link",
                "parameters": [
                    {
                        "description": "Reset Password Request Body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.ResetPasswordRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Password reset link has been sent",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Validation failed",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/public/auth/request-reset-pin": {
            "post": {
                "description": "request reset pin email link",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Request Reset Pin Link",
                "parameters": [
                    {
                        "description": "Reset Password Request Body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.ResetPasswordRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Pin reset link has been sent",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Validation failed",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/public/auth/reset-new-password": {
            "post": {
                "description": "request ResetNewPassword",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Request Reset New Password",
                "parameters": [
                    {
                        "description": "Password reset successfully",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.SetNewPasswordRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Password reset successfully",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Validation failed",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/public/auth/reset-new-pin": {
            "post": {
                "description": "Set New Pin",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Set New Pin",
                "parameters": [
                    {
                        "description": "Pin reset successfully",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.SetNewPinRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Pin reset successfully",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Validation failed",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/public/auth/verifyOtp": {
            "post": {
                "description": "Verify OTP for user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Verify OTP",
                "parameters": [
                    {
                        "description": "Verify OTP request body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.VerifyOtpKeyRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns OTP",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/result.ResponseSuccess"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/types.LoginResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/result.ResponseError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/result.ResponseError"
                        }
                    }
                }
            }
        },
        "/public/auth/verifyPin": {
            "post": {
                "description": "Verify Pin for user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Verify Pin",
                "parameters": [
                    {
                        "description": "Verify Pin request body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.VerifyOtpRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns OTP",
                        "schema": {
                            "$ref": "#/definitions/result.ResponseSuccess"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/result.ResponseError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/result.ResponseError"
                        }
                    }
                }
            }
        },
        "/public/hash:msg": {
            "post": {
                "description": "Hash Text",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "account"
                ],
                "summary": "Hash Text",
                "parameters": [
                    {
                        "description": "Hash Text Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.HashTextRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Hash Text",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/result.ResponseSuccess"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/result.ResponseError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/result.ResponseError"
                        }
                    }
                }
            }
        },
        "/public/rsa_decrypt": {
            "post": {
                "description": "Decrypt the provided message using RSA encryption",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "account"
                ],
                "summary": "Decrypt a message using RSA",
                "parameters": [
                    {
                        "description": "Rsa Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.RsaRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Decrypted",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/result.ResponseSuccess"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Validation failed",
                        "schema": {
                            "$ref": "#/definitions/result.ResponseError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/result.ResponseError"
                        }
                    }
                }
            }
        },
        "/public/rsa_encrypt": {
            "post": {
                "description": "Encrypt the provided message using RSA encryption",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "account"
                ],
                "summary": "Encrypt a message using RSA",
                "parameters": [
                    {
                        "description": "Rsa Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.RsaRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Encrypted",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/result.ResponseSuccess"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Validation failed",
                        "schema": {
                            "$ref": "#/definitions/result.ResponseError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/result.ResponseError"
                        }
                    }
                }
            }
        },
        "/public/text_decrypt": {
            "post": {
                "description": "Decrypt Text",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "account"
                ],
                "summary": "Decrypt Text",
                "parameters": [
                    {
                        "description": "Text Decrypt Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.TextEncryptRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Decrypt Text",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/result.ResponseSuccess"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/types.TextEncryptResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/result.ResponseError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/result.ResponseError"
                        }
                    }
                }
            }
        },
        "/public/text_encrypt": {
            "post": {
                "description": "Encrypt Text",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "account"
                ],
                "summary": "Encrypt Text",
                "parameters": [
                    {
                        "description": "Text Encrypt Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.TextEncryptRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Encrypt Text",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/result.ResponseSuccess"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/types.TextEncryptResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/result.ResponseError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/result.ResponseError"
                        }
                    }
                }
            }
        },
        "/secure/accounts/check-synced-pin": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Check Sync Pin",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "account"
                ],
                "summary": "Check Sync Pin",
                "parameters": [
                    {
                        "description": "Check Sync Pin Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.CheckSyncedPinRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Check Sync Pin",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/result.ResponseSuccess"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/types.CheckSyncedPinResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/result.ResponseError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/result.ResponseError"
                        }
                    }
                }
            }
        },
        "/secure/accounts/link": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Link the authenticated user's account to a member using custcode",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "account"
                ],
                "summary": "Link an account to a member",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Link Account Request Body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.LinkAccountRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Link Account To Member created successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/result.ResponseSuccess"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/ssodb.SendLinkAccount"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Validation failed",
                        "schema": {
                            "$ref": "#/definitions/result.ResponseError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized or Invalid user, please login again",
                        "schema": {
                            "$ref": "#/definitions/result.ResponseError"
                        }
                    }
                }
            }
        },
        "/secure/accounts/profile": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get Profile",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "account"
                ],
                "summary": "Get Profile",
                "responses": {
                    "200": {
                        "description": "Get Profile",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/result.ResponseSuccess"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/ssodb.Account"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/result.ResponseError"
                        }
                    }
                }
            }
        },
        "/secure/auth/change-password": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Change the password for the authenticated user by providing old and new password",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Change user's password",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Change Password Request Body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.ChangePasswordRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Password changed successfully",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Validation failed",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/secure/auth/change-pin": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Change the PIN for the authenticated user by verifying the old PIN and custcode",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Change user's PIN",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Change Pin Request Body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.ChangePinRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Pin changed successfully",
                        "schema": {
                            "$ref": "#/definitions/result.ResponseSuccess"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/result.ResponseError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/result.ResponseError"
                        }
                    }
                }
            }
        },
        "/secure/auth/create-pin": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create a new PIN for the authenticated user by verifying the user ID and custcode",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Create a new PIN for user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Create Pin Request Body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.CreatePinRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Pin created successfully",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Validation failed",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/secure/auth/login/biometric/register": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Register Biometric",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "RegisterBiometric with token",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "deviceId",
                        "name": "deviceId",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Register Biometric request body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.RegisterBiometricRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns biometric id",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/result.ResponseSuccess"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/types.RegisterBiometricResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid request, Invalid token, Decryption error",
                        "schema": {
                            "$ref": "#/definitions/result.ResponseError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/result.ResponseError"
                        }
                    }
                }
            }
        },
        "/secure/auth/otw/change-password": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Change the password for the authenticated user by verifying the user ID and username",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Change user's password",
                "parameters": [
                    {
                        "description": "Change Password Request Body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.InternalChangePasswordRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Password changed successfully",
                        "schema": {
                            "$ref": "#/definitions/result.ResponseSuccess"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/result.ResponseError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/result.ResponseError"
                        }
                    }
                }
            }
        },
        "/secure/auth/otw/change-pin": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Change the PIN for the authenticated user by verifying the old PIN and custcode",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Change user's PIN",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Change Pin Request Body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.ChangePinRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Pin changed successfully",
                        "schema": {
                            "$ref": "#/definitions/result.ResponseSuccess"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/result.ResponseError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/result.ResponseError"
                        }
                    }
                }
            }
        },
        "/secure/auth/otw/create-pin": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create a new PIN for the authenticated user by verifying the user ID and custcode",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Create a new PIN for user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Create Pin Request Body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.CreatePinRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Pin created successfully",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Validation failed",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/secure/auth/otw/syncToken": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Sync Token for the authenticated user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Sync Token",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Token synced successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/result.ResponseSuccess"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/ssodb.SyncToken"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/result.ResponseError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/result.ResponseError"
                        }
                    }
                }
            }
        },
        "/secure/auth/refresh-token": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Generate new access and refresh tokens using existing refresh token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Refresh JWT tokens",
                "responses": {
                    "200": {
                        "description": "Returns new access and refresh tokens",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/secure/auth/reset-pin": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Reset the PIN for the authenticated user by verifying the password and custcode",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Reset user's PIN",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Reset Pin Request Body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.ResetPinRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Pin reset successfully",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Validation failed",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "domain.User": {
            "type": "object",
            "properties": {
                "birthday": {
                    "description": "YYYY-MM-DD",
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "deleted_at": {
                    "$ref": "#/definitions/gorm.DeletedAt"
                },
                "email": {
                    "type": "string"
                },
                "first_name_en": {
                    "type": "string"
                },
                "first_name_th": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "id_card_no": {
                    "type": "string"
                },
                "last_name_en": {
                    "type": "string"
                },
                "last_name_th": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "gorm.DeletedAt": {
            "type": "object",
            "properties": {
                "time": {
                    "type": "string"
                },
                "valid": {
                    "description": "Valid is true if Time is not NULL",
                    "type": "boolean"
                }
            }
        },
        "handler.ChangePasswordRequest": {
            "type": "object",
            "required": [
                "encryptNewPassword",
                "encryptOldPassword",
                "username"
            ],
            "properties": {
                "encryptNewPassword": {
                    "type": "string"
                },
                "encryptOldPassword": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "handler.CheckDuplicateRequest": {
            "type": "object",
            "properties": {
                "phoneNumber": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "handler.CheckDuplicateResponse": {
            "type": "object",
            "properties": {
                "phoneNumber": {
                    "type": "boolean"
                },
                "username": {
                    "type": "boolean"
                }
            }
        },
        "handler.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "handler.LinkAccountRequest": {
            "type": "object",
            "required": [
                "encryptNewPassword"
            ],
            "properties": {
                "custcode": {
                    "type": "string"
                },
                "encryptNewPassword": {
                    "type": "string"
                },
                "sendLinkAccountId": {
                    "type": "string"
                }
            }
        },
        "handler.LoginRequest": {
            "type": "object",
            "required": [
                "encryptPassword",
                "username"
            ],
            "properties": {
                "encryptPassword": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "handler.ResetPasswordRequest": {
            "type": "object",
            "required": [
                "birthday",
                "idCardNo",
                "username"
            ],
            "properties": {
                "birthday": {
                    "type": "string"
                },
                "idCardNo": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "handler.ResetPinRequest": {
            "type": "object",
            "required": [
                "custcode",
                "encryptNewPin",
                "encryptPassword"
            ],
            "properties": {
                "custcode": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "encryptNewPin": {
                    "type": "string"
                },
                "encryptPassword": {
                    "type": "string"
                }
            }
        },
        "handler.RsaRequest": {
            "type": "object",
            "required": [
                "message"
            ],
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "handler.SetNewPasswordRequest": {
            "type": "object",
            "required": [
                "encryptNewPassword",
                "token"
            ],
            "properties": {
                "encryptNewPassword": {
                    "type": "string"
                },
                "token": {
                    "description": "Username    []string ` + "`" + `json:\"username\" validate:\"required\"` + "`" + `",
                    "type": "string"
                }
            }
        },
        "handler.SetNewPinRequest": {
            "type": "object",
            "required": [
                "encryptNewPin",
                "token"
            ],
            "properties": {
                "encryptNewPin": {
                    "type": "string"
                },
                "token": {
                    "description": "Username []string ` + "`" + `json:\"username\" validate:\"required\"` + "`" + `",
                    "type": "string"
                }
            }
        },
        "handler.UnlockUserRequest": {
            "type": "object",
            "required": [
                "username"
            ],
            "properties": {
                "username": {
                    "type": "string"
                }
            }
        },
        "handler.VerifyPinRequest": {
            "type": "object",
            "required": [
                "custcode",
                "encryptPin"
            ],
            "properties": {
                "custcode": {
                    "type": "string"
                },
                "encryptPin": {
                    "type": "string"
                }
            }
        },
        "handler.VerifyTokenResponse": {
            "type": "object",
            "properties": {
                "userId": {
                    "type": "string"
                }
            }
        },
        "result.ResponseError": {
            "type": "object",
            "properties": {
                "detail": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "result.ResponseSuccess": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "data": {},
                "msg": {
                    "type": "string"
                }
            }
        },
        "ssodb.Account": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "deleted_at": {
                    "$ref": "#/definitions/gorm.DeletedAt"
                },
                "failed_password_attempts": {
                    "type": "integer"
                },
                "failed_pin_attempts": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "is_locked": {
                    "type": "boolean"
                },
                "password": {
                    "type": "string"
                },
                "pin": {
                    "type": "string"
                },
                "salt_password": {
                    "type": "string"
                },
                "salt_pin": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                },
                "username_hash": {
                    "type": "string"
                }
            }
        },
        "ssodb.SendLinkAccount": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "custcode": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "isUsed": {
                    "type": "boolean"
                },
                "usedAt": {
                    "type": "string"
                },
                "userId": {
                    "type": "string"
                }
            }
        },
        "ssodb.SyncToken": {
            "type": "object",
            "properties": {
                "account_id": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "is_use": {
                    "type": "boolean"
                },
                "used_at": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "types.AccountInfoResponse": {
            "type": "object",
            "properties": {
                "cardId": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "isLock": {
                    "type": "boolean"
                },
                "isSyncPassword": {
                    "type": "boolean"
                },
                "isSyncPin": {
                    "type": "boolean"
                },
                "loginPinFailCount": {
                    "type": "integer"
                },
                "loginPwdFailCount": {
                    "type": "integer"
                },
                "mobile": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                },
                "userId": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "types.AccountTradingSyncRequest": {
            "type": "object",
            "required": [
                "username"
            ],
            "properties": {
                "password": {
                    "type": "string"
                },
                "pin": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "types.ChangePinRequest": {
            "type": "object",
            "required": [
                "custcode",
                "encryptNewPin",
                "encryptOldPin"
            ],
            "properties": {
                "custcode": {
                    "type": "string"
                },
                "encryptNewPin": {
                    "type": "string"
                },
                "encryptOldPin": {
                    "type": "string"
                }
            }
        },
        "types.ChangeUsernameRequest": {
            "type": "object",
            "required": [
                "newUsername",
                "userId",
                "username"
            ],
            "properties": {
                "newUsername": {
                    "type": "string"
                },
                "userId": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "types.CheckEmailAccountByUserIDResponse": {
            "type": "object",
            "required": [
                "email",
                "isUsernameExisted"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "isUsernameExisted": {
                    "type": "boolean"
                }
            }
        },
        "types.CheckSyncedPinRequest": {
            "type": "object",
            "required": [
                "custcode"
            ],
            "properties": {
                "custcode": {
                    "type": "string"
                }
            }
        },
        "types.CheckSyncedPinResponse": {
            "type": "object",
            "properties": {
                "result": {
                    "type": "boolean"
                }
            }
        },
        "types.CreatePinRequest": {
            "type": "object",
            "required": [
                "custcode",
                "encryptNewPin"
            ],
            "properties": {
                "custcode": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "encryptNewPin": {
                    "type": "string"
                }
            }
        },
        "types.ForceChangePasswordRequest": {
            "type": "object",
            "required": [
                "newPassword",
                "username"
            ],
            "properties": {
                "newPassword": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "types.ForceChangePinRequest": {
            "type": "object",
            "required": [
                "newPin",
                "username"
            ],
            "properties": {
                "newPin": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "types.GenerateEmailOtpForSetupRequest": {
            "type": "object",
            "required": [
                "email"
            ],
            "properties": {
                "email": {
                    "type": "string"
                }
            }
        },
        "types.GenerateEmailOtpForSetupResponse": {
            "type": "object",
            "required": [
                "email",
                "expiresAt",
                "refCode"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "expiresAt": {
                    "type": "string"
                },
                "refCode": {
                    "type": "string"
                }
            }
        },
        "types.GenerateOtpRequest": {
            "type": "object",
            "required": [
                "otp_generate_key"
            ],
            "properties": {
                "otp_generate_key": {
                    "type": "string"
                }
            }
        },
        "types.GenerateOtpResponse": {
            "type": "object",
            "properties": {
                "ref_code": {
                    "type": "string"
                },
                "verify_otp_key": {
                    "type": "string"
                }
            }
        },
        "types.GeneratePhoneOtpForSetupRequest": {
            "type": "object",
            "required": [
                "phoneNumber"
            ],
            "properties": {
                "phoneNumber": {
                    "type": "string"
                },
                "sendLinkAccountId": {
                    "type": "string"
                }
            }
        },
        "types.GeneratePhoneOtpForSetupResponse": {
            "type": "object",
            "required": [
                "expiresAt",
                "phoneNumber",
                "refCode"
            ],
            "properties": {
                "expiresAt": {
                    "type": "string"
                },
                "phoneNumber": {
                    "type": "string"
                },
                "refCode": {
                    "type": "string"
                }
            }
        },
        "types.GuestRegisterRequest": {
            "type": "object",
            "required": [
                "encryptPassword",
                "username"
            ],
            "properties": {
                "encryptPassword": {
                    "type": "string"
                },
                "phoneNumber": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "types.GuestRegisterResponse": {
            "type": "object",
            "required": [
                "accountId",
                "userId"
            ],
            "properties": {
                "accessToken": {
                    "type": "string"
                },
                "accessTokenExpiry": {
                    "type": "string"
                },
                "accountId": {
                    "type": "string"
                },
                "refreshToken": {
                    "type": "string"
                },
                "refreshTokenExpiry": {
                    "type": "string"
                },
                "userId": {
                    "type": "string"
                }
            }
        },
        "types.HashTextRequest": {
            "type": "object",
            "required": [
                "msg"
            ],
            "properties": {
                "msg": {
                    "type": "string"
                }
            }
        },
        "types.InternalChangePasswordRequest": {
            "type": "object",
            "required": [
                "encryptNewPassword",
                "userId"
            ],
            "properties": {
                "encryptNewPassword": {
                    "type": "string"
                },
                "userId": {
                    "type": "string"
                },
                "username": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "types.InternalChangePasswordRequestWithOtp": {
            "type": "object",
            "required": [
                "encryptNewPassword",
                "username"
            ],
            "properties": {
                "emailOtpRef": {
                    "type": "string"
                },
                "encryptNewPassword": {
                    "type": "string"
                },
                "phoneOtpRef": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "types.LoginBiometricRequest": {
            "type": "object",
            "required": [
                "token",
                "username"
            ],
            "properties": {
                "token": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "types.LoginResponse": {
            "type": "object",
            "properties": {
                "accessToken": {
                    "type": "string"
                },
                "accessTokenExpiry": {
                    "type": "string"
                },
                "refreshToken": {
                    "type": "string"
                },
                "refreshTokenExpiry": {
                    "type": "string"
                }
            }
        },
        "types.MigrateGuestAccountRequest": {
            "type": "object",
            "required": [
                "password",
                "userId",
                "username"
            ],
            "properties": {
                "password": {
                    "type": "string"
                },
                "userId": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "types.MigrateGuestAccountResponse": {
            "type": "object",
            "required": [
                "accountId"
            ],
            "properties": {
                "accountId": {
                    "type": "string"
                }
            }
        },
        "types.PaginatedResponse": {
            "type": "object",
            "properties": {
                "currentPage": {
                    "type": "integer"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/types.AccountInfoResponse"
                    }
                },
                "hasNextPage": {
                    "type": "boolean"
                },
                "hasPreviousPage": {
                    "type": "boolean"
                },
                "pageSize": {
                    "type": "integer"
                },
                "totalPages": {
                    "type": "integer"
                }
            }
        },
        "types.PinAccountInfoList": {
            "type": "object",
            "properties": {
                "isSetPin": {
                    "type": "boolean"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "types.RegisterBiometricRequest": {
            "type": "object",
            "required": [
                "token"
            ],
            "properties": {
                "token": {
                    "type": "string"
                }
            }
        },
        "types.RegisterBiometricResponse": {
            "type": "object",
            "required": [
                "id"
            ],
            "properties": {
                "id": {
                    "type": "string"
                }
            }
        },
        "types.SendLinkAccountRequest": {
            "type": "object",
            "required": [
                "custcode"
            ],
            "properties": {
                "custcode": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                }
            }
        },
        "types.SetupWithOTPRequest": {
            "type": "object",
            "required": [
                "email",
                "emailRefId",
                "encryptPassword",
                "phoneNumber",
                "phoneRefId"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "emailRefId": {
                    "type": "string"
                },
                "encryptPassword": {
                    "type": "string"
                },
                "phoneNumber": {
                    "type": "string"
                },
                "phoneRefId": {
                    "type": "string"
                }
            }
        },
        "types.TextEncryptRequest": {
            "type": "object",
            "required": [
                "text"
            ],
            "properties": {
                "text": {
                    "type": "string"
                }
            }
        },
        "types.TextEncryptResponse": {
            "type": "object",
            "required": [
                "text"
            ],
            "properties": {
                "text": {
                    "type": "string"
                }
            }
        },
        "types.UnlockPinRequest": {
            "type": "object",
            "required": [
                "username"
            ],
            "properties": {
                "username": {
                    "type": "string"
                }
            }
        },
        "types.UpdateUserInfoRequest": {
            "type": "object",
            "required": [
                "custcode"
            ],
            "properties": {
                "custcode": {
                    "type": "string"
                }
            }
        },
        "types.UserIdByCustomerCodeResponse": {
            "type": "object",
            "required": [
                "userId"
            ],
            "properties": {
                "userId": {
                    "type": "string"
                }
            }
        },
        "types.UserList": {
            "type": "object",
            "properties": {
                "username": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "types.VerifyEmailOtpForSetupRequest": {
            "type": "object",
            "required": [
                "email",
                "otpCode",
                "refCode"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "otpCode": {
                    "type": "string"
                },
                "refCode": {
                    "type": "string"
                }
            }
        },
        "types.VerifyEmailOtpForSetupResponse": {
            "type": "object",
            "required": [
                "refId"
            ],
            "properties": {
                "refId": {
                    "type": "string"
                }
            }
        },
        "types.VerifyOtpKeyRequest": {
            "type": "object",
            "required": [
                "otp_code",
                "ref_code",
                "verify_otp_key"
            ],
            "properties": {
                "otp_code": {
                    "type": "string"
                },
                "ref_code": {
                    "type": "string"
                },
                "verify_otp_key": {
                    "type": "string"
                }
            }
        },
        "types.VerifyOtpRequest": {
            "type": "object",
            "required": [
                "pin"
            ],
            "properties": {
                "pin": {
                    "type": "string"
                }
            }
        },
        "types.VerifyPhoneOtpForSetupRequest": {
            "type": "object",
            "required": [
                "otpCode",
                "phoneNumber",
                "refCode"
            ],
            "properties": {
                "otpCode": {
                    "type": "string"
                },
                "phoneNumber": {
                    "type": "string"
                },
                "refCode": {
                    "type": "string"
                }
            }
        },
        "types.VerifyPhoneOtpForSetupResponse": {
            "type": "object",
            "required": [
                "refId"
            ],
            "properties": {
                "refId": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "description": "use a Bearer token for authorization. Format: \"Bearer {token}\"",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "2.0",
	Host:             "sso.identity.nonprod.pi.internal",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "Pi SSO V2",
	Description:      "Contain Generic Information.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
