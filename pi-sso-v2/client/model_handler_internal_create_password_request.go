/*
Pi SSO V2

Contain Generic Information.

API version: 2.0
Contact: pongtorn.po@pi.financial
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the HandlerInternalCreatePasswordRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &HandlerInternalCreatePasswordRequest{}

// HandlerInternalCreatePasswordRequest struct for HandlerInternalCreatePasswordRequest
type HandlerInternalCreatePasswordRequest struct {
	EncryptNewPassword string   `json:"encrypt_new_password"`
	UserId             string   `json:"user_id"`
	Username           []string `json:"username"`
}

type _HandlerInternalCreatePasswordRequest HandlerInternalCreatePasswordRequest

// NewHandlerInternalCreatePasswordRequest instantiates a new HandlerInternalCreatePasswordRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHandlerInternalCreatePasswordRequest(encryptNewPassword string, userId string, username []string) *HandlerInternalCreatePasswordRequest {
	this := HandlerInternalCreatePasswordRequest{}
	this.EncryptNewPassword = encryptNewPassword
	this.UserId = userId
	this.Username = username
	return &this
}

// NewHandlerInternalCreatePasswordRequestWithDefaults instantiates a new HandlerInternalCreatePasswordRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHandlerInternalCreatePasswordRequestWithDefaults() *HandlerInternalCreatePasswordRequest {
	this := HandlerInternalCreatePasswordRequest{}
	return &this
}

// GetEncryptNewPassword returns the EncryptNewPassword field value
func (o *HandlerInternalCreatePasswordRequest) GetEncryptNewPassword() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.EncryptNewPassword
}

// GetEncryptNewPasswordOk returns a tuple with the EncryptNewPassword field value
// and a boolean to check if the value has been set.
func (o *HandlerInternalCreatePasswordRequest) GetEncryptNewPasswordOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EncryptNewPassword, true
}

// SetEncryptNewPassword sets field value
func (o *HandlerInternalCreatePasswordRequest) SetEncryptNewPassword(v string) {
	o.EncryptNewPassword = v
}

// GetUserId returns the UserId field value
func (o *HandlerInternalCreatePasswordRequest) GetUserId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value
// and a boolean to check if the value has been set.
func (o *HandlerInternalCreatePasswordRequest) GetUserIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UserId, true
}

// SetUserId sets field value
func (o *HandlerInternalCreatePasswordRequest) SetUserId(v string) {
	o.UserId = v
}

// GetUsername returns the Username field value
func (o *HandlerInternalCreatePasswordRequest) GetUsername() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Username
}

// GetUsernameOk returns a tuple with the Username field value
// and a boolean to check if the value has been set.
func (o *HandlerInternalCreatePasswordRequest) GetUsernameOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Username, true
}

// SetUsername sets field value
func (o *HandlerInternalCreatePasswordRequest) SetUsername(v []string) {
	o.Username = v
}

func (o HandlerInternalCreatePasswordRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o HandlerInternalCreatePasswordRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["encrypt_new_password"] = o.EncryptNewPassword
	toSerialize["user_id"] = o.UserId
	toSerialize["username"] = o.Username
	return toSerialize, nil
}

func (o *HandlerInternalCreatePasswordRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"encrypt_new_password",
		"user_id",
		"username",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varHandlerInternalCreatePasswordRequest := _HandlerInternalCreatePasswordRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varHandlerInternalCreatePasswordRequest)

	if err != nil {
		return err
	}

	*o = HandlerInternalCreatePasswordRequest(varHandlerInternalCreatePasswordRequest)

	return err
}

type NullableHandlerInternalCreatePasswordRequest struct {
	value *HandlerInternalCreatePasswordRequest
	isSet bool
}

func (v NullableHandlerInternalCreatePasswordRequest) Get() *HandlerInternalCreatePasswordRequest {
	return v.value
}

func (v *NullableHandlerInternalCreatePasswordRequest) Set(val *HandlerInternalCreatePasswordRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableHandlerInternalCreatePasswordRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableHandlerInternalCreatePasswordRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHandlerInternalCreatePasswordRequest(val *HandlerInternalCreatePasswordRequest) *NullableHandlerInternalCreatePasswordRequest {
	return &NullableHandlerInternalCreatePasswordRequest{value: val, isSet: true}
}

func (v NullableHandlerInternalCreatePasswordRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHandlerInternalCreatePasswordRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
