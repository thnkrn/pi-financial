/*
Pi SSO V2

Contain Generic Information.

API version: 2.0
Contact: pongtorn.po@pi.financial
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the HandlerCheckDuplicateResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &HandlerCheckDuplicateResponse{}

// HandlerCheckDuplicateResponse struct for HandlerCheckDuplicateResponse
type HandlerCheckDuplicateResponse struct {
	PhoneNumber *bool `json:"phone_number,omitempty"`
	Username    *bool `json:"username,omitempty"`
}

// NewHandlerCheckDuplicateResponse instantiates a new HandlerCheckDuplicateResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHandlerCheckDuplicateResponse() *HandlerCheckDuplicateResponse {
	this := HandlerCheckDuplicateResponse{}
	return &this
}

// NewHandlerCheckDuplicateResponseWithDefaults instantiates a new HandlerCheckDuplicateResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHandlerCheckDuplicateResponseWithDefaults() *HandlerCheckDuplicateResponse {
	this := HandlerCheckDuplicateResponse{}
	return &this
}

// GetPhoneNumber returns the PhoneNumber field value if set, zero value otherwise.
func (o *HandlerCheckDuplicateResponse) GetPhoneNumber() bool {
	if o == nil || IsNil(o.PhoneNumber) {
		var ret bool
		return ret
	}
	return *o.PhoneNumber
}

// GetPhoneNumberOk returns a tuple with the PhoneNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HandlerCheckDuplicateResponse) GetPhoneNumberOk() (*bool, bool) {
	if o == nil || IsNil(o.PhoneNumber) {
		return nil, false
	}
	return o.PhoneNumber, true
}

// HasPhoneNumber returns a boolean if a field has been set.
func (o *HandlerCheckDuplicateResponse) HasPhoneNumber() bool {
	if o != nil && !IsNil(o.PhoneNumber) {
		return true
	}

	return false
}

// SetPhoneNumber gets a reference to the given bool and assigns it to the PhoneNumber field.
func (o *HandlerCheckDuplicateResponse) SetPhoneNumber(v bool) {
	o.PhoneNumber = &v
}

// GetUsername returns the Username field value if set, zero value otherwise.
func (o *HandlerCheckDuplicateResponse) GetUsername() bool {
	if o == nil || IsNil(o.Username) {
		var ret bool
		return ret
	}
	return *o.Username
}

// GetUsernameOk returns a tuple with the Username field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HandlerCheckDuplicateResponse) GetUsernameOk() (*bool, bool) {
	if o == nil || IsNil(o.Username) {
		return nil, false
	}
	return o.Username, true
}

// HasUsername returns a boolean if a field has been set.
func (o *HandlerCheckDuplicateResponse) HasUsername() bool {
	if o != nil && !IsNil(o.Username) {
		return true
	}

	return false
}

// SetUsername gets a reference to the given bool and assigns it to the Username field.
func (o *HandlerCheckDuplicateResponse) SetUsername(v bool) {
	o.Username = &v
}

func (o HandlerCheckDuplicateResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o HandlerCheckDuplicateResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.PhoneNumber) {
		toSerialize["phone_number"] = o.PhoneNumber
	}
	if !IsNil(o.Username) {
		toSerialize["username"] = o.Username
	}
	return toSerialize, nil
}

type NullableHandlerCheckDuplicateResponse struct {
	value *HandlerCheckDuplicateResponse
	isSet bool
}

func (v NullableHandlerCheckDuplicateResponse) Get() *HandlerCheckDuplicateResponse {
	return v.value
}

func (v *NullableHandlerCheckDuplicateResponse) Set(val *HandlerCheckDuplicateResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableHandlerCheckDuplicateResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableHandlerCheckDuplicateResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHandlerCheckDuplicateResponse(val *HandlerCheckDuplicateResponse) *NullableHandlerCheckDuplicateResponse {
	return &NullableHandlerCheckDuplicateResponse{value: val, isSet: true}
}

func (v NullableHandlerCheckDuplicateResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHandlerCheckDuplicateResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
