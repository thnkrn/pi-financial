/*
Pi SSO V2

Contain Generic Information.

API version: 2.0
Contact: pongtorn.po@pi.financial
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the HandlerLoginRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &HandlerLoginRequest{}

// HandlerLoginRequest struct for HandlerLoginRequest
type HandlerLoginRequest struct {
	EncryptPassword string `json:"encrypt_password"`
	Username        string `json:"username"`
}

type _HandlerLoginRequest HandlerLoginRequest

// NewHandlerLoginRequest instantiates a new HandlerLoginRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHandlerLoginRequest(encryptPassword string, username string) *HandlerLoginRequest {
	this := HandlerLoginRequest{}
	this.EncryptPassword = encryptPassword
	this.Username = username
	return &this
}

// NewHandlerLoginRequestWithDefaults instantiates a new HandlerLoginRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHandlerLoginRequestWithDefaults() *HandlerLoginRequest {
	this := HandlerLoginRequest{}
	return &this
}

// GetEncryptPassword returns the EncryptPassword field value
func (o *HandlerLoginRequest) GetEncryptPassword() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.EncryptPassword
}

// GetEncryptPasswordOk returns a tuple with the EncryptPassword field value
// and a boolean to check if the value has been set.
func (o *HandlerLoginRequest) GetEncryptPasswordOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EncryptPassword, true
}

// SetEncryptPassword sets field value
func (o *HandlerLoginRequest) SetEncryptPassword(v string) {
	o.EncryptPassword = v
}

// GetUsername returns the Username field value
func (o *HandlerLoginRequest) GetUsername() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Username
}

// GetUsernameOk returns a tuple with the Username field value
// and a boolean to check if the value has been set.
func (o *HandlerLoginRequest) GetUsernameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Username, true
}

// SetUsername sets field value
func (o *HandlerLoginRequest) SetUsername(v string) {
	o.Username = v
}

func (o HandlerLoginRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o HandlerLoginRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["encrypt_password"] = o.EncryptPassword
	toSerialize["username"] = o.Username
	return toSerialize, nil
}

func (o *HandlerLoginRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"encrypt_password",
		"username",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varHandlerLoginRequest := _HandlerLoginRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varHandlerLoginRequest)

	if err != nil {
		return err
	}

	*o = HandlerLoginRequest(varHandlerLoginRequest)

	return err
}

type NullableHandlerLoginRequest struct {
	value *HandlerLoginRequest
	isSet bool
}

func (v NullableHandlerLoginRequest) Get() *HandlerLoginRequest {
	return v.value
}

func (v *NullableHandlerLoginRequest) Set(val *HandlerLoginRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableHandlerLoginRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableHandlerLoginRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHandlerLoginRequest(val *HandlerLoginRequest) *NullableHandlerLoginRequest {
	return &NullableHandlerLoginRequest{value: val, isSet: true}
}

func (v NullableHandlerLoginRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHandlerLoginRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
