/*
Pi SSO V2

Contain Generic Information.

API version: 2.0
Contact: pongtorn.po@pi.financial
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the HandlerChangePinRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &HandlerChangePinRequest{}

// HandlerChangePinRequest struct for HandlerChangePinRequest
type HandlerChangePinRequest struct {
	Custcode      string `json:"custcode"`
	EncryptNewPin string `json:"encrypt_new_pin"`
	EncryptOldPin string `json:"encrypt_old_pin"`
}

type _HandlerChangePinRequest HandlerChangePinRequest

// NewHandlerChangePinRequest instantiates a new HandlerChangePinRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHandlerChangePinRequest(custcode string, encryptNewPin string, encryptOldPin string) *HandlerChangePinRequest {
	this := HandlerChangePinRequest{}
	this.Custcode = custcode
	this.EncryptNewPin = encryptNewPin
	this.EncryptOldPin = encryptOldPin
	return &this
}

// NewHandlerChangePinRequestWithDefaults instantiates a new HandlerChangePinRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHandlerChangePinRequestWithDefaults() *HandlerChangePinRequest {
	this := HandlerChangePinRequest{}
	return &this
}

// GetCustcode returns the Custcode field value
func (o *HandlerChangePinRequest) GetCustcode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Custcode
}

// GetCustcodeOk returns a tuple with the Custcode field value
// and a boolean to check if the value has been set.
func (o *HandlerChangePinRequest) GetCustcodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Custcode, true
}

// SetCustcode sets field value
func (o *HandlerChangePinRequest) SetCustcode(v string) {
	o.Custcode = v
}

// GetEncryptNewPin returns the EncryptNewPin field value
func (o *HandlerChangePinRequest) GetEncryptNewPin() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.EncryptNewPin
}

// GetEncryptNewPinOk returns a tuple with the EncryptNewPin field value
// and a boolean to check if the value has been set.
func (o *HandlerChangePinRequest) GetEncryptNewPinOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EncryptNewPin, true
}

// SetEncryptNewPin sets field value
func (o *HandlerChangePinRequest) SetEncryptNewPin(v string) {
	o.EncryptNewPin = v
}

// GetEncryptOldPin returns the EncryptOldPin field value
func (o *HandlerChangePinRequest) GetEncryptOldPin() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.EncryptOldPin
}

// GetEncryptOldPinOk returns a tuple with the EncryptOldPin field value
// and a boolean to check if the value has been set.
func (o *HandlerChangePinRequest) GetEncryptOldPinOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EncryptOldPin, true
}

// SetEncryptOldPin sets field value
func (o *HandlerChangePinRequest) SetEncryptOldPin(v string) {
	o.EncryptOldPin = v
}

func (o HandlerChangePinRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o HandlerChangePinRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["custcode"] = o.Custcode
	toSerialize["encrypt_new_pin"] = o.EncryptNewPin
	toSerialize["encrypt_old_pin"] = o.EncryptOldPin
	return toSerialize, nil
}

func (o *HandlerChangePinRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"custcode",
		"encrypt_new_pin",
		"encrypt_old_pin",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varHandlerChangePinRequest := _HandlerChangePinRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varHandlerChangePinRequest)

	if err != nil {
		return err
	}

	*o = HandlerChangePinRequest(varHandlerChangePinRequest)

	return err
}

type NullableHandlerChangePinRequest struct {
	value *HandlerChangePinRequest
	isSet bool
}

func (v NullableHandlerChangePinRequest) Get() *HandlerChangePinRequest {
	return v.value
}

func (v *NullableHandlerChangePinRequest) Set(val *HandlerChangePinRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableHandlerChangePinRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableHandlerChangePinRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHandlerChangePinRequest(val *HandlerChangePinRequest) *NullableHandlerChangePinRequest {
	return &NullableHandlerChangePinRequest{value: val, isSet: true}
}

func (v NullableHandlerChangePinRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHandlerChangePinRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
