// Code generated by MockGen. DO NOT EDIT.
// Source: internal/driver/client/interfaces/s3.go
//
// Generated by this command:
//
//	mockgen -source=internal/driver/client/interfaces/s3.go -destination=mock/driver/client/s3.go -package=mockclient
//

// Package mockclient is a generated GoMock package.
package mockclient

import (
	context "context"
	reflect "reflect"
	time "time"

	gomock "go.uber.org/mock/gomock"
)

// MockS3Client is a mock of S3Client interface.
type MockS3Client struct {
	ctrl     *gomock.Controller
	recorder *MockS3ClientMockRecorder
	isgomock struct{}
}

// MockS3ClientMockRecorder is the mock recorder for MockS3Client.
type MockS3ClientMockRecorder struct {
	mock *MockS3Client
}

// NewMockS3Client creates a new mock instance.
func NewMockS3Client(ctrl *gomock.Controller) *MockS3Client {
	mock := &MockS3Client{ctrl: ctrl}
	mock.recorder = &MockS3ClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockS3Client) EXPECT() *MockS3ClientMockRecorder {
	return m.recorder
}

// CopyObject mocks base method.
func (m *MockS3Client) CopyObject(ctx context.Context, sourceKey, sourceBucket, destBucket string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CopyObject", ctx, sourceKey, sourceBucket, destBucket)
	ret0, _ := ret[0].(error)
	return ret0
}

// CopyObject indicates an expected call of CopyObject.
func (mr *MockS3ClientMockRecorder) CopyObject(ctx, sourceKey, sourceBucket, destBucket any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CopyObject", reflect.TypeOf((*MockS3Client)(nil).CopyObject), ctx, sourceKey, sourceBucket, destBucket)
}

// GeneratePresignedURL mocks base method.
func (m *MockS3Client) GeneratePresignedURL(ctx context.Context, key, bucket string, expiration time.Duration) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GeneratePresignedURL", ctx, key, bucket, expiration)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GeneratePresignedURL indicates an expected call of GeneratePresignedURL.
func (mr *MockS3ClientMockRecorder) GeneratePresignedURL(ctx, key, bucket, expiration any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GeneratePresignedURL", reflect.TypeOf((*MockS3Client)(nil).GeneratePresignedURL), ctx, key, bucket, expiration)
}
