// Code generated by MockGen. DO NOT EDIT.
// Source: ./internal/service/interfaces/suitabilitytest.go
//
// Generated by this command:
//
//	mockgen -source ./internal/service/interfaces/suitabilitytest.go -package mockservice
//

// Package mockservice is a generated GoMock package.
package mockservice

import (
	context "context"
	reflect "reflect"

	uuid "github.com/google/uuid"
	dto "github.com/pi-financial/user-srv-v2/internal/dto"
	gomock "go.uber.org/mock/gomock"
)

// MockSuitabilityTestService is a mock of SuitabilityTestService interface.
type MockSuitabilityTestService struct {
	ctrl     *gomock.Controller
	recorder *MockSuitabilityTestServiceMockRecorder
	isgomock struct{}
}

// MockSuitabilityTestServiceMockRecorder is the mock recorder for MockSuitabilityTestService.
type MockSuitabilityTestServiceMockRecorder struct {
	mock *MockSuitabilityTestService
}

// NewMockSuitabilityTestService creates a new mock instance.
func NewMockSuitabilityTestService(ctrl *gomock.Controller) *MockSuitabilityTestService {
	mock := &MockSuitabilityTestService{ctrl: ctrl}
	mock.recorder = &MockSuitabilityTestServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockSuitabilityTestService) EXPECT() *MockSuitabilityTestServiceMockRecorder {
	return m.recorder
}

// CreateSuitabilityTest mocks base method.
func (m *MockSuitabilityTestService) CreateSuitabilityTest(ctx context.Context, userId uuid.UUID, req dto.SuitabilityTestRequest) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateSuitabilityTest", ctx, userId, req)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateSuitabilityTest indicates an expected call of CreateSuitabilityTest.
func (mr *MockSuitabilityTestServiceMockRecorder) CreateSuitabilityTest(ctx, userId, req any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateSuitabilityTest", reflect.TypeOf((*MockSuitabilityTestService)(nil).CreateSuitabilityTest), ctx, userId, req)
}

// GetSuitabilityTestsByUserId mocks base method.
func (m *MockSuitabilityTestService) GetSuitabilityTestsByUserId(ctx context.Context, userId uuid.UUID) ([]dto.SuitabilityTestResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetSuitabilityTestsByUserId", ctx, userId)
	ret0, _ := ret[0].([]dto.SuitabilityTestResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetSuitabilityTestsByUserId indicates an expected call of GetSuitabilityTestsByUserId.
func (mr *MockSuitabilityTestServiceMockRecorder) GetSuitabilityTestsByUserId(ctx, userId any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetSuitabilityTestsByUserId", reflect.TypeOf((*MockSuitabilityTestService)(nil).GetSuitabilityTestsByUserId), ctx, userId)
}
