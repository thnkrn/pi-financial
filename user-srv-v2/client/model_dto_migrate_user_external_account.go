/*
Pi User Service V2

Contain Generic Information.

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the DtoMigrateUserExternalAccount type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DtoMigrateUserExternalAccount{}

// DtoMigrateUserExternalAccount struct for DtoMigrateUserExternalAccount
type DtoMigrateUserExternalAccount struct {
	Id         *string `json:"id,omitempty"`
	ProviderId *int32  `json:"providerId,omitempty"`
	Value      *string `json:"value,omitempty"`
}

// NewDtoMigrateUserExternalAccount instantiates a new DtoMigrateUserExternalAccount object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDtoMigrateUserExternalAccount() *DtoMigrateUserExternalAccount {
	this := DtoMigrateUserExternalAccount{}
	return &this
}

// NewDtoMigrateUserExternalAccountWithDefaults instantiates a new DtoMigrateUserExternalAccount object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDtoMigrateUserExternalAccountWithDefaults() *DtoMigrateUserExternalAccount {
	this := DtoMigrateUserExternalAccount{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *DtoMigrateUserExternalAccount) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtoMigrateUserExternalAccount) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *DtoMigrateUserExternalAccount) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *DtoMigrateUserExternalAccount) SetId(v string) {
	o.Id = &v
}

// GetProviderId returns the ProviderId field value if set, zero value otherwise.
func (o *DtoMigrateUserExternalAccount) GetProviderId() int32 {
	if o == nil || IsNil(o.ProviderId) {
		var ret int32
		return ret
	}
	return *o.ProviderId
}

// GetProviderIdOk returns a tuple with the ProviderId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtoMigrateUserExternalAccount) GetProviderIdOk() (*int32, bool) {
	if o == nil || IsNil(o.ProviderId) {
		return nil, false
	}
	return o.ProviderId, true
}

// HasProviderId returns a boolean if a field has been set.
func (o *DtoMigrateUserExternalAccount) HasProviderId() bool {
	if o != nil && !IsNil(o.ProviderId) {
		return true
	}

	return false
}

// SetProviderId gets a reference to the given int32 and assigns it to the ProviderId field.
func (o *DtoMigrateUserExternalAccount) SetProviderId(v int32) {
	o.ProviderId = &v
}

// GetValue returns the Value field value if set, zero value otherwise.
func (o *DtoMigrateUserExternalAccount) GetValue() string {
	if o == nil || IsNil(o.Value) {
		var ret string
		return ret
	}
	return *o.Value
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtoMigrateUserExternalAccount) GetValueOk() (*string, bool) {
	if o == nil || IsNil(o.Value) {
		return nil, false
	}
	return o.Value, true
}

// HasValue returns a boolean if a field has been set.
func (o *DtoMigrateUserExternalAccount) HasValue() bool {
	if o != nil && !IsNil(o.Value) {
		return true
	}

	return false
}

// SetValue gets a reference to the given string and assigns it to the Value field.
func (o *DtoMigrateUserExternalAccount) SetValue(v string) {
	o.Value = &v
}

func (o DtoMigrateUserExternalAccount) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DtoMigrateUserExternalAccount) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.ProviderId) {
		toSerialize["providerId"] = o.ProviderId
	}
	if !IsNil(o.Value) {
		toSerialize["value"] = o.Value
	}
	return toSerialize, nil
}

type NullableDtoMigrateUserExternalAccount struct {
	value *DtoMigrateUserExternalAccount
	isSet bool
}

func (v NullableDtoMigrateUserExternalAccount) Get() *DtoMigrateUserExternalAccount {
	return v.value
}

func (v *NullableDtoMigrateUserExternalAccount) Set(val *DtoMigrateUserExternalAccount) {
	v.value = val
	v.isSet = true
}

func (v NullableDtoMigrateUserExternalAccount) IsSet() bool {
	return v.isSet
}

func (v *NullableDtoMigrateUserExternalAccount) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDtoMigrateUserExternalAccount(val *DtoMigrateUserExternalAccount) *NullableDtoMigrateUserExternalAccount {
	return &NullableDtoMigrateUserExternalAccount{value: val, isSet: true}
}

func (v NullableDtoMigrateUserExternalAccount) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDtoMigrateUserExternalAccount) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
