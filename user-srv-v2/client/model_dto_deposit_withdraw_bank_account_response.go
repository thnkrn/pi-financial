/*
Pi User Service V2

Contain Generic Information.

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the DtoDepositWithdrawBankAccountResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DtoDepositWithdrawBankAccountResponse{}

// DtoDepositWithdrawBankAccountResponse struct for DtoDepositWithdrawBankAccountResponse
type DtoDepositWithdrawBankAccountResponse struct {
	BankAccountNo      *string `json:"bankAccountNo,omitempty"`
	BankBranchCode     *string `json:"bankBranchCode,omitempty"`
	BankCode           *string `json:"bankCode,omitempty"`
	BankLogoUrl        *string `json:"bankLogoUrl,omitempty"`
	BankName           *string `json:"bankName,omitempty"`
	BankShortName      *string `json:"bankShortName,omitempty"`
	Id                 *string `json:"id,omitempty"`
	PaymentToken       *string `json:"paymentToken,omitempty"`
	PaymentTokenExpiry *string `json:"paymentTokenExpiry,omitempty"`
}

// NewDtoDepositWithdrawBankAccountResponse instantiates a new DtoDepositWithdrawBankAccountResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDtoDepositWithdrawBankAccountResponse() *DtoDepositWithdrawBankAccountResponse {
	this := DtoDepositWithdrawBankAccountResponse{}
	return &this
}

// NewDtoDepositWithdrawBankAccountResponseWithDefaults instantiates a new DtoDepositWithdrawBankAccountResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDtoDepositWithdrawBankAccountResponseWithDefaults() *DtoDepositWithdrawBankAccountResponse {
	this := DtoDepositWithdrawBankAccountResponse{}
	return &this
}

// GetBankAccountNo returns the BankAccountNo field value if set, zero value otherwise.
func (o *DtoDepositWithdrawBankAccountResponse) GetBankAccountNo() string {
	if o == nil || IsNil(o.BankAccountNo) {
		var ret string
		return ret
	}
	return *o.BankAccountNo
}

// GetBankAccountNoOk returns a tuple with the BankAccountNo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtoDepositWithdrawBankAccountResponse) GetBankAccountNoOk() (*string, bool) {
	if o == nil || IsNil(o.BankAccountNo) {
		return nil, false
	}
	return o.BankAccountNo, true
}

// HasBankAccountNo returns a boolean if a field has been set.
func (o *DtoDepositWithdrawBankAccountResponse) HasBankAccountNo() bool {
	if o != nil && !IsNil(o.BankAccountNo) {
		return true
	}

	return false
}

// SetBankAccountNo gets a reference to the given string and assigns it to the BankAccountNo field.
func (o *DtoDepositWithdrawBankAccountResponse) SetBankAccountNo(v string) {
	o.BankAccountNo = &v
}

// GetBankBranchCode returns the BankBranchCode field value if set, zero value otherwise.
func (o *DtoDepositWithdrawBankAccountResponse) GetBankBranchCode() string {
	if o == nil || IsNil(o.BankBranchCode) {
		var ret string
		return ret
	}
	return *o.BankBranchCode
}

// GetBankBranchCodeOk returns a tuple with the BankBranchCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtoDepositWithdrawBankAccountResponse) GetBankBranchCodeOk() (*string, bool) {
	if o == nil || IsNil(o.BankBranchCode) {
		return nil, false
	}
	return o.BankBranchCode, true
}

// HasBankBranchCode returns a boolean if a field has been set.
func (o *DtoDepositWithdrawBankAccountResponse) HasBankBranchCode() bool {
	if o != nil && !IsNil(o.BankBranchCode) {
		return true
	}

	return false
}

// SetBankBranchCode gets a reference to the given string and assigns it to the BankBranchCode field.
func (o *DtoDepositWithdrawBankAccountResponse) SetBankBranchCode(v string) {
	o.BankBranchCode = &v
}

// GetBankCode returns the BankCode field value if set, zero value otherwise.
func (o *DtoDepositWithdrawBankAccountResponse) GetBankCode() string {
	if o == nil || IsNil(o.BankCode) {
		var ret string
		return ret
	}
	return *o.BankCode
}

// GetBankCodeOk returns a tuple with the BankCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtoDepositWithdrawBankAccountResponse) GetBankCodeOk() (*string, bool) {
	if o == nil || IsNil(o.BankCode) {
		return nil, false
	}
	return o.BankCode, true
}

// HasBankCode returns a boolean if a field has been set.
func (o *DtoDepositWithdrawBankAccountResponse) HasBankCode() bool {
	if o != nil && !IsNil(o.BankCode) {
		return true
	}

	return false
}

// SetBankCode gets a reference to the given string and assigns it to the BankCode field.
func (o *DtoDepositWithdrawBankAccountResponse) SetBankCode(v string) {
	o.BankCode = &v
}

// GetBankLogoUrl returns the BankLogoUrl field value if set, zero value otherwise.
func (o *DtoDepositWithdrawBankAccountResponse) GetBankLogoUrl() string {
	if o == nil || IsNil(o.BankLogoUrl) {
		var ret string
		return ret
	}
	return *o.BankLogoUrl
}

// GetBankLogoUrlOk returns a tuple with the BankLogoUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtoDepositWithdrawBankAccountResponse) GetBankLogoUrlOk() (*string, bool) {
	if o == nil || IsNil(o.BankLogoUrl) {
		return nil, false
	}
	return o.BankLogoUrl, true
}

// HasBankLogoUrl returns a boolean if a field has been set.
func (o *DtoDepositWithdrawBankAccountResponse) HasBankLogoUrl() bool {
	if o != nil && !IsNil(o.BankLogoUrl) {
		return true
	}

	return false
}

// SetBankLogoUrl gets a reference to the given string and assigns it to the BankLogoUrl field.
func (o *DtoDepositWithdrawBankAccountResponse) SetBankLogoUrl(v string) {
	o.BankLogoUrl = &v
}

// GetBankName returns the BankName field value if set, zero value otherwise.
func (o *DtoDepositWithdrawBankAccountResponse) GetBankName() string {
	if o == nil || IsNil(o.BankName) {
		var ret string
		return ret
	}
	return *o.BankName
}

// GetBankNameOk returns a tuple with the BankName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtoDepositWithdrawBankAccountResponse) GetBankNameOk() (*string, bool) {
	if o == nil || IsNil(o.BankName) {
		return nil, false
	}
	return o.BankName, true
}

// HasBankName returns a boolean if a field has been set.
func (o *DtoDepositWithdrawBankAccountResponse) HasBankName() bool {
	if o != nil && !IsNil(o.BankName) {
		return true
	}

	return false
}

// SetBankName gets a reference to the given string and assigns it to the BankName field.
func (o *DtoDepositWithdrawBankAccountResponse) SetBankName(v string) {
	o.BankName = &v
}

// GetBankShortName returns the BankShortName field value if set, zero value otherwise.
func (o *DtoDepositWithdrawBankAccountResponse) GetBankShortName() string {
	if o == nil || IsNil(o.BankShortName) {
		var ret string
		return ret
	}
	return *o.BankShortName
}

// GetBankShortNameOk returns a tuple with the BankShortName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtoDepositWithdrawBankAccountResponse) GetBankShortNameOk() (*string, bool) {
	if o == nil || IsNil(o.BankShortName) {
		return nil, false
	}
	return o.BankShortName, true
}

// HasBankShortName returns a boolean if a field has been set.
func (o *DtoDepositWithdrawBankAccountResponse) HasBankShortName() bool {
	if o != nil && !IsNil(o.BankShortName) {
		return true
	}

	return false
}

// SetBankShortName gets a reference to the given string and assigns it to the BankShortName field.
func (o *DtoDepositWithdrawBankAccountResponse) SetBankShortName(v string) {
	o.BankShortName = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *DtoDepositWithdrawBankAccountResponse) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtoDepositWithdrawBankAccountResponse) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *DtoDepositWithdrawBankAccountResponse) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *DtoDepositWithdrawBankAccountResponse) SetId(v string) {
	o.Id = &v
}

// GetPaymentToken returns the PaymentToken field value if set, zero value otherwise.
func (o *DtoDepositWithdrawBankAccountResponse) GetPaymentToken() string {
	if o == nil || IsNil(o.PaymentToken) {
		var ret string
		return ret
	}
	return *o.PaymentToken
}

// GetPaymentTokenOk returns a tuple with the PaymentToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtoDepositWithdrawBankAccountResponse) GetPaymentTokenOk() (*string, bool) {
	if o == nil || IsNil(o.PaymentToken) {
		return nil, false
	}
	return o.PaymentToken, true
}

// HasPaymentToken returns a boolean if a field has been set.
func (o *DtoDepositWithdrawBankAccountResponse) HasPaymentToken() bool {
	if o != nil && !IsNil(o.PaymentToken) {
		return true
	}

	return false
}

// SetPaymentToken gets a reference to the given string and assigns it to the PaymentToken field.
func (o *DtoDepositWithdrawBankAccountResponse) SetPaymentToken(v string) {
	o.PaymentToken = &v
}

// GetPaymentTokenExpiry returns the PaymentTokenExpiry field value if set, zero value otherwise.
func (o *DtoDepositWithdrawBankAccountResponse) GetPaymentTokenExpiry() string {
	if o == nil || IsNil(o.PaymentTokenExpiry) {
		var ret string
		return ret
	}
	return *o.PaymentTokenExpiry
}

// GetPaymentTokenExpiryOk returns a tuple with the PaymentTokenExpiry field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtoDepositWithdrawBankAccountResponse) GetPaymentTokenExpiryOk() (*string, bool) {
	if o == nil || IsNil(o.PaymentTokenExpiry) {
		return nil, false
	}
	return o.PaymentTokenExpiry, true
}

// HasPaymentTokenExpiry returns a boolean if a field has been set.
func (o *DtoDepositWithdrawBankAccountResponse) HasPaymentTokenExpiry() bool {
	if o != nil && !IsNil(o.PaymentTokenExpiry) {
		return true
	}

	return false
}

// SetPaymentTokenExpiry gets a reference to the given string and assigns it to the PaymentTokenExpiry field.
func (o *DtoDepositWithdrawBankAccountResponse) SetPaymentTokenExpiry(v string) {
	o.PaymentTokenExpiry = &v
}

func (o DtoDepositWithdrawBankAccountResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DtoDepositWithdrawBankAccountResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.BankAccountNo) {
		toSerialize["bankAccountNo"] = o.BankAccountNo
	}
	if !IsNil(o.BankBranchCode) {
		toSerialize["bankBranchCode"] = o.BankBranchCode
	}
	if !IsNil(o.BankCode) {
		toSerialize["bankCode"] = o.BankCode
	}
	if !IsNil(o.BankLogoUrl) {
		toSerialize["bankLogoUrl"] = o.BankLogoUrl
	}
	if !IsNil(o.BankName) {
		toSerialize["bankName"] = o.BankName
	}
	if !IsNil(o.BankShortName) {
		toSerialize["bankShortName"] = o.BankShortName
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.PaymentToken) {
		toSerialize["paymentToken"] = o.PaymentToken
	}
	if !IsNil(o.PaymentTokenExpiry) {
		toSerialize["paymentTokenExpiry"] = o.PaymentTokenExpiry
	}
	return toSerialize, nil
}

type NullableDtoDepositWithdrawBankAccountResponse struct {
	value *DtoDepositWithdrawBankAccountResponse
	isSet bool
}

func (v NullableDtoDepositWithdrawBankAccountResponse) Get() *DtoDepositWithdrawBankAccountResponse {
	return v.value
}

func (v *NullableDtoDepositWithdrawBankAccountResponse) Set(val *DtoDepositWithdrawBankAccountResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableDtoDepositWithdrawBankAccountResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableDtoDepositWithdrawBankAccountResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDtoDepositWithdrawBankAccountResponse(val *DtoDepositWithdrawBankAccountResponse) *NullableDtoDepositWithdrawBankAccountResponse {
	return &NullableDtoDepositWithdrawBankAccountResponse{value: val, isSet: true}
}

func (v NullableDtoDepositWithdrawBankAccountResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDtoDepositWithdrawBankAccountResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
