/*
Pi User Service V2

Contain Generic Information.

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the DtoBankAccountResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DtoBankAccountResponse{}

// DtoBankAccountResponse struct for DtoBankAccountResponse
type DtoBankAccountResponse struct {
	AtsEffectiveDate *string `json:"atsEffectiveDate,omitempty"`
	BankAccountName  *string `json:"bankAccountName,omitempty"`
	BankAccountNo    *string `json:"bankAccountNo,omitempty"`
	BankBranchCode   *string `json:"bankBranchCode,omitempty"`
	BankCode         *string `json:"bankCode,omitempty"`
	Id               *string `json:"id,omitempty"`
	PaymentToken     *string `json:"paymentToken,omitempty"`
	Status           *string `json:"status,omitempty"`
}

// NewDtoBankAccountResponse instantiates a new DtoBankAccountResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDtoBankAccountResponse() *DtoBankAccountResponse {
	this := DtoBankAccountResponse{}
	return &this
}

// NewDtoBankAccountResponseWithDefaults instantiates a new DtoBankAccountResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDtoBankAccountResponseWithDefaults() *DtoBankAccountResponse {
	this := DtoBankAccountResponse{}
	return &this
}

// GetAtsEffectiveDate returns the AtsEffectiveDate field value if set, zero value otherwise.
func (o *DtoBankAccountResponse) GetAtsEffectiveDate() string {
	if o == nil || IsNil(o.AtsEffectiveDate) {
		var ret string
		return ret
	}
	return *o.AtsEffectiveDate
}

// GetAtsEffectiveDateOk returns a tuple with the AtsEffectiveDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtoBankAccountResponse) GetAtsEffectiveDateOk() (*string, bool) {
	if o == nil || IsNil(o.AtsEffectiveDate) {
		return nil, false
	}
	return o.AtsEffectiveDate, true
}

// HasAtsEffectiveDate returns a boolean if a field has been set.
func (o *DtoBankAccountResponse) HasAtsEffectiveDate() bool {
	if o != nil && !IsNil(o.AtsEffectiveDate) {
		return true
	}

	return false
}

// SetAtsEffectiveDate gets a reference to the given string and assigns it to the AtsEffectiveDate field.
func (o *DtoBankAccountResponse) SetAtsEffectiveDate(v string) {
	o.AtsEffectiveDate = &v
}

// GetBankAccountName returns the BankAccountName field value if set, zero value otherwise.
func (o *DtoBankAccountResponse) GetBankAccountName() string {
	if o == nil || IsNil(o.BankAccountName) {
		var ret string
		return ret
	}
	return *o.BankAccountName
}

// GetBankAccountNameOk returns a tuple with the BankAccountName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtoBankAccountResponse) GetBankAccountNameOk() (*string, bool) {
	if o == nil || IsNil(o.BankAccountName) {
		return nil, false
	}
	return o.BankAccountName, true
}

// HasBankAccountName returns a boolean if a field has been set.
func (o *DtoBankAccountResponse) HasBankAccountName() bool {
	if o != nil && !IsNil(o.BankAccountName) {
		return true
	}

	return false
}

// SetBankAccountName gets a reference to the given string and assigns it to the BankAccountName field.
func (o *DtoBankAccountResponse) SetBankAccountName(v string) {
	o.BankAccountName = &v
}

// GetBankAccountNo returns the BankAccountNo field value if set, zero value otherwise.
func (o *DtoBankAccountResponse) GetBankAccountNo() string {
	if o == nil || IsNil(o.BankAccountNo) {
		var ret string
		return ret
	}
	return *o.BankAccountNo
}

// GetBankAccountNoOk returns a tuple with the BankAccountNo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtoBankAccountResponse) GetBankAccountNoOk() (*string, bool) {
	if o == nil || IsNil(o.BankAccountNo) {
		return nil, false
	}
	return o.BankAccountNo, true
}

// HasBankAccountNo returns a boolean if a field has been set.
func (o *DtoBankAccountResponse) HasBankAccountNo() bool {
	if o != nil && !IsNil(o.BankAccountNo) {
		return true
	}

	return false
}

// SetBankAccountNo gets a reference to the given string and assigns it to the BankAccountNo field.
func (o *DtoBankAccountResponse) SetBankAccountNo(v string) {
	o.BankAccountNo = &v
}

// GetBankBranchCode returns the BankBranchCode field value if set, zero value otherwise.
func (o *DtoBankAccountResponse) GetBankBranchCode() string {
	if o == nil || IsNil(o.BankBranchCode) {
		var ret string
		return ret
	}
	return *o.BankBranchCode
}

// GetBankBranchCodeOk returns a tuple with the BankBranchCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtoBankAccountResponse) GetBankBranchCodeOk() (*string, bool) {
	if o == nil || IsNil(o.BankBranchCode) {
		return nil, false
	}
	return o.BankBranchCode, true
}

// HasBankBranchCode returns a boolean if a field has been set.
func (o *DtoBankAccountResponse) HasBankBranchCode() bool {
	if o != nil && !IsNil(o.BankBranchCode) {
		return true
	}

	return false
}

// SetBankBranchCode gets a reference to the given string and assigns it to the BankBranchCode field.
func (o *DtoBankAccountResponse) SetBankBranchCode(v string) {
	o.BankBranchCode = &v
}

// GetBankCode returns the BankCode field value if set, zero value otherwise.
func (o *DtoBankAccountResponse) GetBankCode() string {
	if o == nil || IsNil(o.BankCode) {
		var ret string
		return ret
	}
	return *o.BankCode
}

// GetBankCodeOk returns a tuple with the BankCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtoBankAccountResponse) GetBankCodeOk() (*string, bool) {
	if o == nil || IsNil(o.BankCode) {
		return nil, false
	}
	return o.BankCode, true
}

// HasBankCode returns a boolean if a field has been set.
func (o *DtoBankAccountResponse) HasBankCode() bool {
	if o != nil && !IsNil(o.BankCode) {
		return true
	}

	return false
}

// SetBankCode gets a reference to the given string and assigns it to the BankCode field.
func (o *DtoBankAccountResponse) SetBankCode(v string) {
	o.BankCode = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *DtoBankAccountResponse) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtoBankAccountResponse) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *DtoBankAccountResponse) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *DtoBankAccountResponse) SetId(v string) {
	o.Id = &v
}

// GetPaymentToken returns the PaymentToken field value if set, zero value otherwise.
func (o *DtoBankAccountResponse) GetPaymentToken() string {
	if o == nil || IsNil(o.PaymentToken) {
		var ret string
		return ret
	}
	return *o.PaymentToken
}

// GetPaymentTokenOk returns a tuple with the PaymentToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtoBankAccountResponse) GetPaymentTokenOk() (*string, bool) {
	if o == nil || IsNil(o.PaymentToken) {
		return nil, false
	}
	return o.PaymentToken, true
}

// HasPaymentToken returns a boolean if a field has been set.
func (o *DtoBankAccountResponse) HasPaymentToken() bool {
	if o != nil && !IsNil(o.PaymentToken) {
		return true
	}

	return false
}

// SetPaymentToken gets a reference to the given string and assigns it to the PaymentToken field.
func (o *DtoBankAccountResponse) SetPaymentToken(v string) {
	o.PaymentToken = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *DtoBankAccountResponse) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtoBankAccountResponse) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *DtoBankAccountResponse) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *DtoBankAccountResponse) SetStatus(v string) {
	o.Status = &v
}

func (o DtoBankAccountResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DtoBankAccountResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AtsEffectiveDate) {
		toSerialize["atsEffectiveDate"] = o.AtsEffectiveDate
	}
	if !IsNil(o.BankAccountName) {
		toSerialize["bankAccountName"] = o.BankAccountName
	}
	if !IsNil(o.BankAccountNo) {
		toSerialize["bankAccountNo"] = o.BankAccountNo
	}
	if !IsNil(o.BankBranchCode) {
		toSerialize["bankBranchCode"] = o.BankBranchCode
	}
	if !IsNil(o.BankCode) {
		toSerialize["bankCode"] = o.BankCode
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.PaymentToken) {
		toSerialize["paymentToken"] = o.PaymentToken
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	return toSerialize, nil
}

type NullableDtoBankAccountResponse struct {
	value *DtoBankAccountResponse
	isSet bool
}

func (v NullableDtoBankAccountResponse) Get() *DtoBankAccountResponse {
	return v.value
}

func (v *NullableDtoBankAccountResponse) Set(val *DtoBankAccountResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableDtoBankAccountResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableDtoBankAccountResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDtoBankAccountResponse(val *DtoBankAccountResponse) *NullableDtoBankAccountResponse {
	return &NullableDtoBankAccountResponse{value: val, isSet: true}
}

func (v NullableDtoBankAccountResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDtoBankAccountResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
