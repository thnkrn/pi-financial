/*
Pi User Service V2

Contain Generic Information.

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the DtoOptWatchlistRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DtoOptWatchlistRequest{}

// DtoOptWatchlistRequest struct for DtoOptWatchlistRequest
type DtoOptWatchlistRequest struct {
	Opt    string `json:"opt"`
	Symbol string `json:"symbol"`
	Venue  string `json:"venue"`
}

type _DtoOptWatchlistRequest DtoOptWatchlistRequest

// NewDtoOptWatchlistRequest instantiates a new DtoOptWatchlistRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDtoOptWatchlistRequest(opt string, symbol string, venue string) *DtoOptWatchlistRequest {
	this := DtoOptWatchlistRequest{}
	this.Opt = opt
	this.Symbol = symbol
	this.Venue = venue
	return &this
}

// NewDtoOptWatchlistRequestWithDefaults instantiates a new DtoOptWatchlistRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDtoOptWatchlistRequestWithDefaults() *DtoOptWatchlistRequest {
	this := DtoOptWatchlistRequest{}
	return &this
}

// GetOpt returns the Opt field value
func (o *DtoOptWatchlistRequest) GetOpt() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Opt
}

// GetOptOk returns a tuple with the Opt field value
// and a boolean to check if the value has been set.
func (o *DtoOptWatchlistRequest) GetOptOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Opt, true
}

// SetOpt sets field value
func (o *DtoOptWatchlistRequest) SetOpt(v string) {
	o.Opt = v
}

// GetSymbol returns the Symbol field value
func (o *DtoOptWatchlistRequest) GetSymbol() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Symbol
}

// GetSymbolOk returns a tuple with the Symbol field value
// and a boolean to check if the value has been set.
func (o *DtoOptWatchlistRequest) GetSymbolOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Symbol, true
}

// SetSymbol sets field value
func (o *DtoOptWatchlistRequest) SetSymbol(v string) {
	o.Symbol = v
}

// GetVenue returns the Venue field value
func (o *DtoOptWatchlistRequest) GetVenue() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Venue
}

// GetVenueOk returns a tuple with the Venue field value
// and a boolean to check if the value has been set.
func (o *DtoOptWatchlistRequest) GetVenueOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Venue, true
}

// SetVenue sets field value
func (o *DtoOptWatchlistRequest) SetVenue(v string) {
	o.Venue = v
}

func (o DtoOptWatchlistRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DtoOptWatchlistRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["opt"] = o.Opt
	toSerialize["symbol"] = o.Symbol
	toSerialize["venue"] = o.Venue
	return toSerialize, nil
}

func (o *DtoOptWatchlistRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"opt",
		"symbol",
		"venue",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varDtoOptWatchlistRequest := _DtoOptWatchlistRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varDtoOptWatchlistRequest)

	if err != nil {
		return err
	}

	*o = DtoOptWatchlistRequest(varDtoOptWatchlistRequest)

	return err
}

type NullableDtoOptWatchlistRequest struct {
	value *DtoOptWatchlistRequest
	isSet bool
}

func (v NullableDtoOptWatchlistRequest) Get() *DtoOptWatchlistRequest {
	return v.value
}

func (v *NullableDtoOptWatchlistRequest) Set(val *DtoOptWatchlistRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableDtoOptWatchlistRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableDtoOptWatchlistRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDtoOptWatchlistRequest(val *DtoOptWatchlistRequest) *NullableDtoOptWatchlistRequest {
	return &NullableDtoOptWatchlistRequest{value: val, isSet: true}
}

func (v NullableDtoOptWatchlistRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDtoOptWatchlistRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
