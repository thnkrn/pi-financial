/*
Pi User Service V2

Contain Generic Information.

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the DtoBankAccountsResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DtoBankAccountsResponse{}

// DtoBankAccountsResponse struct for DtoBankAccountsResponse
type DtoBankAccountsResponse struct {
	AtsEffectiveDate *string `json:"atsEffectiveDate,omitempty"`
	BankAccountNo    *string `json:"bankAccountNo,omitempty"`
	BankBranchCode   *string `json:"bankBranchCode,omitempty"`
	BankCode         *string `json:"bankCode,omitempty"`
	EndDate          *string `json:"endDate,omitempty"`
	PayType          *string `json:"payType,omitempty"`
	PaymentToken     *string `json:"paymentToken,omitempty"`
	RpType           *string `json:"rpType,omitempty"`
	TransactionType  *string `json:"transactionType,omitempty"`
}

// NewDtoBankAccountsResponse instantiates a new DtoBankAccountsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDtoBankAccountsResponse() *DtoBankAccountsResponse {
	this := DtoBankAccountsResponse{}
	return &this
}

// NewDtoBankAccountsResponseWithDefaults instantiates a new DtoBankAccountsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDtoBankAccountsResponseWithDefaults() *DtoBankAccountsResponse {
	this := DtoBankAccountsResponse{}
	return &this
}

// GetAtsEffectiveDate returns the AtsEffectiveDate field value if set, zero value otherwise.
func (o *DtoBankAccountsResponse) GetAtsEffectiveDate() string {
	if o == nil || IsNil(o.AtsEffectiveDate) {
		var ret string
		return ret
	}
	return *o.AtsEffectiveDate
}

// GetAtsEffectiveDateOk returns a tuple with the AtsEffectiveDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtoBankAccountsResponse) GetAtsEffectiveDateOk() (*string, bool) {
	if o == nil || IsNil(o.AtsEffectiveDate) {
		return nil, false
	}
	return o.AtsEffectiveDate, true
}

// HasAtsEffectiveDate returns a boolean if a field has been set.
func (o *DtoBankAccountsResponse) HasAtsEffectiveDate() bool {
	if o != nil && !IsNil(o.AtsEffectiveDate) {
		return true
	}

	return false
}

// SetAtsEffectiveDate gets a reference to the given string and assigns it to the AtsEffectiveDate field.
func (o *DtoBankAccountsResponse) SetAtsEffectiveDate(v string) {
	o.AtsEffectiveDate = &v
}

// GetBankAccountNo returns the BankAccountNo field value if set, zero value otherwise.
func (o *DtoBankAccountsResponse) GetBankAccountNo() string {
	if o == nil || IsNil(o.BankAccountNo) {
		var ret string
		return ret
	}
	return *o.BankAccountNo
}

// GetBankAccountNoOk returns a tuple with the BankAccountNo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtoBankAccountsResponse) GetBankAccountNoOk() (*string, bool) {
	if o == nil || IsNil(o.BankAccountNo) {
		return nil, false
	}
	return o.BankAccountNo, true
}

// HasBankAccountNo returns a boolean if a field has been set.
func (o *DtoBankAccountsResponse) HasBankAccountNo() bool {
	if o != nil && !IsNil(o.BankAccountNo) {
		return true
	}

	return false
}

// SetBankAccountNo gets a reference to the given string and assigns it to the BankAccountNo field.
func (o *DtoBankAccountsResponse) SetBankAccountNo(v string) {
	o.BankAccountNo = &v
}

// GetBankBranchCode returns the BankBranchCode field value if set, zero value otherwise.
func (o *DtoBankAccountsResponse) GetBankBranchCode() string {
	if o == nil || IsNil(o.BankBranchCode) {
		var ret string
		return ret
	}
	return *o.BankBranchCode
}

// GetBankBranchCodeOk returns a tuple with the BankBranchCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtoBankAccountsResponse) GetBankBranchCodeOk() (*string, bool) {
	if o == nil || IsNil(o.BankBranchCode) {
		return nil, false
	}
	return o.BankBranchCode, true
}

// HasBankBranchCode returns a boolean if a field has been set.
func (o *DtoBankAccountsResponse) HasBankBranchCode() bool {
	if o != nil && !IsNil(o.BankBranchCode) {
		return true
	}

	return false
}

// SetBankBranchCode gets a reference to the given string and assigns it to the BankBranchCode field.
func (o *DtoBankAccountsResponse) SetBankBranchCode(v string) {
	o.BankBranchCode = &v
}

// GetBankCode returns the BankCode field value if set, zero value otherwise.
func (o *DtoBankAccountsResponse) GetBankCode() string {
	if o == nil || IsNil(o.BankCode) {
		var ret string
		return ret
	}
	return *o.BankCode
}

// GetBankCodeOk returns a tuple with the BankCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtoBankAccountsResponse) GetBankCodeOk() (*string, bool) {
	if o == nil || IsNil(o.BankCode) {
		return nil, false
	}
	return o.BankCode, true
}

// HasBankCode returns a boolean if a field has been set.
func (o *DtoBankAccountsResponse) HasBankCode() bool {
	if o != nil && !IsNil(o.BankCode) {
		return true
	}

	return false
}

// SetBankCode gets a reference to the given string and assigns it to the BankCode field.
func (o *DtoBankAccountsResponse) SetBankCode(v string) {
	o.BankCode = &v
}

// GetEndDate returns the EndDate field value if set, zero value otherwise.
func (o *DtoBankAccountsResponse) GetEndDate() string {
	if o == nil || IsNil(o.EndDate) {
		var ret string
		return ret
	}
	return *o.EndDate
}

// GetEndDateOk returns a tuple with the EndDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtoBankAccountsResponse) GetEndDateOk() (*string, bool) {
	if o == nil || IsNil(o.EndDate) {
		return nil, false
	}
	return o.EndDate, true
}

// HasEndDate returns a boolean if a field has been set.
func (o *DtoBankAccountsResponse) HasEndDate() bool {
	if o != nil && !IsNil(o.EndDate) {
		return true
	}

	return false
}

// SetEndDate gets a reference to the given string and assigns it to the EndDate field.
func (o *DtoBankAccountsResponse) SetEndDate(v string) {
	o.EndDate = &v
}

// GetPayType returns the PayType field value if set, zero value otherwise.
func (o *DtoBankAccountsResponse) GetPayType() string {
	if o == nil || IsNil(o.PayType) {
		var ret string
		return ret
	}
	return *o.PayType
}

// GetPayTypeOk returns a tuple with the PayType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtoBankAccountsResponse) GetPayTypeOk() (*string, bool) {
	if o == nil || IsNil(o.PayType) {
		return nil, false
	}
	return o.PayType, true
}

// HasPayType returns a boolean if a field has been set.
func (o *DtoBankAccountsResponse) HasPayType() bool {
	if o != nil && !IsNil(o.PayType) {
		return true
	}

	return false
}

// SetPayType gets a reference to the given string and assigns it to the PayType field.
func (o *DtoBankAccountsResponse) SetPayType(v string) {
	o.PayType = &v
}

// GetPaymentToken returns the PaymentToken field value if set, zero value otherwise.
func (o *DtoBankAccountsResponse) GetPaymentToken() string {
	if o == nil || IsNil(o.PaymentToken) {
		var ret string
		return ret
	}
	return *o.PaymentToken
}

// GetPaymentTokenOk returns a tuple with the PaymentToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtoBankAccountsResponse) GetPaymentTokenOk() (*string, bool) {
	if o == nil || IsNil(o.PaymentToken) {
		return nil, false
	}
	return o.PaymentToken, true
}

// HasPaymentToken returns a boolean if a field has been set.
func (o *DtoBankAccountsResponse) HasPaymentToken() bool {
	if o != nil && !IsNil(o.PaymentToken) {
		return true
	}

	return false
}

// SetPaymentToken gets a reference to the given string and assigns it to the PaymentToken field.
func (o *DtoBankAccountsResponse) SetPaymentToken(v string) {
	o.PaymentToken = &v
}

// GetRpType returns the RpType field value if set, zero value otherwise.
func (o *DtoBankAccountsResponse) GetRpType() string {
	if o == nil || IsNil(o.RpType) {
		var ret string
		return ret
	}
	return *o.RpType
}

// GetRpTypeOk returns a tuple with the RpType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtoBankAccountsResponse) GetRpTypeOk() (*string, bool) {
	if o == nil || IsNil(o.RpType) {
		return nil, false
	}
	return o.RpType, true
}

// HasRpType returns a boolean if a field has been set.
func (o *DtoBankAccountsResponse) HasRpType() bool {
	if o != nil && !IsNil(o.RpType) {
		return true
	}

	return false
}

// SetRpType gets a reference to the given string and assigns it to the RpType field.
func (o *DtoBankAccountsResponse) SetRpType(v string) {
	o.RpType = &v
}

// GetTransactionType returns the TransactionType field value if set, zero value otherwise.
func (o *DtoBankAccountsResponse) GetTransactionType() string {
	if o == nil || IsNil(o.TransactionType) {
		var ret string
		return ret
	}
	return *o.TransactionType
}

// GetTransactionTypeOk returns a tuple with the TransactionType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtoBankAccountsResponse) GetTransactionTypeOk() (*string, bool) {
	if o == nil || IsNil(o.TransactionType) {
		return nil, false
	}
	return o.TransactionType, true
}

// HasTransactionType returns a boolean if a field has been set.
func (o *DtoBankAccountsResponse) HasTransactionType() bool {
	if o != nil && !IsNil(o.TransactionType) {
		return true
	}

	return false
}

// SetTransactionType gets a reference to the given string and assigns it to the TransactionType field.
func (o *DtoBankAccountsResponse) SetTransactionType(v string) {
	o.TransactionType = &v
}

func (o DtoBankAccountsResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DtoBankAccountsResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AtsEffectiveDate) {
		toSerialize["atsEffectiveDate"] = o.AtsEffectiveDate
	}
	if !IsNil(o.BankAccountNo) {
		toSerialize["bankAccountNo"] = o.BankAccountNo
	}
	if !IsNil(o.BankBranchCode) {
		toSerialize["bankBranchCode"] = o.BankBranchCode
	}
	if !IsNil(o.BankCode) {
		toSerialize["bankCode"] = o.BankCode
	}
	if !IsNil(o.EndDate) {
		toSerialize["endDate"] = o.EndDate
	}
	if !IsNil(o.PayType) {
		toSerialize["payType"] = o.PayType
	}
	if !IsNil(o.PaymentToken) {
		toSerialize["paymentToken"] = o.PaymentToken
	}
	if !IsNil(o.RpType) {
		toSerialize["rpType"] = o.RpType
	}
	if !IsNil(o.TransactionType) {
		toSerialize["transactionType"] = o.TransactionType
	}
	return toSerialize, nil
}

type NullableDtoBankAccountsResponse struct {
	value *DtoBankAccountsResponse
	isSet bool
}

func (v NullableDtoBankAccountsResponse) Get() *DtoBankAccountsResponse {
	return v.value
}

func (v *NullableDtoBankAccountsResponse) Set(val *DtoBankAccountsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableDtoBankAccountsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableDtoBankAccountsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDtoBankAccountsResponse(val *DtoBankAccountsResponse) *NullableDtoBankAccountsResponse {
	return &NullableDtoBankAccountsResponse{value: val, isSet: true}
}

func (v NullableDtoBankAccountsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDtoBankAccountsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
