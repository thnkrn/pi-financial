/*
Pi User Service V2

Contain Generic Information.

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the DtoCreateTradingAccountRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DtoCreateTradingAccountRequest{}

// DtoCreateTradingAccountRequest struct for DtoCreateTradingAccountRequest
type DtoCreateTradingAccountRequest struct {
	AccountStatus      *DomainTradeAccountStatus `json:"accountStatus,omitempty"`
	AccountType        *string                   `json:"accountType,omitempty"`
	AccountTypeCode    *string                   `json:"accountTypeCode,omitempty"`
	CreditLine         *float32                  `json:"creditLine,omitempty"`
	CreditLineCurrency *string                   `json:"creditLineCurrency,omitempty"`
	// 2025-12-31
	EffectiveDate  *string `json:"effectiveDate,omitempty"`
	EnableBuy      *string `json:"enableBuy,omitempty"`
	EnableDeposit  *string `json:"enableDeposit,omitempty"`
	EnableSell     *string `json:"enableSell,omitempty"`
	EnableWithdraw *string `json:"enableWithdraw,omitempty"`
	// 2025-12-31
	EndDate          *string `json:"endDate,omitempty"`
	ExchangeMarketId *string `json:"exchangeMarketId,omitempty"`
	FrontName        *string `json:"frontName,omitempty"`
	MarketingId      *string `json:"marketingId,omitempty"`
	// 2025-12-31
	OpenDate         *string `json:"openDate,omitempty"`
	SaleLicense      *string `json:"saleLicense,omitempty"`
	TradingAccountNo *string `json:"tradingAccountNo,omitempty"`
}

// NewDtoCreateTradingAccountRequest instantiates a new DtoCreateTradingAccountRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDtoCreateTradingAccountRequest() *DtoCreateTradingAccountRequest {
	this := DtoCreateTradingAccountRequest{}
	return &this
}

// NewDtoCreateTradingAccountRequestWithDefaults instantiates a new DtoCreateTradingAccountRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDtoCreateTradingAccountRequestWithDefaults() *DtoCreateTradingAccountRequest {
	this := DtoCreateTradingAccountRequest{}
	return &this
}

// GetAccountStatus returns the AccountStatus field value if set, zero value otherwise.
func (o *DtoCreateTradingAccountRequest) GetAccountStatus() DomainTradeAccountStatus {
	if o == nil || IsNil(o.AccountStatus) {
		var ret DomainTradeAccountStatus
		return ret
	}
	return *o.AccountStatus
}

// GetAccountStatusOk returns a tuple with the AccountStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtoCreateTradingAccountRequest) GetAccountStatusOk() (*DomainTradeAccountStatus, bool) {
	if o == nil || IsNil(o.AccountStatus) {
		return nil, false
	}
	return o.AccountStatus, true
}

// HasAccountStatus returns a boolean if a field has been set.
func (o *DtoCreateTradingAccountRequest) HasAccountStatus() bool {
	if o != nil && !IsNil(o.AccountStatus) {
		return true
	}

	return false
}

// SetAccountStatus gets a reference to the given DomainTradeAccountStatus and assigns it to the AccountStatus field.
func (o *DtoCreateTradingAccountRequest) SetAccountStatus(v DomainTradeAccountStatus) {
	o.AccountStatus = &v
}

// GetAccountType returns the AccountType field value if set, zero value otherwise.
func (o *DtoCreateTradingAccountRequest) GetAccountType() string {
	if o == nil || IsNil(o.AccountType) {
		var ret string
		return ret
	}
	return *o.AccountType
}

// GetAccountTypeOk returns a tuple with the AccountType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtoCreateTradingAccountRequest) GetAccountTypeOk() (*string, bool) {
	if o == nil || IsNil(o.AccountType) {
		return nil, false
	}
	return o.AccountType, true
}

// HasAccountType returns a boolean if a field has been set.
func (o *DtoCreateTradingAccountRequest) HasAccountType() bool {
	if o != nil && !IsNil(o.AccountType) {
		return true
	}

	return false
}

// SetAccountType gets a reference to the given string and assigns it to the AccountType field.
func (o *DtoCreateTradingAccountRequest) SetAccountType(v string) {
	o.AccountType = &v
}

// GetAccountTypeCode returns the AccountTypeCode field value if set, zero value otherwise.
func (o *DtoCreateTradingAccountRequest) GetAccountTypeCode() string {
	if o == nil || IsNil(o.AccountTypeCode) {
		var ret string
		return ret
	}
	return *o.AccountTypeCode
}

// GetAccountTypeCodeOk returns a tuple with the AccountTypeCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtoCreateTradingAccountRequest) GetAccountTypeCodeOk() (*string, bool) {
	if o == nil || IsNil(o.AccountTypeCode) {
		return nil, false
	}
	return o.AccountTypeCode, true
}

// HasAccountTypeCode returns a boolean if a field has been set.
func (o *DtoCreateTradingAccountRequest) HasAccountTypeCode() bool {
	if o != nil && !IsNil(o.AccountTypeCode) {
		return true
	}

	return false
}

// SetAccountTypeCode gets a reference to the given string and assigns it to the AccountTypeCode field.
func (o *DtoCreateTradingAccountRequest) SetAccountTypeCode(v string) {
	o.AccountTypeCode = &v
}

// GetCreditLine returns the CreditLine field value if set, zero value otherwise.
func (o *DtoCreateTradingAccountRequest) GetCreditLine() float32 {
	if o == nil || IsNil(o.CreditLine) {
		var ret float32
		return ret
	}
	return *o.CreditLine
}

// GetCreditLineOk returns a tuple with the CreditLine field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtoCreateTradingAccountRequest) GetCreditLineOk() (*float32, bool) {
	if o == nil || IsNil(o.CreditLine) {
		return nil, false
	}
	return o.CreditLine, true
}

// HasCreditLine returns a boolean if a field has been set.
func (o *DtoCreateTradingAccountRequest) HasCreditLine() bool {
	if o != nil && !IsNil(o.CreditLine) {
		return true
	}

	return false
}

// SetCreditLine gets a reference to the given float32 and assigns it to the CreditLine field.
func (o *DtoCreateTradingAccountRequest) SetCreditLine(v float32) {
	o.CreditLine = &v
}

// GetCreditLineCurrency returns the CreditLineCurrency field value if set, zero value otherwise.
func (o *DtoCreateTradingAccountRequest) GetCreditLineCurrency() string {
	if o == nil || IsNil(o.CreditLineCurrency) {
		var ret string
		return ret
	}
	return *o.CreditLineCurrency
}

// GetCreditLineCurrencyOk returns a tuple with the CreditLineCurrency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtoCreateTradingAccountRequest) GetCreditLineCurrencyOk() (*string, bool) {
	if o == nil || IsNil(o.CreditLineCurrency) {
		return nil, false
	}
	return o.CreditLineCurrency, true
}

// HasCreditLineCurrency returns a boolean if a field has been set.
func (o *DtoCreateTradingAccountRequest) HasCreditLineCurrency() bool {
	if o != nil && !IsNil(o.CreditLineCurrency) {
		return true
	}

	return false
}

// SetCreditLineCurrency gets a reference to the given string and assigns it to the CreditLineCurrency field.
func (o *DtoCreateTradingAccountRequest) SetCreditLineCurrency(v string) {
	o.CreditLineCurrency = &v
}

// GetEffectiveDate returns the EffectiveDate field value if set, zero value otherwise.
func (o *DtoCreateTradingAccountRequest) GetEffectiveDate() string {
	if o == nil || IsNil(o.EffectiveDate) {
		var ret string
		return ret
	}
	return *o.EffectiveDate
}

// GetEffectiveDateOk returns a tuple with the EffectiveDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtoCreateTradingAccountRequest) GetEffectiveDateOk() (*string, bool) {
	if o == nil || IsNil(o.EffectiveDate) {
		return nil, false
	}
	return o.EffectiveDate, true
}

// HasEffectiveDate returns a boolean if a field has been set.
func (o *DtoCreateTradingAccountRequest) HasEffectiveDate() bool {
	if o != nil && !IsNil(o.EffectiveDate) {
		return true
	}

	return false
}

// SetEffectiveDate gets a reference to the given string and assigns it to the EffectiveDate field.
func (o *DtoCreateTradingAccountRequest) SetEffectiveDate(v string) {
	o.EffectiveDate = &v
}

// GetEnableBuy returns the EnableBuy field value if set, zero value otherwise.
func (o *DtoCreateTradingAccountRequest) GetEnableBuy() string {
	if o == nil || IsNil(o.EnableBuy) {
		var ret string
		return ret
	}
	return *o.EnableBuy
}

// GetEnableBuyOk returns a tuple with the EnableBuy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtoCreateTradingAccountRequest) GetEnableBuyOk() (*string, bool) {
	if o == nil || IsNil(o.EnableBuy) {
		return nil, false
	}
	return o.EnableBuy, true
}

// HasEnableBuy returns a boolean if a field has been set.
func (o *DtoCreateTradingAccountRequest) HasEnableBuy() bool {
	if o != nil && !IsNil(o.EnableBuy) {
		return true
	}

	return false
}

// SetEnableBuy gets a reference to the given string and assigns it to the EnableBuy field.
func (o *DtoCreateTradingAccountRequest) SetEnableBuy(v string) {
	o.EnableBuy = &v
}

// GetEnableDeposit returns the EnableDeposit field value if set, zero value otherwise.
func (o *DtoCreateTradingAccountRequest) GetEnableDeposit() string {
	if o == nil || IsNil(o.EnableDeposit) {
		var ret string
		return ret
	}
	return *o.EnableDeposit
}

// GetEnableDepositOk returns a tuple with the EnableDeposit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtoCreateTradingAccountRequest) GetEnableDepositOk() (*string, bool) {
	if o == nil || IsNil(o.EnableDeposit) {
		return nil, false
	}
	return o.EnableDeposit, true
}

// HasEnableDeposit returns a boolean if a field has been set.
func (o *DtoCreateTradingAccountRequest) HasEnableDeposit() bool {
	if o != nil && !IsNil(o.EnableDeposit) {
		return true
	}

	return false
}

// SetEnableDeposit gets a reference to the given string and assigns it to the EnableDeposit field.
func (o *DtoCreateTradingAccountRequest) SetEnableDeposit(v string) {
	o.EnableDeposit = &v
}

// GetEnableSell returns the EnableSell field value if set, zero value otherwise.
func (o *DtoCreateTradingAccountRequest) GetEnableSell() string {
	if o == nil || IsNil(o.EnableSell) {
		var ret string
		return ret
	}
	return *o.EnableSell
}

// GetEnableSellOk returns a tuple with the EnableSell field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtoCreateTradingAccountRequest) GetEnableSellOk() (*string, bool) {
	if o == nil || IsNil(o.EnableSell) {
		return nil, false
	}
	return o.EnableSell, true
}

// HasEnableSell returns a boolean if a field has been set.
func (o *DtoCreateTradingAccountRequest) HasEnableSell() bool {
	if o != nil && !IsNil(o.EnableSell) {
		return true
	}

	return false
}

// SetEnableSell gets a reference to the given string and assigns it to the EnableSell field.
func (o *DtoCreateTradingAccountRequest) SetEnableSell(v string) {
	o.EnableSell = &v
}

// GetEnableWithdraw returns the EnableWithdraw field value if set, zero value otherwise.
func (o *DtoCreateTradingAccountRequest) GetEnableWithdraw() string {
	if o == nil || IsNil(o.EnableWithdraw) {
		var ret string
		return ret
	}
	return *o.EnableWithdraw
}

// GetEnableWithdrawOk returns a tuple with the EnableWithdraw field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtoCreateTradingAccountRequest) GetEnableWithdrawOk() (*string, bool) {
	if o == nil || IsNil(o.EnableWithdraw) {
		return nil, false
	}
	return o.EnableWithdraw, true
}

// HasEnableWithdraw returns a boolean if a field has been set.
func (o *DtoCreateTradingAccountRequest) HasEnableWithdraw() bool {
	if o != nil && !IsNil(o.EnableWithdraw) {
		return true
	}

	return false
}

// SetEnableWithdraw gets a reference to the given string and assigns it to the EnableWithdraw field.
func (o *DtoCreateTradingAccountRequest) SetEnableWithdraw(v string) {
	o.EnableWithdraw = &v
}

// GetEndDate returns the EndDate field value if set, zero value otherwise.
func (o *DtoCreateTradingAccountRequest) GetEndDate() string {
	if o == nil || IsNil(o.EndDate) {
		var ret string
		return ret
	}
	return *o.EndDate
}

// GetEndDateOk returns a tuple with the EndDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtoCreateTradingAccountRequest) GetEndDateOk() (*string, bool) {
	if o == nil || IsNil(o.EndDate) {
		return nil, false
	}
	return o.EndDate, true
}

// HasEndDate returns a boolean if a field has been set.
func (o *DtoCreateTradingAccountRequest) HasEndDate() bool {
	if o != nil && !IsNil(o.EndDate) {
		return true
	}

	return false
}

// SetEndDate gets a reference to the given string and assigns it to the EndDate field.
func (o *DtoCreateTradingAccountRequest) SetEndDate(v string) {
	o.EndDate = &v
}

// GetExchangeMarketId returns the ExchangeMarketId field value if set, zero value otherwise.
func (o *DtoCreateTradingAccountRequest) GetExchangeMarketId() string {
	if o == nil || IsNil(o.ExchangeMarketId) {
		var ret string
		return ret
	}
	return *o.ExchangeMarketId
}

// GetExchangeMarketIdOk returns a tuple with the ExchangeMarketId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtoCreateTradingAccountRequest) GetExchangeMarketIdOk() (*string, bool) {
	if o == nil || IsNil(o.ExchangeMarketId) {
		return nil, false
	}
	return o.ExchangeMarketId, true
}

// HasExchangeMarketId returns a boolean if a field has been set.
func (o *DtoCreateTradingAccountRequest) HasExchangeMarketId() bool {
	if o != nil && !IsNil(o.ExchangeMarketId) {
		return true
	}

	return false
}

// SetExchangeMarketId gets a reference to the given string and assigns it to the ExchangeMarketId field.
func (o *DtoCreateTradingAccountRequest) SetExchangeMarketId(v string) {
	o.ExchangeMarketId = &v
}

// GetFrontName returns the FrontName field value if set, zero value otherwise.
func (o *DtoCreateTradingAccountRequest) GetFrontName() string {
	if o == nil || IsNil(o.FrontName) {
		var ret string
		return ret
	}
	return *o.FrontName
}

// GetFrontNameOk returns a tuple with the FrontName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtoCreateTradingAccountRequest) GetFrontNameOk() (*string, bool) {
	if o == nil || IsNil(o.FrontName) {
		return nil, false
	}
	return o.FrontName, true
}

// HasFrontName returns a boolean if a field has been set.
func (o *DtoCreateTradingAccountRequest) HasFrontName() bool {
	if o != nil && !IsNil(o.FrontName) {
		return true
	}

	return false
}

// SetFrontName gets a reference to the given string and assigns it to the FrontName field.
func (o *DtoCreateTradingAccountRequest) SetFrontName(v string) {
	o.FrontName = &v
}

// GetMarketingId returns the MarketingId field value if set, zero value otherwise.
func (o *DtoCreateTradingAccountRequest) GetMarketingId() string {
	if o == nil || IsNil(o.MarketingId) {
		var ret string
		return ret
	}
	return *o.MarketingId
}

// GetMarketingIdOk returns a tuple with the MarketingId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtoCreateTradingAccountRequest) GetMarketingIdOk() (*string, bool) {
	if o == nil || IsNil(o.MarketingId) {
		return nil, false
	}
	return o.MarketingId, true
}

// HasMarketingId returns a boolean if a field has been set.
func (o *DtoCreateTradingAccountRequest) HasMarketingId() bool {
	if o != nil && !IsNil(o.MarketingId) {
		return true
	}

	return false
}

// SetMarketingId gets a reference to the given string and assigns it to the MarketingId field.
func (o *DtoCreateTradingAccountRequest) SetMarketingId(v string) {
	o.MarketingId = &v
}

// GetOpenDate returns the OpenDate field value if set, zero value otherwise.
func (o *DtoCreateTradingAccountRequest) GetOpenDate() string {
	if o == nil || IsNil(o.OpenDate) {
		var ret string
		return ret
	}
	return *o.OpenDate
}

// GetOpenDateOk returns a tuple with the OpenDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtoCreateTradingAccountRequest) GetOpenDateOk() (*string, bool) {
	if o == nil || IsNil(o.OpenDate) {
		return nil, false
	}
	return o.OpenDate, true
}

// HasOpenDate returns a boolean if a field has been set.
func (o *DtoCreateTradingAccountRequest) HasOpenDate() bool {
	if o != nil && !IsNil(o.OpenDate) {
		return true
	}

	return false
}

// SetOpenDate gets a reference to the given string and assigns it to the OpenDate field.
func (o *DtoCreateTradingAccountRequest) SetOpenDate(v string) {
	o.OpenDate = &v
}

// GetSaleLicense returns the SaleLicense field value if set, zero value otherwise.
func (o *DtoCreateTradingAccountRequest) GetSaleLicense() string {
	if o == nil || IsNil(o.SaleLicense) {
		var ret string
		return ret
	}
	return *o.SaleLicense
}

// GetSaleLicenseOk returns a tuple with the SaleLicense field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtoCreateTradingAccountRequest) GetSaleLicenseOk() (*string, bool) {
	if o == nil || IsNil(o.SaleLicense) {
		return nil, false
	}
	return o.SaleLicense, true
}

// HasSaleLicense returns a boolean if a field has been set.
func (o *DtoCreateTradingAccountRequest) HasSaleLicense() bool {
	if o != nil && !IsNil(o.SaleLicense) {
		return true
	}

	return false
}

// SetSaleLicense gets a reference to the given string and assigns it to the SaleLicense field.
func (o *DtoCreateTradingAccountRequest) SetSaleLicense(v string) {
	o.SaleLicense = &v
}

// GetTradingAccountNo returns the TradingAccountNo field value if set, zero value otherwise.
func (o *DtoCreateTradingAccountRequest) GetTradingAccountNo() string {
	if o == nil || IsNil(o.TradingAccountNo) {
		var ret string
		return ret
	}
	return *o.TradingAccountNo
}

// GetTradingAccountNoOk returns a tuple with the TradingAccountNo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtoCreateTradingAccountRequest) GetTradingAccountNoOk() (*string, bool) {
	if o == nil || IsNil(o.TradingAccountNo) {
		return nil, false
	}
	return o.TradingAccountNo, true
}

// HasTradingAccountNo returns a boolean if a field has been set.
func (o *DtoCreateTradingAccountRequest) HasTradingAccountNo() bool {
	if o != nil && !IsNil(o.TradingAccountNo) {
		return true
	}

	return false
}

// SetTradingAccountNo gets a reference to the given string and assigns it to the TradingAccountNo field.
func (o *DtoCreateTradingAccountRequest) SetTradingAccountNo(v string) {
	o.TradingAccountNo = &v
}

func (o DtoCreateTradingAccountRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DtoCreateTradingAccountRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AccountStatus) {
		toSerialize["accountStatus"] = o.AccountStatus
	}
	if !IsNil(o.AccountType) {
		toSerialize["accountType"] = o.AccountType
	}
	if !IsNil(o.AccountTypeCode) {
		toSerialize["accountTypeCode"] = o.AccountTypeCode
	}
	if !IsNil(o.CreditLine) {
		toSerialize["creditLine"] = o.CreditLine
	}
	if !IsNil(o.CreditLineCurrency) {
		toSerialize["creditLineCurrency"] = o.CreditLineCurrency
	}
	if !IsNil(o.EffectiveDate) {
		toSerialize["effectiveDate"] = o.EffectiveDate
	}
	if !IsNil(o.EnableBuy) {
		toSerialize["enableBuy"] = o.EnableBuy
	}
	if !IsNil(o.EnableDeposit) {
		toSerialize["enableDeposit"] = o.EnableDeposit
	}
	if !IsNil(o.EnableSell) {
		toSerialize["enableSell"] = o.EnableSell
	}
	if !IsNil(o.EnableWithdraw) {
		toSerialize["enableWithdraw"] = o.EnableWithdraw
	}
	if !IsNil(o.EndDate) {
		toSerialize["endDate"] = o.EndDate
	}
	if !IsNil(o.ExchangeMarketId) {
		toSerialize["exchangeMarketId"] = o.ExchangeMarketId
	}
	if !IsNil(o.FrontName) {
		toSerialize["frontName"] = o.FrontName
	}
	if !IsNil(o.MarketingId) {
		toSerialize["marketingId"] = o.MarketingId
	}
	if !IsNil(o.OpenDate) {
		toSerialize["openDate"] = o.OpenDate
	}
	if !IsNil(o.SaleLicense) {
		toSerialize["saleLicense"] = o.SaleLicense
	}
	if !IsNil(o.TradingAccountNo) {
		toSerialize["tradingAccountNo"] = o.TradingAccountNo
	}
	return toSerialize, nil
}

type NullableDtoCreateTradingAccountRequest struct {
	value *DtoCreateTradingAccountRequest
	isSet bool
}

func (v NullableDtoCreateTradingAccountRequest) Get() *DtoCreateTradingAccountRequest {
	return v.value
}

func (v *NullableDtoCreateTradingAccountRequest) Set(val *DtoCreateTradingAccountRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableDtoCreateTradingAccountRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableDtoCreateTradingAccountRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDtoCreateTradingAccountRequest(val *DtoCreateTradingAccountRequest) *NullableDtoCreateTradingAccountRequest {
	return &NullableDtoCreateTradingAccountRequest{value: val, isSet: true}
}

func (v NullableDtoCreateTradingAccountRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDtoCreateTradingAccountRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
