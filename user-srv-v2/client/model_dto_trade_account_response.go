/*
Pi User Service V2

Contain Generic Information.

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the DtoTradeAccountResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DtoTradeAccountResponse{}

// DtoTradeAccountResponse struct for DtoTradeAccountResponse
type DtoTradeAccountResponse struct {
	CustomerCode    *string                     `json:"customerCode,omitempty"`
	TradingAccounts []DtoTradingAccountResponse `json:"tradingAccounts,omitempty"`
}

// NewDtoTradeAccountResponse instantiates a new DtoTradeAccountResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDtoTradeAccountResponse() *DtoTradeAccountResponse {
	this := DtoTradeAccountResponse{}
	return &this
}

// NewDtoTradeAccountResponseWithDefaults instantiates a new DtoTradeAccountResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDtoTradeAccountResponseWithDefaults() *DtoTradeAccountResponse {
	this := DtoTradeAccountResponse{}
	return &this
}

// GetCustomerCode returns the CustomerCode field value if set, zero value otherwise.
func (o *DtoTradeAccountResponse) GetCustomerCode() string {
	if o == nil || IsNil(o.CustomerCode) {
		var ret string
		return ret
	}
	return *o.CustomerCode
}

// GetCustomerCodeOk returns a tuple with the CustomerCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtoTradeAccountResponse) GetCustomerCodeOk() (*string, bool) {
	if o == nil || IsNil(o.CustomerCode) {
		return nil, false
	}
	return o.CustomerCode, true
}

// HasCustomerCode returns a boolean if a field has been set.
func (o *DtoTradeAccountResponse) HasCustomerCode() bool {
	if o != nil && !IsNil(o.CustomerCode) {
		return true
	}

	return false
}

// SetCustomerCode gets a reference to the given string and assigns it to the CustomerCode field.
func (o *DtoTradeAccountResponse) SetCustomerCode(v string) {
	o.CustomerCode = &v
}

// GetTradingAccounts returns the TradingAccounts field value if set, zero value otherwise.
func (o *DtoTradeAccountResponse) GetTradingAccounts() []DtoTradingAccountResponse {
	if o == nil || IsNil(o.TradingAccounts) {
		var ret []DtoTradingAccountResponse
		return ret
	}
	return o.TradingAccounts
}

// GetTradingAccountsOk returns a tuple with the TradingAccounts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtoTradeAccountResponse) GetTradingAccountsOk() ([]DtoTradingAccountResponse, bool) {
	if o == nil || IsNil(o.TradingAccounts) {
		return nil, false
	}
	return o.TradingAccounts, true
}

// HasTradingAccounts returns a boolean if a field has been set.
func (o *DtoTradeAccountResponse) HasTradingAccounts() bool {
	if o != nil && !IsNil(o.TradingAccounts) {
		return true
	}

	return false
}

// SetTradingAccounts gets a reference to the given []DtoTradingAccountResponse and assigns it to the TradingAccounts field.
func (o *DtoTradeAccountResponse) SetTradingAccounts(v []DtoTradingAccountResponse) {
	o.TradingAccounts = v
}

func (o DtoTradeAccountResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DtoTradeAccountResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CustomerCode) {
		toSerialize["customerCode"] = o.CustomerCode
	}
	if !IsNil(o.TradingAccounts) {
		toSerialize["tradingAccounts"] = o.TradingAccounts
	}
	return toSerialize, nil
}

type NullableDtoTradeAccountResponse struct {
	value *DtoTradeAccountResponse
	isSet bool
}

func (v NullableDtoTradeAccountResponse) Get() *DtoTradeAccountResponse {
	return v.value
}

func (v *NullableDtoTradeAccountResponse) Set(val *DtoTradeAccountResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableDtoTradeAccountResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableDtoTradeAccountResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDtoTradeAccountResponse(val *DtoTradeAccountResponse) *NullableDtoTradeAccountResponse {
	return &NullableDtoTradeAccountResponse{value: val, isSet: true}
}

func (v NullableDtoTradeAccountResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDtoTradeAccountResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
