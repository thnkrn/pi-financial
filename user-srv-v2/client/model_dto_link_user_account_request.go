/*
Pi User Service V2

Contain Generic Information.

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the DtoLinkUserAccountRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DtoLinkUserAccountRequest{}

// DtoLinkUserAccountRequest struct for DtoLinkUserAccountRequest
type DtoLinkUserAccountRequest struct {
	Status          *DomainUserAccountStatus `json:"status,omitempty"`
	UserAccountId   string                   `json:"userAccountId"`
	UserAccountType DomainUserAccountType    `json:"userAccountType"`
}

type _DtoLinkUserAccountRequest DtoLinkUserAccountRequest

// NewDtoLinkUserAccountRequest instantiates a new DtoLinkUserAccountRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDtoLinkUserAccountRequest(userAccountId string, userAccountType DomainUserAccountType) *DtoLinkUserAccountRequest {
	this := DtoLinkUserAccountRequest{}
	this.UserAccountId = userAccountId
	this.UserAccountType = userAccountType
	return &this
}

// NewDtoLinkUserAccountRequestWithDefaults instantiates a new DtoLinkUserAccountRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDtoLinkUserAccountRequestWithDefaults() *DtoLinkUserAccountRequest {
	this := DtoLinkUserAccountRequest{}
	return &this
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *DtoLinkUserAccountRequest) GetStatus() DomainUserAccountStatus {
	if o == nil || IsNil(o.Status) {
		var ret DomainUserAccountStatus
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtoLinkUserAccountRequest) GetStatusOk() (*DomainUserAccountStatus, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *DtoLinkUserAccountRequest) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given DomainUserAccountStatus and assigns it to the Status field.
func (o *DtoLinkUserAccountRequest) SetStatus(v DomainUserAccountStatus) {
	o.Status = &v
}

// GetUserAccountId returns the UserAccountId field value
func (o *DtoLinkUserAccountRequest) GetUserAccountId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UserAccountId
}

// GetUserAccountIdOk returns a tuple with the UserAccountId field value
// and a boolean to check if the value has been set.
func (o *DtoLinkUserAccountRequest) GetUserAccountIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UserAccountId, true
}

// SetUserAccountId sets field value
func (o *DtoLinkUserAccountRequest) SetUserAccountId(v string) {
	o.UserAccountId = v
}

// GetUserAccountType returns the UserAccountType field value
func (o *DtoLinkUserAccountRequest) GetUserAccountType() DomainUserAccountType {
	if o == nil {
		var ret DomainUserAccountType
		return ret
	}

	return o.UserAccountType
}

// GetUserAccountTypeOk returns a tuple with the UserAccountType field value
// and a boolean to check if the value has been set.
func (o *DtoLinkUserAccountRequest) GetUserAccountTypeOk() (*DomainUserAccountType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UserAccountType, true
}

// SetUserAccountType sets field value
func (o *DtoLinkUserAccountRequest) SetUserAccountType(v DomainUserAccountType) {
	o.UserAccountType = v
}

func (o DtoLinkUserAccountRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DtoLinkUserAccountRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	toSerialize["userAccountId"] = o.UserAccountId
	toSerialize["userAccountType"] = o.UserAccountType
	return toSerialize, nil
}

func (o *DtoLinkUserAccountRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"userAccountId",
		"userAccountType",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varDtoLinkUserAccountRequest := _DtoLinkUserAccountRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varDtoLinkUserAccountRequest)

	if err != nil {
		return err
	}

	*o = DtoLinkUserAccountRequest(varDtoLinkUserAccountRequest)

	return err
}

type NullableDtoLinkUserAccountRequest struct {
	value *DtoLinkUserAccountRequest
	isSet bool
}

func (v NullableDtoLinkUserAccountRequest) Get() *DtoLinkUserAccountRequest {
	return v.value
}

func (v *NullableDtoLinkUserAccountRequest) Set(val *DtoLinkUserAccountRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableDtoLinkUserAccountRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableDtoLinkUserAccountRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDtoLinkUserAccountRequest(val *DtoLinkUserAccountRequest) *NullableDtoLinkUserAccountRequest {
	return &NullableDtoLinkUserAccountRequest{value: val, isSet: true}
}

func (v NullableDtoLinkUserAccountRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDtoLinkUserAccountRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
