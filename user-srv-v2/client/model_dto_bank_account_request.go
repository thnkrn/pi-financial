/*
Pi User Service V2

Contain Generic Information.

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the DtoBankAccountRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DtoBankAccountRequest{}

// DtoBankAccountRequest struct for DtoBankAccountRequest
type DtoBankAccountRequest struct {
	AccountName      string  `json:"accountName"`
	AccountNo        string  `json:"accountNo"`
	AtsEffectiveDate *string `json:"atsEffectiveDate,omitempty"`
	BankCode         string  `json:"bankCode"`
	BranchCode       string  `json:"branchCode"`
	PaymentToken     *string `json:"paymentToken,omitempty"`
	Status           string  `json:"status"`
}

type _DtoBankAccountRequest DtoBankAccountRequest

// NewDtoBankAccountRequest instantiates a new DtoBankAccountRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDtoBankAccountRequest(accountName string, accountNo string, bankCode string, branchCode string, status string) *DtoBankAccountRequest {
	this := DtoBankAccountRequest{}
	this.AccountName = accountName
	this.AccountNo = accountNo
	this.BankCode = bankCode
	this.BranchCode = branchCode
	this.Status = status
	return &this
}

// NewDtoBankAccountRequestWithDefaults instantiates a new DtoBankAccountRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDtoBankAccountRequestWithDefaults() *DtoBankAccountRequest {
	this := DtoBankAccountRequest{}
	return &this
}

// GetAccountName returns the AccountName field value
func (o *DtoBankAccountRequest) GetAccountName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AccountName
}

// GetAccountNameOk returns a tuple with the AccountName field value
// and a boolean to check if the value has been set.
func (o *DtoBankAccountRequest) GetAccountNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AccountName, true
}

// SetAccountName sets field value
func (o *DtoBankAccountRequest) SetAccountName(v string) {
	o.AccountName = v
}

// GetAccountNo returns the AccountNo field value
func (o *DtoBankAccountRequest) GetAccountNo() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AccountNo
}

// GetAccountNoOk returns a tuple with the AccountNo field value
// and a boolean to check if the value has been set.
func (o *DtoBankAccountRequest) GetAccountNoOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AccountNo, true
}

// SetAccountNo sets field value
func (o *DtoBankAccountRequest) SetAccountNo(v string) {
	o.AccountNo = v
}

// GetAtsEffectiveDate returns the AtsEffectiveDate field value if set, zero value otherwise.
func (o *DtoBankAccountRequest) GetAtsEffectiveDate() string {
	if o == nil || IsNil(o.AtsEffectiveDate) {
		var ret string
		return ret
	}
	return *o.AtsEffectiveDate
}

// GetAtsEffectiveDateOk returns a tuple with the AtsEffectiveDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtoBankAccountRequest) GetAtsEffectiveDateOk() (*string, bool) {
	if o == nil || IsNil(o.AtsEffectiveDate) {
		return nil, false
	}
	return o.AtsEffectiveDate, true
}

// HasAtsEffectiveDate returns a boolean if a field has been set.
func (o *DtoBankAccountRequest) HasAtsEffectiveDate() bool {
	if o != nil && !IsNil(o.AtsEffectiveDate) {
		return true
	}

	return false
}

// SetAtsEffectiveDate gets a reference to the given string and assigns it to the AtsEffectiveDate field.
func (o *DtoBankAccountRequest) SetAtsEffectiveDate(v string) {
	o.AtsEffectiveDate = &v
}

// GetBankCode returns the BankCode field value
func (o *DtoBankAccountRequest) GetBankCode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.BankCode
}

// GetBankCodeOk returns a tuple with the BankCode field value
// and a boolean to check if the value has been set.
func (o *DtoBankAccountRequest) GetBankCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BankCode, true
}

// SetBankCode sets field value
func (o *DtoBankAccountRequest) SetBankCode(v string) {
	o.BankCode = v
}

// GetBranchCode returns the BranchCode field value
func (o *DtoBankAccountRequest) GetBranchCode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.BranchCode
}

// GetBranchCodeOk returns a tuple with the BranchCode field value
// and a boolean to check if the value has been set.
func (o *DtoBankAccountRequest) GetBranchCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BranchCode, true
}

// SetBranchCode sets field value
func (o *DtoBankAccountRequest) SetBranchCode(v string) {
	o.BranchCode = v
}

// GetPaymentToken returns the PaymentToken field value if set, zero value otherwise.
func (o *DtoBankAccountRequest) GetPaymentToken() string {
	if o == nil || IsNil(o.PaymentToken) {
		var ret string
		return ret
	}
	return *o.PaymentToken
}

// GetPaymentTokenOk returns a tuple with the PaymentToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtoBankAccountRequest) GetPaymentTokenOk() (*string, bool) {
	if o == nil || IsNil(o.PaymentToken) {
		return nil, false
	}
	return o.PaymentToken, true
}

// HasPaymentToken returns a boolean if a field has been set.
func (o *DtoBankAccountRequest) HasPaymentToken() bool {
	if o != nil && !IsNil(o.PaymentToken) {
		return true
	}

	return false
}

// SetPaymentToken gets a reference to the given string and assigns it to the PaymentToken field.
func (o *DtoBankAccountRequest) SetPaymentToken(v string) {
	o.PaymentToken = &v
}

// GetStatus returns the Status field value
func (o *DtoBankAccountRequest) GetStatus() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *DtoBankAccountRequest) GetStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *DtoBankAccountRequest) SetStatus(v string) {
	o.Status = v
}

func (o DtoBankAccountRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DtoBankAccountRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["accountName"] = o.AccountName
	toSerialize["accountNo"] = o.AccountNo
	if !IsNil(o.AtsEffectiveDate) {
		toSerialize["atsEffectiveDate"] = o.AtsEffectiveDate
	}
	toSerialize["bankCode"] = o.BankCode
	toSerialize["branchCode"] = o.BranchCode
	if !IsNil(o.PaymentToken) {
		toSerialize["paymentToken"] = o.PaymentToken
	}
	toSerialize["status"] = o.Status
	return toSerialize, nil
}

func (o *DtoBankAccountRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"accountName",
		"accountNo",
		"bankCode",
		"branchCode",
		"status",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varDtoBankAccountRequest := _DtoBankAccountRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varDtoBankAccountRequest)

	if err != nil {
		return err
	}

	*o = DtoBankAccountRequest(varDtoBankAccountRequest)

	return err
}

type NullableDtoBankAccountRequest struct {
	value *DtoBankAccountRequest
	isSet bool
}

func (v NullableDtoBankAccountRequest) Get() *DtoBankAccountRequest {
	return v.value
}

func (v *NullableDtoBankAccountRequest) Set(val *DtoBankAccountRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableDtoBankAccountRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableDtoBankAccountRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDtoBankAccountRequest(val *DtoBankAccountRequest) *NullableDtoBankAccountRequest {
	return &NullableDtoBankAccountRequest{value: val, isSet: true}
}

func (v NullableDtoBankAccountRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDtoBankAccountRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
