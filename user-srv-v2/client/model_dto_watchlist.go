/*
Pi User Service V2

Contain Generic Information.

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the DtoWatchlist type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DtoWatchlist{}

// DtoWatchlist struct for DtoWatchlist
type DtoWatchlist struct {
	Id       *string `json:"id,omitempty"`
	Sequence *int32  `json:"sequence,omitempty"`
	Symbol   *string `json:"symbol,omitempty"`
	Venue    *string `json:"venue,omitempty"`
}

// NewDtoWatchlist instantiates a new DtoWatchlist object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDtoWatchlist() *DtoWatchlist {
	this := DtoWatchlist{}
	return &this
}

// NewDtoWatchlistWithDefaults instantiates a new DtoWatchlist object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDtoWatchlistWithDefaults() *DtoWatchlist {
	this := DtoWatchlist{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *DtoWatchlist) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtoWatchlist) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *DtoWatchlist) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *DtoWatchlist) SetId(v string) {
	o.Id = &v
}

// GetSequence returns the Sequence field value if set, zero value otherwise.
func (o *DtoWatchlist) GetSequence() int32 {
	if o == nil || IsNil(o.Sequence) {
		var ret int32
		return ret
	}
	return *o.Sequence
}

// GetSequenceOk returns a tuple with the Sequence field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtoWatchlist) GetSequenceOk() (*int32, bool) {
	if o == nil || IsNil(o.Sequence) {
		return nil, false
	}
	return o.Sequence, true
}

// HasSequence returns a boolean if a field has been set.
func (o *DtoWatchlist) HasSequence() bool {
	if o != nil && !IsNil(o.Sequence) {
		return true
	}

	return false
}

// SetSequence gets a reference to the given int32 and assigns it to the Sequence field.
func (o *DtoWatchlist) SetSequence(v int32) {
	o.Sequence = &v
}

// GetSymbol returns the Symbol field value if set, zero value otherwise.
func (o *DtoWatchlist) GetSymbol() string {
	if o == nil || IsNil(o.Symbol) {
		var ret string
		return ret
	}
	return *o.Symbol
}

// GetSymbolOk returns a tuple with the Symbol field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtoWatchlist) GetSymbolOk() (*string, bool) {
	if o == nil || IsNil(o.Symbol) {
		return nil, false
	}
	return o.Symbol, true
}

// HasSymbol returns a boolean if a field has been set.
func (o *DtoWatchlist) HasSymbol() bool {
	if o != nil && !IsNil(o.Symbol) {
		return true
	}

	return false
}

// SetSymbol gets a reference to the given string and assigns it to the Symbol field.
func (o *DtoWatchlist) SetSymbol(v string) {
	o.Symbol = &v
}

// GetVenue returns the Venue field value if set, zero value otherwise.
func (o *DtoWatchlist) GetVenue() string {
	if o == nil || IsNil(o.Venue) {
		var ret string
		return ret
	}
	return *o.Venue
}

// GetVenueOk returns a tuple with the Venue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtoWatchlist) GetVenueOk() (*string, bool) {
	if o == nil || IsNil(o.Venue) {
		return nil, false
	}
	return o.Venue, true
}

// HasVenue returns a boolean if a field has been set.
func (o *DtoWatchlist) HasVenue() bool {
	if o != nil && !IsNil(o.Venue) {
		return true
	}

	return false
}

// SetVenue gets a reference to the given string and assigns it to the Venue field.
func (o *DtoWatchlist) SetVenue(v string) {
	o.Venue = &v
}

func (o DtoWatchlist) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DtoWatchlist) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Sequence) {
		toSerialize["sequence"] = o.Sequence
	}
	if !IsNil(o.Symbol) {
		toSerialize["symbol"] = o.Symbol
	}
	if !IsNil(o.Venue) {
		toSerialize["venue"] = o.Venue
	}
	return toSerialize, nil
}

type NullableDtoWatchlist struct {
	value *DtoWatchlist
	isSet bool
}

func (v NullableDtoWatchlist) Get() *DtoWatchlist {
	return v.value
}

func (v *NullableDtoWatchlist) Set(val *DtoWatchlist) {
	v.value = val
	v.isSet = true
}

func (v NullableDtoWatchlist) IsSet() bool {
	return v.isSet
}

func (v *NullableDtoWatchlist) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDtoWatchlist(val *DtoWatchlist) *NullableDtoWatchlist {
	return &NullableDtoWatchlist{value: val, isSet: true}
}

func (v NullableDtoWatchlist) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDtoWatchlist) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
