/*
Pi User Service V2

Contain Generic Information.

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the DtoTradingAccountsMarketingInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DtoTradingAccountsMarketingInfo{}

// DtoTradingAccountsMarketingInfo struct for DtoTradingAccountsMarketingInfo
type DtoTradingAccountsMarketingInfo struct {
	AccountType      *string `json:"accountType,omitempty"`
	AccountTypeCode  *string `json:"accountTypeCode,omitempty"`
	EndDate          *string `json:"endDate,omitempty"`
	ExchangeMarketId *string `json:"exchangeMarketId,omitempty"`
	Id               *string `json:"id,omitempty"`
	MarketingId      *string `json:"marketingId,omitempty"`
	TradingAccountNo *string `json:"tradingAccountNo,omitempty"`
}

// NewDtoTradingAccountsMarketingInfo instantiates a new DtoTradingAccountsMarketingInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDtoTradingAccountsMarketingInfo() *DtoTradingAccountsMarketingInfo {
	this := DtoTradingAccountsMarketingInfo{}
	return &this
}

// NewDtoTradingAccountsMarketingInfoWithDefaults instantiates a new DtoTradingAccountsMarketingInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDtoTradingAccountsMarketingInfoWithDefaults() *DtoTradingAccountsMarketingInfo {
	this := DtoTradingAccountsMarketingInfo{}
	return &this
}

// GetAccountType returns the AccountType field value if set, zero value otherwise.
func (o *DtoTradingAccountsMarketingInfo) GetAccountType() string {
	if o == nil || IsNil(o.AccountType) {
		var ret string
		return ret
	}
	return *o.AccountType
}

// GetAccountTypeOk returns a tuple with the AccountType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtoTradingAccountsMarketingInfo) GetAccountTypeOk() (*string, bool) {
	if o == nil || IsNil(o.AccountType) {
		return nil, false
	}
	return o.AccountType, true
}

// HasAccountType returns a boolean if a field has been set.
func (o *DtoTradingAccountsMarketingInfo) HasAccountType() bool {
	if o != nil && !IsNil(o.AccountType) {
		return true
	}

	return false
}

// SetAccountType gets a reference to the given string and assigns it to the AccountType field.
func (o *DtoTradingAccountsMarketingInfo) SetAccountType(v string) {
	o.AccountType = &v
}

// GetAccountTypeCode returns the AccountTypeCode field value if set, zero value otherwise.
func (o *DtoTradingAccountsMarketingInfo) GetAccountTypeCode() string {
	if o == nil || IsNil(o.AccountTypeCode) {
		var ret string
		return ret
	}
	return *o.AccountTypeCode
}

// GetAccountTypeCodeOk returns a tuple with the AccountTypeCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtoTradingAccountsMarketingInfo) GetAccountTypeCodeOk() (*string, bool) {
	if o == nil || IsNil(o.AccountTypeCode) {
		return nil, false
	}
	return o.AccountTypeCode, true
}

// HasAccountTypeCode returns a boolean if a field has been set.
func (o *DtoTradingAccountsMarketingInfo) HasAccountTypeCode() bool {
	if o != nil && !IsNil(o.AccountTypeCode) {
		return true
	}

	return false
}

// SetAccountTypeCode gets a reference to the given string and assigns it to the AccountTypeCode field.
func (o *DtoTradingAccountsMarketingInfo) SetAccountTypeCode(v string) {
	o.AccountTypeCode = &v
}

// GetEndDate returns the EndDate field value if set, zero value otherwise.
func (o *DtoTradingAccountsMarketingInfo) GetEndDate() string {
	if o == nil || IsNil(o.EndDate) {
		var ret string
		return ret
	}
	return *o.EndDate
}

// GetEndDateOk returns a tuple with the EndDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtoTradingAccountsMarketingInfo) GetEndDateOk() (*string, bool) {
	if o == nil || IsNil(o.EndDate) {
		return nil, false
	}
	return o.EndDate, true
}

// HasEndDate returns a boolean if a field has been set.
func (o *DtoTradingAccountsMarketingInfo) HasEndDate() bool {
	if o != nil && !IsNil(o.EndDate) {
		return true
	}

	return false
}

// SetEndDate gets a reference to the given string and assigns it to the EndDate field.
func (o *DtoTradingAccountsMarketingInfo) SetEndDate(v string) {
	o.EndDate = &v
}

// GetExchangeMarketId returns the ExchangeMarketId field value if set, zero value otherwise.
func (o *DtoTradingAccountsMarketingInfo) GetExchangeMarketId() string {
	if o == nil || IsNil(o.ExchangeMarketId) {
		var ret string
		return ret
	}
	return *o.ExchangeMarketId
}

// GetExchangeMarketIdOk returns a tuple with the ExchangeMarketId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtoTradingAccountsMarketingInfo) GetExchangeMarketIdOk() (*string, bool) {
	if o == nil || IsNil(o.ExchangeMarketId) {
		return nil, false
	}
	return o.ExchangeMarketId, true
}

// HasExchangeMarketId returns a boolean if a field has been set.
func (o *DtoTradingAccountsMarketingInfo) HasExchangeMarketId() bool {
	if o != nil && !IsNil(o.ExchangeMarketId) {
		return true
	}

	return false
}

// SetExchangeMarketId gets a reference to the given string and assigns it to the ExchangeMarketId field.
func (o *DtoTradingAccountsMarketingInfo) SetExchangeMarketId(v string) {
	o.ExchangeMarketId = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *DtoTradingAccountsMarketingInfo) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtoTradingAccountsMarketingInfo) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *DtoTradingAccountsMarketingInfo) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *DtoTradingAccountsMarketingInfo) SetId(v string) {
	o.Id = &v
}

// GetMarketingId returns the MarketingId field value if set, zero value otherwise.
func (o *DtoTradingAccountsMarketingInfo) GetMarketingId() string {
	if o == nil || IsNil(o.MarketingId) {
		var ret string
		return ret
	}
	return *o.MarketingId
}

// GetMarketingIdOk returns a tuple with the MarketingId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtoTradingAccountsMarketingInfo) GetMarketingIdOk() (*string, bool) {
	if o == nil || IsNil(o.MarketingId) {
		return nil, false
	}
	return o.MarketingId, true
}

// HasMarketingId returns a boolean if a field has been set.
func (o *DtoTradingAccountsMarketingInfo) HasMarketingId() bool {
	if o != nil && !IsNil(o.MarketingId) {
		return true
	}

	return false
}

// SetMarketingId gets a reference to the given string and assigns it to the MarketingId field.
func (o *DtoTradingAccountsMarketingInfo) SetMarketingId(v string) {
	o.MarketingId = &v
}

// GetTradingAccountNo returns the TradingAccountNo field value if set, zero value otherwise.
func (o *DtoTradingAccountsMarketingInfo) GetTradingAccountNo() string {
	if o == nil || IsNil(o.TradingAccountNo) {
		var ret string
		return ret
	}
	return *o.TradingAccountNo
}

// GetTradingAccountNoOk returns a tuple with the TradingAccountNo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtoTradingAccountsMarketingInfo) GetTradingAccountNoOk() (*string, bool) {
	if o == nil || IsNil(o.TradingAccountNo) {
		return nil, false
	}
	return o.TradingAccountNo, true
}

// HasTradingAccountNo returns a boolean if a field has been set.
func (o *DtoTradingAccountsMarketingInfo) HasTradingAccountNo() bool {
	if o != nil && !IsNil(o.TradingAccountNo) {
		return true
	}

	return false
}

// SetTradingAccountNo gets a reference to the given string and assigns it to the TradingAccountNo field.
func (o *DtoTradingAccountsMarketingInfo) SetTradingAccountNo(v string) {
	o.TradingAccountNo = &v
}

func (o DtoTradingAccountsMarketingInfo) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DtoTradingAccountsMarketingInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AccountType) {
		toSerialize["accountType"] = o.AccountType
	}
	if !IsNil(o.AccountTypeCode) {
		toSerialize["accountTypeCode"] = o.AccountTypeCode
	}
	if !IsNil(o.EndDate) {
		toSerialize["endDate"] = o.EndDate
	}
	if !IsNil(o.ExchangeMarketId) {
		toSerialize["exchangeMarketId"] = o.ExchangeMarketId
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.MarketingId) {
		toSerialize["marketingId"] = o.MarketingId
	}
	if !IsNil(o.TradingAccountNo) {
		toSerialize["tradingAccountNo"] = o.TradingAccountNo
	}
	return toSerialize, nil
}

type NullableDtoTradingAccountsMarketingInfo struct {
	value *DtoTradingAccountsMarketingInfo
	isSet bool
}

func (v NullableDtoTradingAccountsMarketingInfo) Get() *DtoTradingAccountsMarketingInfo {
	return v.value
}

func (v *NullableDtoTradingAccountsMarketingInfo) Set(val *DtoTradingAccountsMarketingInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableDtoTradingAccountsMarketingInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableDtoTradingAccountsMarketingInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDtoTradingAccountsMarketingInfo(val *DtoTradingAccountsMarketingInfo) *NullableDtoTradingAccountsMarketingInfo {
	return &NullableDtoTradingAccountsMarketingInfo{value: val, isSet: true}
}

func (v NullableDtoTradingAccountsMarketingInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDtoTradingAccountsMarketingInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
