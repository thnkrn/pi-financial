/*
Pi User Service V2

Contain Generic Information.

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the DtoDepositWithdrawTradingAccountResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DtoDepositWithdrawTradingAccountResponse{}

// DtoDepositWithdrawTradingAccountResponse struct for DtoDepositWithdrawTradingAccountResponse
type DtoDepositWithdrawTradingAccountResponse struct {
	CustomerCode     *string `json:"customerCode,omitempty"`
	ProductName      *string `json:"productName,omitempty"`
	TradingAccountId *string `json:"tradingAccountId,omitempty"`
	TradingAccountNo *string `json:"tradingAccountNo,omitempty"`
}

// NewDtoDepositWithdrawTradingAccountResponse instantiates a new DtoDepositWithdrawTradingAccountResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDtoDepositWithdrawTradingAccountResponse() *DtoDepositWithdrawTradingAccountResponse {
	this := DtoDepositWithdrawTradingAccountResponse{}
	return &this
}

// NewDtoDepositWithdrawTradingAccountResponseWithDefaults instantiates a new DtoDepositWithdrawTradingAccountResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDtoDepositWithdrawTradingAccountResponseWithDefaults() *DtoDepositWithdrawTradingAccountResponse {
	this := DtoDepositWithdrawTradingAccountResponse{}
	return &this
}

// GetCustomerCode returns the CustomerCode field value if set, zero value otherwise.
func (o *DtoDepositWithdrawTradingAccountResponse) GetCustomerCode() string {
	if o == nil || IsNil(o.CustomerCode) {
		var ret string
		return ret
	}
	return *o.CustomerCode
}

// GetCustomerCodeOk returns a tuple with the CustomerCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtoDepositWithdrawTradingAccountResponse) GetCustomerCodeOk() (*string, bool) {
	if o == nil || IsNil(o.CustomerCode) {
		return nil, false
	}
	return o.CustomerCode, true
}

// HasCustomerCode returns a boolean if a field has been set.
func (o *DtoDepositWithdrawTradingAccountResponse) HasCustomerCode() bool {
	if o != nil && !IsNil(o.CustomerCode) {
		return true
	}

	return false
}

// SetCustomerCode gets a reference to the given string and assigns it to the CustomerCode field.
func (o *DtoDepositWithdrawTradingAccountResponse) SetCustomerCode(v string) {
	o.CustomerCode = &v
}

// GetProductName returns the ProductName field value if set, zero value otherwise.
func (o *DtoDepositWithdrawTradingAccountResponse) GetProductName() string {
	if o == nil || IsNil(o.ProductName) {
		var ret string
		return ret
	}
	return *o.ProductName
}

// GetProductNameOk returns a tuple with the ProductName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtoDepositWithdrawTradingAccountResponse) GetProductNameOk() (*string, bool) {
	if o == nil || IsNil(o.ProductName) {
		return nil, false
	}
	return o.ProductName, true
}

// HasProductName returns a boolean if a field has been set.
func (o *DtoDepositWithdrawTradingAccountResponse) HasProductName() bool {
	if o != nil && !IsNil(o.ProductName) {
		return true
	}

	return false
}

// SetProductName gets a reference to the given string and assigns it to the ProductName field.
func (o *DtoDepositWithdrawTradingAccountResponse) SetProductName(v string) {
	o.ProductName = &v
}

// GetTradingAccountId returns the TradingAccountId field value if set, zero value otherwise.
func (o *DtoDepositWithdrawTradingAccountResponse) GetTradingAccountId() string {
	if o == nil || IsNil(o.TradingAccountId) {
		var ret string
		return ret
	}
	return *o.TradingAccountId
}

// GetTradingAccountIdOk returns a tuple with the TradingAccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtoDepositWithdrawTradingAccountResponse) GetTradingAccountIdOk() (*string, bool) {
	if o == nil || IsNil(o.TradingAccountId) {
		return nil, false
	}
	return o.TradingAccountId, true
}

// HasTradingAccountId returns a boolean if a field has been set.
func (o *DtoDepositWithdrawTradingAccountResponse) HasTradingAccountId() bool {
	if o != nil && !IsNil(o.TradingAccountId) {
		return true
	}

	return false
}

// SetTradingAccountId gets a reference to the given string and assigns it to the TradingAccountId field.
func (o *DtoDepositWithdrawTradingAccountResponse) SetTradingAccountId(v string) {
	o.TradingAccountId = &v
}

// GetTradingAccountNo returns the TradingAccountNo field value if set, zero value otherwise.
func (o *DtoDepositWithdrawTradingAccountResponse) GetTradingAccountNo() string {
	if o == nil || IsNil(o.TradingAccountNo) {
		var ret string
		return ret
	}
	return *o.TradingAccountNo
}

// GetTradingAccountNoOk returns a tuple with the TradingAccountNo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtoDepositWithdrawTradingAccountResponse) GetTradingAccountNoOk() (*string, bool) {
	if o == nil || IsNil(o.TradingAccountNo) {
		return nil, false
	}
	return o.TradingAccountNo, true
}

// HasTradingAccountNo returns a boolean if a field has been set.
func (o *DtoDepositWithdrawTradingAccountResponse) HasTradingAccountNo() bool {
	if o != nil && !IsNil(o.TradingAccountNo) {
		return true
	}

	return false
}

// SetTradingAccountNo gets a reference to the given string and assigns it to the TradingAccountNo field.
func (o *DtoDepositWithdrawTradingAccountResponse) SetTradingAccountNo(v string) {
	o.TradingAccountNo = &v
}

func (o DtoDepositWithdrawTradingAccountResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DtoDepositWithdrawTradingAccountResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CustomerCode) {
		toSerialize["customerCode"] = o.CustomerCode
	}
	if !IsNil(o.ProductName) {
		toSerialize["productName"] = o.ProductName
	}
	if !IsNil(o.TradingAccountId) {
		toSerialize["tradingAccountId"] = o.TradingAccountId
	}
	if !IsNil(o.TradingAccountNo) {
		toSerialize["tradingAccountNo"] = o.TradingAccountNo
	}
	return toSerialize, nil
}

type NullableDtoDepositWithdrawTradingAccountResponse struct {
	value *DtoDepositWithdrawTradingAccountResponse
	isSet bool
}

func (v NullableDtoDepositWithdrawTradingAccountResponse) Get() *DtoDepositWithdrawTradingAccountResponse {
	return v.value
}

func (v *NullableDtoDepositWithdrawTradingAccountResponse) Set(val *DtoDepositWithdrawTradingAccountResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableDtoDepositWithdrawTradingAccountResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableDtoDepositWithdrawTradingAccountResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDtoDepositWithdrawTradingAccountResponse(val *DtoDepositWithdrawTradingAccountResponse) *NullableDtoDepositWithdrawTradingAccountResponse {
	return &NullableDtoDepositWithdrawTradingAccountResponse{value: val, isSet: true}
}

func (v NullableDtoDepositWithdrawTradingAccountResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDtoDepositWithdrawTradingAccountResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
