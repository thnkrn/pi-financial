/*
Pi User Service V2

Contain Generic Information.

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the DtoCreateUserInfoRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DtoCreateUserInfoRequest{}

// DtoCreateUserInfoRequest struct for DtoCreateUserInfoRequest
type DtoCreateUserInfoRequest struct {
	CitizenId   string `json:"citizenId"`
	DateOfBirth string `json:"dateOfBirth"`
	Email       string `json:"email"`
	FirstnameEn string `json:"firstnameEn"`
	FirstnameTh string `json:"firstnameTh"`
	LastnameEn  string `json:"lastnameEn"`
	LastnameTh  string `json:"lastnameTh"`
	PhoneNumber string `json:"phoneNumber"`
	WealthType  string `json:"wealthType"`
}

type _DtoCreateUserInfoRequest DtoCreateUserInfoRequest

// NewDtoCreateUserInfoRequest instantiates a new DtoCreateUserInfoRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDtoCreateUserInfoRequest(citizenId string, dateOfBirth string, email string, firstnameEn string, firstnameTh string, lastnameEn string, lastnameTh string, phoneNumber string, wealthType string) *DtoCreateUserInfoRequest {
	this := DtoCreateUserInfoRequest{}
	this.CitizenId = citizenId
	this.DateOfBirth = dateOfBirth
	this.Email = email
	this.FirstnameEn = firstnameEn
	this.FirstnameTh = firstnameTh
	this.LastnameEn = lastnameEn
	this.LastnameTh = lastnameTh
	this.PhoneNumber = phoneNumber
	this.WealthType = wealthType
	return &this
}

// NewDtoCreateUserInfoRequestWithDefaults instantiates a new DtoCreateUserInfoRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDtoCreateUserInfoRequestWithDefaults() *DtoCreateUserInfoRequest {
	this := DtoCreateUserInfoRequest{}
	return &this
}

// GetCitizenId returns the CitizenId field value
func (o *DtoCreateUserInfoRequest) GetCitizenId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CitizenId
}

// GetCitizenIdOk returns a tuple with the CitizenId field value
// and a boolean to check if the value has been set.
func (o *DtoCreateUserInfoRequest) GetCitizenIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CitizenId, true
}

// SetCitizenId sets field value
func (o *DtoCreateUserInfoRequest) SetCitizenId(v string) {
	o.CitizenId = v
}

// GetDateOfBirth returns the DateOfBirth field value
func (o *DtoCreateUserInfoRequest) GetDateOfBirth() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DateOfBirth
}

// GetDateOfBirthOk returns a tuple with the DateOfBirth field value
// and a boolean to check if the value has been set.
func (o *DtoCreateUserInfoRequest) GetDateOfBirthOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DateOfBirth, true
}

// SetDateOfBirth sets field value
func (o *DtoCreateUserInfoRequest) SetDateOfBirth(v string) {
	o.DateOfBirth = v
}

// GetEmail returns the Email field value
func (o *DtoCreateUserInfoRequest) GetEmail() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Email
}

// GetEmailOk returns a tuple with the Email field value
// and a boolean to check if the value has been set.
func (o *DtoCreateUserInfoRequest) GetEmailOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Email, true
}

// SetEmail sets field value
func (o *DtoCreateUserInfoRequest) SetEmail(v string) {
	o.Email = v
}

// GetFirstnameEn returns the FirstnameEn field value
func (o *DtoCreateUserInfoRequest) GetFirstnameEn() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.FirstnameEn
}

// GetFirstnameEnOk returns a tuple with the FirstnameEn field value
// and a boolean to check if the value has been set.
func (o *DtoCreateUserInfoRequest) GetFirstnameEnOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FirstnameEn, true
}

// SetFirstnameEn sets field value
func (o *DtoCreateUserInfoRequest) SetFirstnameEn(v string) {
	o.FirstnameEn = v
}

// GetFirstnameTh returns the FirstnameTh field value
func (o *DtoCreateUserInfoRequest) GetFirstnameTh() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.FirstnameTh
}

// GetFirstnameThOk returns a tuple with the FirstnameTh field value
// and a boolean to check if the value has been set.
func (o *DtoCreateUserInfoRequest) GetFirstnameThOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FirstnameTh, true
}

// SetFirstnameTh sets field value
func (o *DtoCreateUserInfoRequest) SetFirstnameTh(v string) {
	o.FirstnameTh = v
}

// GetLastnameEn returns the LastnameEn field value
func (o *DtoCreateUserInfoRequest) GetLastnameEn() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.LastnameEn
}

// GetLastnameEnOk returns a tuple with the LastnameEn field value
// and a boolean to check if the value has been set.
func (o *DtoCreateUserInfoRequest) GetLastnameEnOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LastnameEn, true
}

// SetLastnameEn sets field value
func (o *DtoCreateUserInfoRequest) SetLastnameEn(v string) {
	o.LastnameEn = v
}

// GetLastnameTh returns the LastnameTh field value
func (o *DtoCreateUserInfoRequest) GetLastnameTh() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.LastnameTh
}

// GetLastnameThOk returns a tuple with the LastnameTh field value
// and a boolean to check if the value has been set.
func (o *DtoCreateUserInfoRequest) GetLastnameThOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LastnameTh, true
}

// SetLastnameTh sets field value
func (o *DtoCreateUserInfoRequest) SetLastnameTh(v string) {
	o.LastnameTh = v
}

// GetPhoneNumber returns the PhoneNumber field value
func (o *DtoCreateUserInfoRequest) GetPhoneNumber() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PhoneNumber
}

// GetPhoneNumberOk returns a tuple with the PhoneNumber field value
// and a boolean to check if the value has been set.
func (o *DtoCreateUserInfoRequest) GetPhoneNumberOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PhoneNumber, true
}

// SetPhoneNumber sets field value
func (o *DtoCreateUserInfoRequest) SetPhoneNumber(v string) {
	o.PhoneNumber = v
}

// GetWealthType returns the WealthType field value
func (o *DtoCreateUserInfoRequest) GetWealthType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.WealthType
}

// GetWealthTypeOk returns a tuple with the WealthType field value
// and a boolean to check if the value has been set.
func (o *DtoCreateUserInfoRequest) GetWealthTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.WealthType, true
}

// SetWealthType sets field value
func (o *DtoCreateUserInfoRequest) SetWealthType(v string) {
	o.WealthType = v
}

func (o DtoCreateUserInfoRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DtoCreateUserInfoRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["citizenId"] = o.CitizenId
	toSerialize["dateOfBirth"] = o.DateOfBirth
	toSerialize["email"] = o.Email
	toSerialize["firstnameEn"] = o.FirstnameEn
	toSerialize["firstnameTh"] = o.FirstnameTh
	toSerialize["lastnameEn"] = o.LastnameEn
	toSerialize["lastnameTh"] = o.LastnameTh
	toSerialize["phoneNumber"] = o.PhoneNumber
	toSerialize["wealthType"] = o.WealthType
	return toSerialize, nil
}

func (o *DtoCreateUserInfoRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"citizenId",
		"dateOfBirth",
		"email",
		"firstnameEn",
		"firstnameTh",
		"lastnameEn",
		"lastnameTh",
		"phoneNumber",
		"wealthType",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varDtoCreateUserInfoRequest := _DtoCreateUserInfoRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varDtoCreateUserInfoRequest)

	if err != nil {
		return err
	}

	*o = DtoCreateUserInfoRequest(varDtoCreateUserInfoRequest)

	return err
}

type NullableDtoCreateUserInfoRequest struct {
	value *DtoCreateUserInfoRequest
	isSet bool
}

func (v NullableDtoCreateUserInfoRequest) Get() *DtoCreateUserInfoRequest {
	return v.value
}

func (v *NullableDtoCreateUserInfoRequest) Set(val *DtoCreateUserInfoRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableDtoCreateUserInfoRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableDtoCreateUserInfoRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDtoCreateUserInfoRequest(val *DtoCreateUserInfoRequest) *NullableDtoCreateUserInfoRequest {
	return &NullableDtoCreateUserInfoRequest{value: val, isSet: true}
}

func (v NullableDtoCreateUserInfoRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDtoCreateUserInfoRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
