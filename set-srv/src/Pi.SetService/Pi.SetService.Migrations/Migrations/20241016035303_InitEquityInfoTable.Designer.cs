// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Pi.SetService.Infrastructure;

#nullable disable

namespace Pi.SetService.Migrations.Migrations
{
    [DbContext(typeof(SetDbContext))]
    [Migration("20241016035303_InitEquityInfoTable")]
    partial class InitEquityInfoTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("Pi.SetService.Domain.AggregatesModel.InstrumentAggregate.EquityInfo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(6)
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP(6)");

                    b.Property<decimal>("InitialMarginRate")
                        .HasColumnType("decimal(65,30)")
                        .HasColumnName("initial_margin_rate");

                    b.Property<bool>("IsTurnoverList")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("is_turnover_list");

                    b.Property<string>("MarginCode")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("margin_code");

                    b.Property<DateTime>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime(6)")
                        .HasColumnName("row_version");

                    b.Property<string>("Symbol")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("symbol");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(6)
                        .HasColumnType("datetime(6)")
                        .HasColumnName("updated_at")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP(6)");

                    b.HasKey("Id")
                        .HasName("pk_equity_infos");

                    b.ToTable("equity_infos", (string)null);
                });

            modelBuilder.Entity("Pi.SetService.Domain.AggregatesModel.TradingAggregate.EquityOrderState", b =>
                {
                    b.Property<Guid>("CorrelationId")
                        .HasColumnType("char(36)")
                        .HasColumnName("correlation_id");

                    b.Property<string>("BrokerOrderId")
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)")
                        .HasColumnName("broker_order_id");

                    b.Property<string>("Condition")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)")
                        .HasColumnName("condition");

                    b.Property<string>("ConditionPrice")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)")
                        .HasColumnName("condition_price");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(6)
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP(6)");

                    b.Property<DateOnly>("CreatedAtDate")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("date")
                        .HasColumnName("created_at_date")
                        .HasComputedColumnSql("DATE(created_at)");

                    b.Property<string>("CurrentState")
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)")
                        .HasColumnName("current_state");

                    b.Property<string>("CustomerCode")
                        .IsRequired()
                        .HasMaxLength(36)
                        .HasColumnType("varchar(36)")
                        .HasColumnName("customer_code");

                    b.Property<string>("EnterId")
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("enter_id");

                    b.Property<string>("FailedReason")
                        .HasColumnType("longtext")
                        .HasColumnName("failed_reason");

                    b.Property<string>("IpAddress")
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)")
                        .HasColumnName("ip_address");

                    b.Property<bool?>("Lending")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("lending");

                    b.Property<int?>("MatchedVolume")
                        .HasColumnType("int")
                        .HasColumnName("matched_volume");

                    b.Property<string>("OrderAction")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)")
                        .HasColumnName("order_action");

                    b.Property<string>("OrderNo")
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)")
                        .HasColumnName("order_no");

                    b.Property<string>("OrderSide")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)")
                        .HasColumnName("order_side");

                    b.Property<string>("OrderStatus")
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)")
                        .HasColumnName("order_status");

                    b.Property<string>("OrderType")
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)")
                        .HasColumnName("order_type");

                    b.Property<decimal?>("Price")
                        .HasMaxLength(64)
                        .HasColumnType("decimal(65,30)")
                        .HasColumnName("price");

                    b.Property<int>("PubVolume")
                        .HasColumnType("int")
                        .HasColumnName("pub_volume");

                    b.Property<Guid?>("RequestId")
                        .HasColumnType("char(36)")
                        .HasColumnName("request_id");

                    b.Property<string>("ResponseAddress")
                        .HasColumnType("longtext")
                        .HasColumnName("response_address");

                    b.Property<string>("SecSymbol")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)")
                        .HasColumnName("sec_symbol");

                    b.Property<string>("ServiceType")
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)")
                        .HasColumnName("service_type");

                    b.Property<string>("StockType")
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)")
                        .HasColumnName("stock_type");

                    b.Property<bool?>("TodaySell")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("today_sell");

                    b.Property<Guid>("TradingAccountId")
                        .HasColumnType("char(36)")
                        .HasColumnName("trading_account_id");

                    b.Property<string>("TradingAccountNo")
                        .IsRequired()
                        .HasMaxLength(36)
                        .HasColumnType("varchar(36)")
                        .HasColumnName("trading_account_no");

                    b.Property<string>("TradingAccountType")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)")
                        .HasColumnName("trading_account_type");

                    b.Property<string>("Ttf")
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)")
                        .HasColumnName("ttf");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(6)
                        .HasColumnType("datetime(6)")
                        .HasColumnName("updated_at")
                        .HasDefaultValueSql("CURRENT_TIESTAMP(6)");

                    b.Property<int>("Volume")
                        .HasColumnType("int")
                        .HasColumnName("volume");

                    b.HasKey("CorrelationId")
                        .HasName("pk_equity_order_state");

                    b.HasIndex("OrderNo", "CreatedAtDate")
                        .IsUnique()
                        .HasDatabaseName("unique_order_date");

                    b.ToTable("equity_order_state", (string)null);
                });
#pragma warning restore 612, 618
        }
    }
}
