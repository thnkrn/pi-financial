/*
Pi.SetService.API, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package go_client

import (
	"encoding/json"
	"fmt"
)

// PiSetServiceDomainAggregatesModelFinancialAssetAggregateCondition the model 'PiSetServiceDomainAggregatesModelFinancialAssetAggregateCondition'
type PiSetServiceDomainAggregatesModelFinancialAssetAggregateCondition string

// List of PiSetServiceDomainAggregatesModelFinancialAssetAggregateCondition
const (
	PISETSERVICEDOMAINAGGREGATESMODELFINANCIALASSETAGGREGATECONDITION_NONE PiSetServiceDomainAggregatesModelFinancialAssetAggregateCondition = "none"
	PISETSERVICEDOMAINAGGREGATESMODELFINANCIALASSETAGGREGATECONDITION_IOC  PiSetServiceDomainAggregatesModelFinancialAssetAggregateCondition = "ioc"
	PISETSERVICEDOMAINAGGREGATESMODELFINANCIALASSETAGGREGATECONDITION_FOK  PiSetServiceDomainAggregatesModelFinancialAssetAggregateCondition = "fok"
	PISETSERVICEDOMAINAGGREGATESMODELFINANCIALASSETAGGREGATECONDITION_ODD  PiSetServiceDomainAggregatesModelFinancialAssetAggregateCondition = "odd"
	PISETSERVICEDOMAINAGGREGATESMODELFINANCIALASSETAGGREGATECONDITION_GTC  PiSetServiceDomainAggregatesModelFinancialAssetAggregateCondition = "gtc"
	PISETSERVICEDOMAINAGGREGATESMODELFINANCIALASSETAGGREGATECONDITION_GTD  PiSetServiceDomainAggregatesModelFinancialAssetAggregateCondition = "gtd"
)

// All allowed values of PiSetServiceDomainAggregatesModelFinancialAssetAggregateCondition enum
var AllowedPiSetServiceDomainAggregatesModelFinancialAssetAggregateConditionEnumValues = []PiSetServiceDomainAggregatesModelFinancialAssetAggregateCondition{
	"none",
	"ioc",
	"fok",
	"odd",
	"gtc",
	"gtd",
}

func (v *PiSetServiceDomainAggregatesModelFinancialAssetAggregateCondition) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := PiSetServiceDomainAggregatesModelFinancialAssetAggregateCondition(value)
	for _, existing := range AllowedPiSetServiceDomainAggregatesModelFinancialAssetAggregateConditionEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid PiSetServiceDomainAggregatesModelFinancialAssetAggregateCondition", value)
}

// NewPiSetServiceDomainAggregatesModelFinancialAssetAggregateConditionFromValue returns a pointer to a valid PiSetServiceDomainAggregatesModelFinancialAssetAggregateCondition
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewPiSetServiceDomainAggregatesModelFinancialAssetAggregateConditionFromValue(v string) (*PiSetServiceDomainAggregatesModelFinancialAssetAggregateCondition, error) {
	ev := PiSetServiceDomainAggregatesModelFinancialAssetAggregateCondition(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for PiSetServiceDomainAggregatesModelFinancialAssetAggregateCondition: valid values are %v", v, AllowedPiSetServiceDomainAggregatesModelFinancialAssetAggregateConditionEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v PiSetServiceDomainAggregatesModelFinancialAssetAggregateCondition) IsValid() bool {
	for _, existing := range AllowedPiSetServiceDomainAggregatesModelFinancialAssetAggregateConditionEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to PiSetServiceDomainAggregatesModelFinancialAssetAggregateCondition value
func (v PiSetServiceDomainAggregatesModelFinancialAssetAggregateCondition) Ptr() *PiSetServiceDomainAggregatesModelFinancialAssetAggregateCondition {
	return &v
}

type NullablePiSetServiceDomainAggregatesModelFinancialAssetAggregateCondition struct {
	value *PiSetServiceDomainAggregatesModelFinancialAssetAggregateCondition
	isSet bool
}

func (v NullablePiSetServiceDomainAggregatesModelFinancialAssetAggregateCondition) Get() *PiSetServiceDomainAggregatesModelFinancialAssetAggregateCondition {
	return v.value
}

func (v *NullablePiSetServiceDomainAggregatesModelFinancialAssetAggregateCondition) Set(val *PiSetServiceDomainAggregatesModelFinancialAssetAggregateCondition) {
	v.value = val
	v.isSet = true
}

func (v NullablePiSetServiceDomainAggregatesModelFinancialAssetAggregateCondition) IsSet() bool {
	return v.isSet
}

func (v *NullablePiSetServiceDomainAggregatesModelFinancialAssetAggregateCondition) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePiSetServiceDomainAggregatesModelFinancialAssetAggregateCondition(val *PiSetServiceDomainAggregatesModelFinancialAssetAggregateCondition) *NullablePiSetServiceDomainAggregatesModelFinancialAssetAggregateCondition {
	return &NullablePiSetServiceDomainAggregatesModelFinancialAssetAggregateCondition{value: val, isSet: true}
}

func (v NullablePiSetServiceDomainAggregatesModelFinancialAssetAggregateCondition) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePiSetServiceDomainAggregatesModelFinancialAssetAggregateCondition) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
