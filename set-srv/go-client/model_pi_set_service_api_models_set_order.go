/*
Pi.SetService.API, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package go_client

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the PiSetServiceAPIModelsSetOrder type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PiSetServiceAPIModelsSetOrder{}

// PiSetServiceAPIModelsSetOrder struct for PiSetServiceAPIModelsSetOrder
type PiSetServiceAPIModelsSetOrder struct {
	OrderId NullableString `json:"orderId"`
	OrderNo NullableString `json:"orderNo,omitempty"`
}

type _PiSetServiceAPIModelsSetOrder PiSetServiceAPIModelsSetOrder

// NewPiSetServiceAPIModelsSetOrder instantiates a new PiSetServiceAPIModelsSetOrder object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPiSetServiceAPIModelsSetOrder(orderId NullableString) *PiSetServiceAPIModelsSetOrder {
	this := PiSetServiceAPIModelsSetOrder{}
	this.OrderId = orderId
	return &this
}

// NewPiSetServiceAPIModelsSetOrderWithDefaults instantiates a new PiSetServiceAPIModelsSetOrder object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPiSetServiceAPIModelsSetOrderWithDefaults() *PiSetServiceAPIModelsSetOrder {
	this := PiSetServiceAPIModelsSetOrder{}
	return &this
}

// GetOrderId returns the OrderId field value
// If the value is explicit nil, the zero value for string will be returned
func (o *PiSetServiceAPIModelsSetOrder) GetOrderId() string {
	if o == nil || o.OrderId.Get() == nil {
		var ret string
		return ret
	}

	return *o.OrderId.Get()
}

// GetOrderIdOk returns a tuple with the OrderId field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiSetServiceAPIModelsSetOrder) GetOrderIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.OrderId.Get(), o.OrderId.IsSet()
}

// SetOrderId sets field value
func (o *PiSetServiceAPIModelsSetOrder) SetOrderId(v string) {
	o.OrderId.Set(&v)
}

// GetOrderNo returns the OrderNo field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiSetServiceAPIModelsSetOrder) GetOrderNo() string {
	if o == nil || IsNil(o.OrderNo.Get()) {
		var ret string
		return ret
	}
	return *o.OrderNo.Get()
}

// GetOrderNoOk returns a tuple with the OrderNo field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiSetServiceAPIModelsSetOrder) GetOrderNoOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.OrderNo.Get(), o.OrderNo.IsSet()
}

// HasOrderNo returns a boolean if a field has been set.
func (o *PiSetServiceAPIModelsSetOrder) HasOrderNo() bool {
	if o != nil && o.OrderNo.IsSet() {
		return true
	}

	return false
}

// SetOrderNo gets a reference to the given NullableString and assigns it to the OrderNo field.
func (o *PiSetServiceAPIModelsSetOrder) SetOrderNo(v string) {
	o.OrderNo.Set(&v)
}

// SetOrderNoNil sets the value for OrderNo to be an explicit nil
func (o *PiSetServiceAPIModelsSetOrder) SetOrderNoNil() {
	o.OrderNo.Set(nil)
}

// UnsetOrderNo ensures that no value is present for OrderNo, not even an explicit nil
func (o *PiSetServiceAPIModelsSetOrder) UnsetOrderNo() {
	o.OrderNo.Unset()
}

func (o PiSetServiceAPIModelsSetOrder) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PiSetServiceAPIModelsSetOrder) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["orderId"] = o.OrderId.Get()
	if o.OrderNo.IsSet() {
		toSerialize["orderNo"] = o.OrderNo.Get()
	}
	return toSerialize, nil
}

func (o *PiSetServiceAPIModelsSetOrder) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"orderId",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varPiSetServiceAPIModelsSetOrder := _PiSetServiceAPIModelsSetOrder{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varPiSetServiceAPIModelsSetOrder)

	if err != nil {
		return err
	}

	*o = PiSetServiceAPIModelsSetOrder(varPiSetServiceAPIModelsSetOrder)

	return err
}

type NullablePiSetServiceAPIModelsSetOrder struct {
	value *PiSetServiceAPIModelsSetOrder
	isSet bool
}

func (v NullablePiSetServiceAPIModelsSetOrder) Get() *PiSetServiceAPIModelsSetOrder {
	return v.value
}

func (v *NullablePiSetServiceAPIModelsSetOrder) Set(val *PiSetServiceAPIModelsSetOrder) {
	v.value = val
	v.isSet = true
}

func (v NullablePiSetServiceAPIModelsSetOrder) IsSet() bool {
	return v.isSet
}

func (v *NullablePiSetServiceAPIModelsSetOrder) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePiSetServiceAPIModelsSetOrder(val *PiSetServiceAPIModelsSetOrder) *NullablePiSetServiceAPIModelsSetOrder {
	return &NullablePiSetServiceAPIModelsSetOrder{value: val, isSet: true}
}

func (v NullablePiSetServiceAPIModelsSetOrder) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePiSetServiceAPIModelsSetOrder) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
