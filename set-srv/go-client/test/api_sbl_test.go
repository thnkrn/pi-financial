/*
Pi.SetService.API, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null

Testing SblAPIService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package go_client

import (
	"context"
	openapiclient "github.com/pi-financial/set-srv/go-client"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
	"testing"
)

func Test_go_client_SblAPIService(t *testing.T) {

	configuration := openapiclient.NewConfiguration()
	apiClient := openapiclient.NewAPIClient(configuration)

	t.Run("Test SblAPIService InternalSblInstrumentsGet", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		resp, httpRes, err := apiClient.SblAPI.InternalSblInstrumentsGet(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test SblAPIService InternalSblOrdersGet", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		resp, httpRes, err := apiClient.SblAPI.InternalSblOrdersGet(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test SblAPIService InternalSblOrdersOrderIdPatch", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var orderId string

		resp, httpRes, err := apiClient.SblAPI.InternalSblOrdersOrderIdPatch(context.Background(), orderId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}
