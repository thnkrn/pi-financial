name: Authenticate AWS

inputs:
  aws_access_key_id:
    description: AWS access key id
    required: true
  aws_secret_access_key:
    description: AWS Secret access key
    required: true
  aws_region:
    description: AWS Region
    required: true
  role_to_assume:
    description: role of the environment
    required: false
  access_key_id_show:
    description: role of the environment
    required: false
  aws_only:
    default: false
    required: false
    description: to seperate aws/ecr login
outputs:
  ecr-registry:
    description: ECR Registry
    value: ${{ steps.login-ecr.outputs.registry }}

runs:
  using: composite
  steps:
    - name: Configure AWS credentials
      if: ${{ inputs.aws_only== 'false' }}
      uses: aws-actions/configure-aws-credentials@v4.0.2
      with:
        aws-access-key-id: ${{ inputs.aws_access_key_id }}
        aws-secret-access-key: ${{ inputs.aws_secret_access_key }}
        aws-region: ${{ inputs.aws_region }}
        role-to-assume: ${{ inputs.role_to_assume}}
        role-duration-seconds: 1200
        role-session-name: ci-run-${{ github.run_id }}
        mask-aws-account-id: ${{inputs.access_key_id_show}}
    - name: Login to Amazon ECR
      if: ${{ inputs.aws_only== 'false' }}
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2.0.1
    - name: Configure AWS credentials
      if: ${{ inputs.aws_only== 'true' }}
      uses: aws-actions/configure-aws-credentials@v4.0.2
      with:
        aws-access-key-id: ${{ inputs.aws_access_key_id }}
        aws-secret-access-key: ${{ inputs.aws_secret_access_key }}
        aws-region: ${{ inputs.aws_region }}
        role-to-assume: ${{ inputs.role_to_assume}}
        role-duration-seconds: 1200
        role-session-name: ci-run-${{ github.run_id }}
        mask-aws-account-id: ${{inputs.access_key_id_show}}  
