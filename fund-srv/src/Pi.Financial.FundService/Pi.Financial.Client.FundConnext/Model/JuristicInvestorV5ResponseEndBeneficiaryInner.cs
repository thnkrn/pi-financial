/*
 * FundConnext
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel.DataAnnotations;
using System.IO;
using System.Linq;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using FileParameter = Pi.Financial.Client.FundConnext.Client.FileParameter;
using OpenAPIDateConverter = Pi.Financial.Client.FundConnext.Client.OpenAPIDateConverter;

namespace Pi.Financial.Client.FundConnext.Model
{
    /// <summary>
    /// JuristicInvestorV5ResponseEndBeneficiaryInner
    /// </summary>
    [DataContract(Name = "JuristicInvestorV5Response_endBeneficiary_inner")]
    public partial class JuristicInvestorV5ResponseEndBeneficiaryInner : IValidatableObject
    {
        /// <summary>
        /// ประเภทบัตรที่เปิดบัญชี PASSPORT CITIZEN_CARD&#x3D;บัตรประชาชน ALIEN_CARD&#x3D;บัตรต่างด้าว 
        /// </summary>
        /// <value>ประเภทบัตรที่เปิดบัญชี PASSPORT CITIZEN_CARD&#x3D;บัตรประชาชน ALIEN_CARD&#x3D;บัตรต่างด้าว </value>
        [JsonConverter(typeof(StringEnumConverter))]
        public enum IdentificationCardTypeEnum
        {
            /// <summary>
            /// Enum PASSPORT for value: PASSPORT
            /// </summary>
            [EnumMember(Value = "PASSPORT")]
            PASSPORT = 1,

            /// <summary>
            /// Enum CITIZENCARD for value: CITIZEN_CARD
            /// </summary>
            [EnumMember(Value = "CITIZEN_CARD")]
            CITIZENCARD = 2,

            /// <summary>
            /// Enum ALIENCARD for value: ALIEN_CARD
            /// </summary>
            [EnumMember(Value = "ALIEN_CARD")]
            ALIENCARD = 3
        }


        /// <summary>
        /// ประเภทบัตรที่เปิดบัญชี PASSPORT CITIZEN_CARD&#x3D;บัตรประชาชน ALIEN_CARD&#x3D;บัตรต่างด้าว 
        /// </summary>
        /// <value>ประเภทบัตรที่เปิดบัญชี PASSPORT CITIZEN_CARD&#x3D;บัตรประชาชน ALIEN_CARD&#x3D;บัตรต่างด้าว </value>
        [DataMember(Name = "identificationCardType", IsRequired = true, EmitDefaultValue = true)]
        public IdentificationCardTypeEnum IdentificationCardType { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="JuristicInvestorV5ResponseEndBeneficiaryInner" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected JuristicInvestorV5ResponseEndBeneficiaryInner() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="JuristicInvestorV5ResponseEndBeneficiaryInner" /> class.
        /// </summary>
        /// <param name="identificationCardType">ประเภทบัตรที่เปิดบัญชี PASSPORT CITIZEN_CARD&#x3D;บัตรประชาชน ALIEN_CARD&#x3D;บัตรต่างด้าว  (required).</param>
        /// <param name="passportCountry">รหัสประเทศที่ออก passport (mandatory กรณี IdentificationCardType &#x3D; PASSPORT) .</param>
        /// <param name="cardNumber">เลขที่บัตรที่เปิดบัญชี Validate: check digit เฉพาะ identificationCardType &#x3D; CITIZEN_CARD  (required).</param>
        /// <param name="cardExpiryDate">วันที่หมดอายุบัตร เป็น ค.ศ. (YYYYMMDD) (mandatory กรณี IdentificationCardType &#x3D; PASSPORT หรือ ALIEN_CARD) .</param>
        /// <param name="thFirstName">ชื่อ ภาษาไทย  (required).</param>
        /// <param name="thLastName">นามสกุล ภาษาไทย  (required).</param>
        /// <param name="dateOfBirth">วันเกิด เป็น ค.ศ. (YYYYMMDD) .</param>
        /// <param name="identificationDocument">identificationDocument.</param>
        /// <param name="politicalRelatedPerson">ท่านเป็นผู้มีสถานภาพทางการเมืองหรือเป็นสมาชิกในครอบครัวหรือเป็นผู้ใกล้ชิดกับบุคคลผู้มีสถานภาพทางการเมืองหรือไม่ true &#x3D; มี False &#x3D; ไม่มี .</param>
        /// <param name="politicalRelatedPersonPosition">ตำแหน่งงานที่เกี่ยวกับข้องกับการเมือง (mandatory กรณี politicalRelatedPerson  &#x3D; true) .</param>
        public JuristicInvestorV5ResponseEndBeneficiaryInner(IdentificationCardTypeEnum identificationCardType = default(IdentificationCardTypeEnum), string passportCountry = default(string), string cardNumber = default(string), string cardExpiryDate = default(string), string thFirstName = default(string), string thLastName = default(string), string dateOfBirth = default(string), EndBeneficiaryIdentificationDocument identificationDocument = default(EndBeneficiaryIdentificationDocument), bool? politicalRelatedPerson = default(bool?), string politicalRelatedPersonPosition = default(string))
        {
            this.IdentificationCardType = identificationCardType;
            // to ensure "cardNumber" is required (not null)
            if (cardNumber == null)
            {
                throw new ArgumentNullException("cardNumber is a required property for JuristicInvestorV5ResponseEndBeneficiaryInner and cannot be null");
            }
            this.CardNumber = cardNumber;
            // to ensure "thFirstName" is required (not null)
            if (thFirstName == null)
            {
                throw new ArgumentNullException("thFirstName is a required property for JuristicInvestorV5ResponseEndBeneficiaryInner and cannot be null");
            }
            this.ThFirstName = thFirstName;
            // to ensure "thLastName" is required (not null)
            if (thLastName == null)
            {
                throw new ArgumentNullException("thLastName is a required property for JuristicInvestorV5ResponseEndBeneficiaryInner and cannot be null");
            }
            this.ThLastName = thLastName;
            this.PassportCountry = passportCountry;
            this.CardExpiryDate = cardExpiryDate;
            this.DateOfBirth = dateOfBirth;
            this.IdentificationDocument = identificationDocument;
            this.PoliticalRelatedPerson = politicalRelatedPerson;
            this.PoliticalRelatedPersonPosition = politicalRelatedPersonPosition;
        }

        /// <summary>
        /// รหัสประเทศที่ออก passport (mandatory กรณี IdentificationCardType &#x3D; PASSPORT) 
        /// </summary>
        /// <value>รหัสประเทศที่ออก passport (mandatory กรณี IdentificationCardType &#x3D; PASSPORT) </value>
        [DataMember(Name = "passportCountry", EmitDefaultValue = true)]
        public string PassportCountry { get; set; }

        /// <summary>
        /// เลขที่บัตรที่เปิดบัญชี Validate: check digit เฉพาะ identificationCardType &#x3D; CITIZEN_CARD 
        /// </summary>
        /// <value>เลขที่บัตรที่เปิดบัญชี Validate: check digit เฉพาะ identificationCardType &#x3D; CITIZEN_CARD </value>
        [DataMember(Name = "cardNumber", IsRequired = true, EmitDefaultValue = true)]
        public string CardNumber { get; set; }

        /// <summary>
        /// วันที่หมดอายุบัตร เป็น ค.ศ. (YYYYMMDD) (mandatory กรณี IdentificationCardType &#x3D; PASSPORT หรือ ALIEN_CARD) 
        /// </summary>
        /// <value>วันที่หมดอายุบัตร เป็น ค.ศ. (YYYYMMDD) (mandatory กรณี IdentificationCardType &#x3D; PASSPORT หรือ ALIEN_CARD) </value>
        [DataMember(Name = "cardExpiryDate", EmitDefaultValue = true)]
        public string CardExpiryDate { get; set; }

        /// <summary>
        /// ชื่อ ภาษาไทย 
        /// </summary>
        /// <value>ชื่อ ภาษาไทย </value>
        [DataMember(Name = "thFirstName", IsRequired = true, EmitDefaultValue = true)]
        public string ThFirstName { get; set; }

        /// <summary>
        /// นามสกุล ภาษาไทย 
        /// </summary>
        /// <value>นามสกุล ภาษาไทย </value>
        [DataMember(Name = "thLastName", IsRequired = true, EmitDefaultValue = true)]
        public string ThLastName { get; set; }

        /// <summary>
        /// วันเกิด เป็น ค.ศ. (YYYYMMDD) 
        /// </summary>
        /// <value>วันเกิด เป็น ค.ศ. (YYYYMMDD) </value>
        [DataMember(Name = "dateOfBirth", EmitDefaultValue = true)]
        public string DateOfBirth { get; set; }

        /// <summary>
        /// Gets or Sets IdentificationDocument
        /// </summary>
        [DataMember(Name = "identificationDocument", EmitDefaultValue = false)]
        public EndBeneficiaryIdentificationDocument IdentificationDocument { get; set; }

        /// <summary>
        /// ท่านเป็นผู้มีสถานภาพทางการเมืองหรือเป็นสมาชิกในครอบครัวหรือเป็นผู้ใกล้ชิดกับบุคคลผู้มีสถานภาพทางการเมืองหรือไม่ true &#x3D; มี False &#x3D; ไม่มี 
        /// </summary>
        /// <value>ท่านเป็นผู้มีสถานภาพทางการเมืองหรือเป็นสมาชิกในครอบครัวหรือเป็นผู้ใกล้ชิดกับบุคคลผู้มีสถานภาพทางการเมืองหรือไม่ true &#x3D; มี False &#x3D; ไม่มี </value>
        [DataMember(Name = "politicalRelatedPerson", EmitDefaultValue = true)]
        public bool? PoliticalRelatedPerson { get; set; }

        /// <summary>
        /// ตำแหน่งงานที่เกี่ยวกับข้องกับการเมือง (mandatory กรณี politicalRelatedPerson  &#x3D; true) 
        /// </summary>
        /// <value>ตำแหน่งงานที่เกี่ยวกับข้องกับการเมือง (mandatory กรณี politicalRelatedPerson  &#x3D; true) </value>
        [DataMember(Name = "politicalRelatedPersonPosition", EmitDefaultValue = true)]
        public string PoliticalRelatedPersonPosition { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class JuristicInvestorV5ResponseEndBeneficiaryInner {\n");
            sb.Append("  IdentificationCardType: ").Append(IdentificationCardType).Append("\n");
            sb.Append("  PassportCountry: ").Append(PassportCountry).Append("\n");
            sb.Append("  CardNumber: ").Append(CardNumber).Append("\n");
            sb.Append("  CardExpiryDate: ").Append(CardExpiryDate).Append("\n");
            sb.Append("  ThFirstName: ").Append(ThFirstName).Append("\n");
            sb.Append("  ThLastName: ").Append(ThLastName).Append("\n");
            sb.Append("  DateOfBirth: ").Append(DateOfBirth).Append("\n");
            sb.Append("  IdentificationDocument: ").Append(IdentificationDocument).Append("\n");
            sb.Append("  PoliticalRelatedPerson: ").Append(PoliticalRelatedPerson).Append("\n");
            sb.Append("  PoliticalRelatedPersonPosition: ").Append(PoliticalRelatedPersonPosition).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            // PassportCountry (string) maxLength
            if (this.PassportCountry != null && this.PassportCountry.Length > 2)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for PassportCountry, length must be less than 2.", new[] { "PassportCountry" });
            }

            // PassportCountry (string) minLength
            if (this.PassportCountry != null && this.PassportCountry.Length < 2)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for PassportCountry, length must be greater than 2.", new[] { "PassportCountry" });
            }

            // CardNumber (string) maxLength
            if (this.CardNumber != null && this.CardNumber.Length > 13)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for CardNumber, length must be less than 13.", new[] { "CardNumber" });
            }

            // CardNumber (string) minLength
            if (this.CardNumber != null && this.CardNumber.Length < 1)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for CardNumber, length must be greater than 1.", new[] { "CardNumber" });
            }

            // CardExpiryDate (string) maxLength
            if (this.CardExpiryDate != null && this.CardExpiryDate.Length > 8)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for CardExpiryDate, length must be less than 8.", new[] { "CardExpiryDate" });
            }

            // CardExpiryDate (string) minLength
            if (this.CardExpiryDate != null && this.CardExpiryDate.Length < 8)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for CardExpiryDate, length must be greater than 8.", new[] { "CardExpiryDate" });
            }

            if (this.CardExpiryDate != null)
            {
                // CardExpiryDate (string) pattern
                Regex regexCardExpiryDate = new Regex(@"^((19|20)\d{2}(0[1-9]|1[0-2])(0[1-9]|[12]\d|3[01]))$", RegexOptions.CultureInvariant);
                if (!regexCardExpiryDate.Match(this.CardExpiryDate).Success)
                {
                    yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for CardExpiryDate, must match a pattern of " + regexCardExpiryDate, new[] { "CardExpiryDate" });
                }
            }

            // ThFirstName (string) maxLength
            if (this.ThFirstName != null && this.ThFirstName.Length > 100)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for ThFirstName, length must be less than 100.", new[] { "ThFirstName" });
            }

            // ThFirstName (string) minLength
            if (this.ThFirstName != null && this.ThFirstName.Length < 1)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for ThFirstName, length must be greater than 1.", new[] { "ThFirstName" });
            }

            // ThLastName (string) maxLength
            if (this.ThLastName != null && this.ThLastName.Length > 100)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for ThLastName, length must be less than 100.", new[] { "ThLastName" });
            }

            // ThLastName (string) minLength
            if (this.ThLastName != null && this.ThLastName.Length < 1)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for ThLastName, length must be greater than 1.", new[] { "ThLastName" });
            }

            // DateOfBirth (string) maxLength
            if (this.DateOfBirth != null && this.DateOfBirth.Length > 8)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for DateOfBirth, length must be less than 8.", new[] { "DateOfBirth" });
            }

            // DateOfBirth (string) minLength
            if (this.DateOfBirth != null && this.DateOfBirth.Length < 8)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for DateOfBirth, length must be greater than 8.", new[] { "DateOfBirth" });
            }

            if (this.DateOfBirth != null)
            {
                // DateOfBirth (string) pattern
                Regex regexDateOfBirth = new Regex(@"^((19|20)\d{2}(0[1-9]|1[0-2])(0[1-9]|[12]\d|3[01]))$", RegexOptions.CultureInvariant);
                if (!regexDateOfBirth.Match(this.DateOfBirth).Success)
                {
                    yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for DateOfBirth, must match a pattern of " + regexDateOfBirth, new[] { "DateOfBirth" });
                }
            }

            // PoliticalRelatedPersonPosition (string) maxLength
            if (this.PoliticalRelatedPersonPosition != null && this.PoliticalRelatedPersonPosition.Length > 50)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for PoliticalRelatedPersonPosition, length must be less than 50.", new[] { "PoliticalRelatedPersonPosition" });
            }

            yield break;
        }
    }

}
