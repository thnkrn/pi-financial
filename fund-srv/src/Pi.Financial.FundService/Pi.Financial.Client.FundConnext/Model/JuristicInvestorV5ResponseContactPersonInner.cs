/*
 * FundConnext
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel.DataAnnotations;
using System.IO;
using System.Linq;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using FileParameter = Pi.Financial.Client.FundConnext.Client.FileParameter;
using OpenAPIDateConverter = Pi.Financial.Client.FundConnext.Client.OpenAPIDateConverter;

namespace Pi.Financial.Client.FundConnext.Model
{
    /// <summary>
    /// JuristicInvestorV5ResponseContactPersonInner
    /// </summary>
    [DataContract(Name = "JuristicInvestorV5Response_contactPerson_inner")]
    public partial class JuristicInvestorV5ResponseContactPersonInner : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="JuristicInvestorV5ResponseContactPersonInner" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected JuristicInvestorV5ResponseContactPersonInner() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="JuristicInvestorV5ResponseContactPersonInner" /> class.
        /// </summary>
        /// <param name="firstName">ชื่อ ภาษาไทย  (required).</param>
        /// <param name="lastName">นามสกุล ภาษาไทย  (required).</param>
        /// <param name="position">ตำแหน่ง/ฝ่าย .</param>
        /// <param name="telephone">โทรศัพท์  (required).</param>
        /// <param name="fax">โทรสาร .</param>
        /// <param name="email">อีเมล เช่น xxx@set.or.th Validate: email pattern .</param>
        public JuristicInvestorV5ResponseContactPersonInner(string firstName = default(string), string lastName = default(string), string position = default(string), string telephone = default(string), string fax = default(string), string email = default(string))
        {
            // to ensure "firstName" is required (not null)
            if (firstName == null)
            {
                throw new ArgumentNullException("firstName is a required property for JuristicInvestorV5ResponseContactPersonInner and cannot be null");
            }
            this.FirstName = firstName;
            // to ensure "lastName" is required (not null)
            if (lastName == null)
            {
                throw new ArgumentNullException("lastName is a required property for JuristicInvestorV5ResponseContactPersonInner and cannot be null");
            }
            this.LastName = lastName;
            // to ensure "telephone" is required (not null)
            if (telephone == null)
            {
                throw new ArgumentNullException("telephone is a required property for JuristicInvestorV5ResponseContactPersonInner and cannot be null");
            }
            this.Telephone = telephone;
            this.Position = position;
            this.Fax = fax;
            this.Email = email;
        }

        /// <summary>
        /// ชื่อ ภาษาไทย 
        /// </summary>
        /// <value>ชื่อ ภาษาไทย </value>
        [DataMember(Name = "firstName", IsRequired = true, EmitDefaultValue = true)]
        public string FirstName { get; set; }

        /// <summary>
        /// นามสกุล ภาษาไทย 
        /// </summary>
        /// <value>นามสกุล ภาษาไทย </value>
        [DataMember(Name = "lastName", IsRequired = true, EmitDefaultValue = true)]
        public string LastName { get; set; }

        /// <summary>
        /// ตำแหน่ง/ฝ่าย 
        /// </summary>
        /// <value>ตำแหน่ง/ฝ่าย </value>
        [DataMember(Name = "position", EmitDefaultValue = true)]
        public string Position { get; set; }

        /// <summary>
        /// โทรศัพท์ 
        /// </summary>
        /// <value>โทรศัพท์ </value>
        [DataMember(Name = "telephone", IsRequired = true, EmitDefaultValue = true)]
        public string Telephone { get; set; }

        /// <summary>
        /// โทรสาร 
        /// </summary>
        /// <value>โทรสาร </value>
        [DataMember(Name = "fax", EmitDefaultValue = true)]
        public string Fax { get; set; }

        /// <summary>
        /// อีเมล เช่น xxx@set.or.th Validate: email pattern 
        /// </summary>
        /// <value>อีเมล เช่น xxx@set.or.th Validate: email pattern </value>
        [DataMember(Name = "email", EmitDefaultValue = true)]
        public string Email { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class JuristicInvestorV5ResponseContactPersonInner {\n");
            sb.Append("  FirstName: ").Append(FirstName).Append("\n");
            sb.Append("  LastName: ").Append(LastName).Append("\n");
            sb.Append("  Position: ").Append(Position).Append("\n");
            sb.Append("  Telephone: ").Append(Telephone).Append("\n");
            sb.Append("  Fax: ").Append(Fax).Append("\n");
            sb.Append("  Email: ").Append(Email).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            // FirstName (string) maxLength
            if (this.FirstName != null && this.FirstName.Length > 100)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for FirstName, length must be less than 100.", new[] { "FirstName" });
            }

            // FirstName (string) minLength
            if (this.FirstName != null && this.FirstName.Length < 1)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for FirstName, length must be greater than 1.", new[] { "FirstName" });
            }

            // LastName (string) maxLength
            if (this.LastName != null && this.LastName.Length > 100)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for LastName, length must be less than 100.", new[] { "LastName" });
            }

            // LastName (string) minLength
            if (this.LastName != null && this.LastName.Length < 1)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for LastName, length must be greater than 1.", new[] { "LastName" });
            }

            // Position (string) maxLength
            if (this.Position != null && this.Position.Length > 100)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for Position, length must be less than 100.", new[] { "Position" });
            }

            // Telephone (string) maxLength
            if (this.Telephone != null && this.Telephone.Length > 20)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for Telephone, length must be less than 20.", new[] { "Telephone" });
            }

            // Telephone (string) minLength
            if (this.Telephone != null && this.Telephone.Length < 1)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for Telephone, length must be greater than 1.", new[] { "Telephone" });
            }

            // Fax (string) maxLength
            if (this.Fax != null && this.Fax.Length > 20)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for Fax, length must be less than 20.", new[] { "Fax" });
            }

            // Email (string) maxLength
            if (this.Email != null && this.Email.Length > 100)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for Email, length must be less than 100.", new[] { "Email" });
            }

            if (this.Email != null)
            {
                // Email (string) pattern
                Regex regexEmail = new Regex(@"^[a-zA-Z0-9!#$%&'*+/=?^_`{|}~-]+(?:\.[a-zA-Z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-zA-Z0-9](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?\.)+[a-zA-Z0-9](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$", RegexOptions.CultureInvariant);
                if (!regexEmail.Match(this.Email).Success)
                {
                    yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for Email, must match a pattern of " + regexEmail, new[] { "Email" });
                }
            }

            yield break;
        }
    }

}
