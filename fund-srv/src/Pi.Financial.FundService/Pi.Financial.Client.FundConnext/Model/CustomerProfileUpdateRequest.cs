/*
 * FundConnext
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel.DataAnnotations;
using System.IO;
using System.Linq;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using FileParameter = Pi.Financial.Client.FundConnext.Client.FileParameter;
using OpenAPIDateConverter = Pi.Financial.Client.FundConnext.Client.OpenAPIDateConverter;

namespace Pi.Financial.Client.FundConnext.Model
{
    /// <summary>
    /// CustomerProfileUpdateRequest
    /// </summary>
    [DataContract(Name = "CustomerProfileUpdateRequest")]
    public partial class CustomerProfileUpdateRequest : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="CustomerProfileUpdateRequest" /> class.
        /// </summary>
        /// <param name="identificationCardType">identificationCardType.</param>
        /// <param name="passportCountry">passportCountry.</param>
        /// <param name="cardNumber">cardNumber.</param>
        /// <param name="cardExpiryDate">cardExpiryDate.</param>
        /// <param name="accompanyingDocument">accompanyingDocument.</param>
        /// <param name="title">title.</param>
        /// <param name="titleOther">titleOther.</param>
        /// <param name="enFirstName">enFirstName.</param>
        /// <param name="enLastName">enLastName.</param>
        /// <param name="thFirstName">thFirstName.</param>
        /// <param name="thLastName">thLastName.</param>
        /// <param name="birthDate">birthDate.</param>
        /// <param name="nationality">nationality.</param>
        /// <param name="mobileNumber">mobileNumber.</param>
        /// <param name="email">email.</param>
        /// <param name="phone">phone.</param>
        /// <param name="fax">fax.</param>
        /// <param name="maritalStatus">maritalStatus.</param>
        /// <param name="spouse">spouse.</param>
        /// <param name="occupationId">occupationId.</param>
        /// <param name="occupationOther">occupationOther.</param>
        /// <param name="businessTypeId">businessTypeId.</param>
        /// <param name="businessTypeOther">businessTypeOther.</param>
        /// <param name="monthlyIncomeLevel">monthlyIncomeLevel.</param>
        /// <param name="assetValue">assetValue.</param>
        /// <param name="incomeSource">incomeSource.</param>
        /// <param name="incomeSourceOther">incomeSourceOther.</param>
        /// <param name="identificationDocument">identificationDocument.</param>
        /// <param name="currentAddressSameAsFlag">currentAddressSameAsFlag.</param>
        /// <param name="current">current.</param>
        /// <param name="companyName">companyName.</param>
        /// <param name="work">work.</param>
        /// <param name="workPosition">workPosition.</param>
        /// <param name="relatedPoliticalPerson">relatedPoliticalPerson.</param>
        /// <param name="politicalRelatedPersonPosition">politicalRelatedPersonPosition.</param>
        /// <param name="canAcceptFxRisk">canAcceptFxRisk.</param>
        /// <param name="canAcceptDerivativeInvestment">canAcceptDerivativeInvestment.</param>
        /// <param name="suitabilityRiskLevel">suitabilityRiskLevel.</param>
        /// <param name="suitabilityEvaluationDate">suitabilityEvaluationDate.</param>
        /// <param name="fatca">fatca.</param>
        /// <param name="fatcaDeclarationDate">fatcaDeclarationDate.</param>
        /// <param name="cddScore">cddScore.</param>
        /// <param name="cddDate">cddDate.</param>
        /// <param name="referralPerson">referralPerson.</param>
        /// <param name="applicationDate">applicationDate.</param>
        /// <param name="incomeSourceCountry">incomeSourceCountry.</param>
        /// <param name="acceptBy">acceptBy.</param>
        /// <param name="openFundConnextFormFlag">openFundConnextFormFlag.</param>
        /// <param name="approved">approved.</param>
        /// <param name="vulnerableFlag">vulnerableFlag.</param>
        /// <param name="vulnerableDetail">vulnerableDetail.</param>
        /// <param name="ndidFlag">ndidFlag.</param>
        /// <param name="ndidRequestId">ndidRequestId.</param>
        /// <param name="openChannel">openChannel.</param>
        /// <param name="suitabilityForm">suitabilityForm.</param>
        /// <param name="investorClass">investorClass.</param>
        public CustomerProfileUpdateRequest(string identificationCardType = default(string), string passportCountry = default(string), string cardNumber = default(string), string cardExpiryDate = default(string), string accompanyingDocument = default(string), string title = default(string), string titleOther = default(string), string enFirstName = default(string), string enLastName = default(string), string thFirstName = default(string), string thLastName = default(string), string birthDate = default(string), string nationality = default(string), string mobileNumber = default(string), string email = default(string), string phone = default(string), string fax = default(string), string maritalStatus = default(string), Spouse spouse = default(Spouse), string occupationId = default(string), string occupationOther = default(string), string businessTypeId = default(string), string businessTypeOther = default(string), string monthlyIncomeLevel = default(string), int assetValue = default(int), string incomeSource = default(string), string incomeSourceOther = default(string), Address identificationDocument = default(Address), string currentAddressSameAsFlag = default(string), Address current = default(Address), string companyName = default(string), Address work = default(Address), string workPosition = default(string), bool relatedPoliticalPerson = default(bool), string politicalRelatedPersonPosition = default(string), bool canAcceptFxRisk = default(bool), bool canAcceptDerivativeInvestment = default(bool), string suitabilityRiskLevel = default(string), string suitabilityEvaluationDate = default(string), bool fatca = default(bool), string fatcaDeclarationDate = default(string), string cddScore = default(string), string cddDate = default(string), string referralPerson = default(string), string applicationDate = default(string), string incomeSourceCountry = default(string), string acceptBy = default(string), string openFundConnextFormFlag = default(string), bool approved = default(bool), bool vulnerableFlag = default(bool), string vulnerableDetail = default(string), bool ndidFlag = default(bool), string ndidRequestId = default(string), string openChannel = default(string), SuitabilityForm suitabilityForm = default(SuitabilityForm), string investorClass = default(string))
        {
            this.IdentificationCardType = identificationCardType;
            this.PassportCountry = passportCountry;
            this.CardNumber = cardNumber;
            this.CardExpiryDate = cardExpiryDate;
            this.AccompanyingDocument = accompanyingDocument;
            this.Title = title;
            this.TitleOther = titleOther;
            this.EnFirstName = enFirstName;
            this.EnLastName = enLastName;
            this.ThFirstName = thFirstName;
            this.ThLastName = thLastName;
            this.BirthDate = birthDate;
            this.Nationality = nationality;
            this.MobileNumber = mobileNumber;
            this.Email = email;
            this.Phone = phone;
            this.Fax = fax;
            this.MaritalStatus = maritalStatus;
            this.Spouse = spouse;
            this.OccupationId = occupationId;
            this.OccupationOther = occupationOther;
            this.BusinessTypeId = businessTypeId;
            this.BusinessTypeOther = businessTypeOther;
            this.MonthlyIncomeLevel = monthlyIncomeLevel;
            this.AssetValue = assetValue;
            this.IncomeSource = incomeSource;
            this.IncomeSourceOther = incomeSourceOther;
            this.IdentificationDocument = identificationDocument;
            this.CurrentAddressSameAsFlag = currentAddressSameAsFlag;
            this.Current = current;
            this.CompanyName = companyName;
            this.Work = work;
            this.WorkPosition = workPosition;
            this.RelatedPoliticalPerson = relatedPoliticalPerson;
            this.PoliticalRelatedPersonPosition = politicalRelatedPersonPosition;
            this.CanAcceptFxRisk = canAcceptFxRisk;
            this.CanAcceptDerivativeInvestment = canAcceptDerivativeInvestment;
            this.SuitabilityRiskLevel = suitabilityRiskLevel;
            this.SuitabilityEvaluationDate = suitabilityEvaluationDate;
            this.Fatca = fatca;
            this.FatcaDeclarationDate = fatcaDeclarationDate;
            this.CddScore = cddScore;
            this.CddDate = cddDate;
            this.ReferralPerson = referralPerson;
            this.ApplicationDate = applicationDate;
            this.IncomeSourceCountry = incomeSourceCountry;
            this.AcceptBy = acceptBy;
            this.OpenFundConnextFormFlag = openFundConnextFormFlag;
            this.Approved = approved;
            this.VulnerableFlag = vulnerableFlag;
            this.VulnerableDetail = vulnerableDetail;
            this.NdidFlag = ndidFlag;
            this.NdidRequestId = ndidRequestId;
            this.OpenChannel = openChannel;
            this.SuitabilityForm = suitabilityForm;
            this.InvestorClass = investorClass;
        }

        /// <summary>
        /// Gets or Sets IdentificationCardType
        /// </summary>
        [DataMember(Name = "identificationCardType", EmitDefaultValue = false)]
        public string IdentificationCardType { get; set; }

        /// <summary>
        /// Gets or Sets PassportCountry
        /// </summary>
        [DataMember(Name = "passportCountry", EmitDefaultValue = false)]
        public string PassportCountry { get; set; }

        /// <summary>
        /// Gets or Sets CardNumber
        /// </summary>
        [DataMember(Name = "cardNumber", EmitDefaultValue = false)]
        public string CardNumber { get; set; }

        /// <summary>
        /// Gets or Sets CardExpiryDate
        /// </summary>
        [DataMember(Name = "cardExpiryDate", EmitDefaultValue = false)]
        public string CardExpiryDate { get; set; }

        /// <summary>
        /// Gets or Sets AccompanyingDocument
        /// </summary>
        [DataMember(Name = "accompanyingDocument", EmitDefaultValue = false)]
        public string AccompanyingDocument { get; set; }

        /// <summary>
        /// Gets or Sets Title
        /// </summary>
        [DataMember(Name = "title", EmitDefaultValue = false)]
        public string Title { get; set; }

        /// <summary>
        /// Gets or Sets TitleOther
        /// </summary>
        [DataMember(Name = "titleOther", EmitDefaultValue = false)]
        public string TitleOther { get; set; }

        /// <summary>
        /// Gets or Sets EnFirstName
        /// </summary>
        [DataMember(Name = "enFirstName", EmitDefaultValue = false)]
        public string EnFirstName { get; set; }

        /// <summary>
        /// Gets or Sets EnLastName
        /// </summary>
        [DataMember(Name = "enLastName", EmitDefaultValue = false)]
        public string EnLastName { get; set; }

        /// <summary>
        /// Gets or Sets ThFirstName
        /// </summary>
        [DataMember(Name = "thFirstName", EmitDefaultValue = false)]
        public string ThFirstName { get; set; }

        /// <summary>
        /// Gets or Sets ThLastName
        /// </summary>
        [DataMember(Name = "thLastName", EmitDefaultValue = false)]
        public string ThLastName { get; set; }

        /// <summary>
        /// Gets or Sets BirthDate
        /// </summary>
        [DataMember(Name = "birthDate", EmitDefaultValue = false)]
        public string BirthDate { get; set; }

        /// <summary>
        /// Gets or Sets Nationality
        /// </summary>
        [DataMember(Name = "nationality", EmitDefaultValue = false)]
        public string Nationality { get; set; }

        /// <summary>
        /// Gets or Sets MobileNumber
        /// </summary>
        [DataMember(Name = "mobileNumber", EmitDefaultValue = false)]
        public string MobileNumber { get; set; }

        /// <summary>
        /// Gets or Sets Email
        /// </summary>
        [DataMember(Name = "email", EmitDefaultValue = false)]
        public string Email { get; set; }

        /// <summary>
        /// Gets or Sets Phone
        /// </summary>
        [DataMember(Name = "phone", EmitDefaultValue = false)]
        public string Phone { get; set; }

        /// <summary>
        /// Gets or Sets Fax
        /// </summary>
        [DataMember(Name = "fax", EmitDefaultValue = false)]
        public string Fax { get; set; }

        /// <summary>
        /// Gets or Sets MaritalStatus
        /// </summary>
        [DataMember(Name = "maritalStatus", EmitDefaultValue = false)]
        public string MaritalStatus { get; set; }

        /// <summary>
        /// Gets or Sets Spouse
        /// </summary>
        [DataMember(Name = "spouse", EmitDefaultValue = false)]
        public Spouse Spouse { get; set; }

        /// <summary>
        /// Gets or Sets OccupationId
        /// </summary>
        [DataMember(Name = "occupationId", EmitDefaultValue = false)]
        public string OccupationId { get; set; }

        /// <summary>
        /// Gets or Sets OccupationOther
        /// </summary>
        [DataMember(Name = "occupationOther", EmitDefaultValue = false)]
        public string OccupationOther { get; set; }

        /// <summary>
        /// Gets or Sets BusinessTypeId
        /// </summary>
        [DataMember(Name = "businessTypeId", EmitDefaultValue = false)]
        public string BusinessTypeId { get; set; }

        /// <summary>
        /// Gets or Sets BusinessTypeOther
        /// </summary>
        [DataMember(Name = "businessTypeOther", EmitDefaultValue = false)]
        public string BusinessTypeOther { get; set; }

        /// <summary>
        /// Gets or Sets MonthlyIncomeLevel
        /// </summary>
        [DataMember(Name = "monthlyIncomeLevel", EmitDefaultValue = false)]
        public string MonthlyIncomeLevel { get; set; }

        /// <summary>
        /// Gets or Sets AssetValue
        /// </summary>
        [DataMember(Name = "assetValue", EmitDefaultValue = false)]
        public int AssetValue { get; set; }

        /// <summary>
        /// Gets or Sets IncomeSource
        /// </summary>
        [DataMember(Name = "incomeSource", EmitDefaultValue = false)]
        public string IncomeSource { get; set; }

        /// <summary>
        /// Gets or Sets IncomeSourceOther
        /// </summary>
        [DataMember(Name = "incomeSourceOther", EmitDefaultValue = false)]
        public string IncomeSourceOther { get; set; }

        /// <summary>
        /// Gets or Sets IdentificationDocument
        /// </summary>
        [DataMember(Name = "identificationDocument", EmitDefaultValue = false)]
        public Address IdentificationDocument { get; set; }

        /// <summary>
        /// Gets or Sets CurrentAddressSameAsFlag
        /// </summary>
        [DataMember(Name = "currentAddressSameAsFlag", EmitDefaultValue = false)]
        public string CurrentAddressSameAsFlag { get; set; }

        /// <summary>
        /// Gets or Sets Current
        /// </summary>
        [DataMember(Name = "current", EmitDefaultValue = false)]
        public Address Current { get; set; }

        /// <summary>
        /// Gets or Sets CompanyName
        /// </summary>
        [DataMember(Name = "companyName", EmitDefaultValue = false)]
        public string CompanyName { get; set; }

        /// <summary>
        /// Gets or Sets Work
        /// </summary>
        [DataMember(Name = "work", EmitDefaultValue = false)]
        public Address Work { get; set; }

        /// <summary>
        /// Gets or Sets WorkPosition
        /// </summary>
        [DataMember(Name = "workPosition", EmitDefaultValue = false)]
        public string WorkPosition { get; set; }

        /// <summary>
        /// Gets or Sets RelatedPoliticalPerson
        /// </summary>
        [DataMember(Name = "relatedPoliticalPerson", EmitDefaultValue = true)]
        public bool RelatedPoliticalPerson { get; set; }

        /// <summary>
        /// Gets or Sets PoliticalRelatedPersonPosition
        /// </summary>
        [DataMember(Name = "politicalRelatedPersonPosition", EmitDefaultValue = false)]
        public string PoliticalRelatedPersonPosition { get; set; }

        /// <summary>
        /// Gets or Sets CanAcceptFxRisk
        /// </summary>
        [DataMember(Name = "canAcceptFxRisk", EmitDefaultValue = true)]
        public bool CanAcceptFxRisk { get; set; }

        /// <summary>
        /// Gets or Sets CanAcceptDerivativeInvestment
        /// </summary>
        [DataMember(Name = "canAcceptDerivativeInvestment", EmitDefaultValue = true)]
        public bool CanAcceptDerivativeInvestment { get; set; }

        /// <summary>
        /// Gets or Sets SuitabilityRiskLevel
        /// </summary>
        [DataMember(Name = "suitabilityRiskLevel", EmitDefaultValue = false)]
        public string SuitabilityRiskLevel { get; set; }

        /// <summary>
        /// Gets or Sets SuitabilityEvaluationDate
        /// </summary>
        [DataMember(Name = "suitabilityEvaluationDate", EmitDefaultValue = false)]
        public string SuitabilityEvaluationDate { get; set; }

        /// <summary>
        /// Gets or Sets Fatca
        /// </summary>
        [DataMember(Name = "fatca", EmitDefaultValue = true)]
        public bool Fatca { get; set; }

        /// <summary>
        /// Gets or Sets FatcaDeclarationDate
        /// </summary>
        [DataMember(Name = "fatcaDeclarationDate", EmitDefaultValue = false)]
        public string FatcaDeclarationDate { get; set; }

        /// <summary>
        /// Gets or Sets CddScore
        /// </summary>
        [DataMember(Name = "cddScore", EmitDefaultValue = false)]
        public string CddScore { get; set; }

        /// <summary>
        /// Gets or Sets CddDate
        /// </summary>
        [DataMember(Name = "cddDate", EmitDefaultValue = false)]
        public string CddDate { get; set; }

        /// <summary>
        /// Gets or Sets ReferralPerson
        /// </summary>
        [DataMember(Name = "referralPerson", EmitDefaultValue = false)]
        public string ReferralPerson { get; set; }

        /// <summary>
        /// Gets or Sets ApplicationDate
        /// </summary>
        [DataMember(Name = "applicationDate", EmitDefaultValue = false)]
        public string ApplicationDate { get; set; }

        /// <summary>
        /// Gets or Sets IncomeSourceCountry
        /// </summary>
        [DataMember(Name = "incomeSourceCountry", EmitDefaultValue = false)]
        public string IncomeSourceCountry { get; set; }

        /// <summary>
        /// Gets or Sets AcceptBy
        /// </summary>
        [DataMember(Name = "acceptBy", EmitDefaultValue = false)]
        public string AcceptBy { get; set; }

        /// <summary>
        /// Gets or Sets OpenFundConnextFormFlag
        /// </summary>
        [DataMember(Name = "openFundConnextFormFlag", EmitDefaultValue = false)]
        public string OpenFundConnextFormFlag { get; set; }

        /// <summary>
        /// Gets or Sets Approved
        /// </summary>
        [DataMember(Name = "approved", EmitDefaultValue = true)]
        public bool Approved { get; set; }

        /// <summary>
        /// Gets or Sets VulnerableFlag
        /// </summary>
        [DataMember(Name = "vulnerableFlag", EmitDefaultValue = true)]
        public bool VulnerableFlag { get; set; }

        /// <summary>
        /// Gets or Sets VulnerableDetail
        /// </summary>
        [DataMember(Name = "vulnerableDetail", EmitDefaultValue = false)]
        public string VulnerableDetail { get; set; }

        /// <summary>
        /// Gets or Sets NdidFlag
        /// </summary>
        [DataMember(Name = "ndidFlag", EmitDefaultValue = true)]
        public bool NdidFlag { get; set; }

        /// <summary>
        /// Gets or Sets NdidRequestId
        /// </summary>
        [DataMember(Name = "ndidRequestId", EmitDefaultValue = false)]
        public string NdidRequestId { get; set; }

        /// <summary>
        /// Gets or Sets OpenChannel
        /// </summary>
        [DataMember(Name = "openChannel", EmitDefaultValue = false)]
        public string OpenChannel { get; set; }

        /// <summary>
        /// Gets or Sets SuitabilityForm
        /// </summary>
        [DataMember(Name = "suitabilityForm", EmitDefaultValue = false)]
        public SuitabilityForm SuitabilityForm { get; set; }

        /// <summary>
        /// Gets or Sets InvestorClass
        /// </summary>
        [DataMember(Name = "investorClass", EmitDefaultValue = false)]
        public string InvestorClass { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class CustomerProfileUpdateRequest {\n");
            sb.Append("  IdentificationCardType: ").Append(IdentificationCardType).Append("\n");
            sb.Append("  PassportCountry: ").Append(PassportCountry).Append("\n");
            sb.Append("  CardNumber: ").Append(CardNumber).Append("\n");
            sb.Append("  CardExpiryDate: ").Append(CardExpiryDate).Append("\n");
            sb.Append("  AccompanyingDocument: ").Append(AccompanyingDocument).Append("\n");
            sb.Append("  Title: ").Append(Title).Append("\n");
            sb.Append("  TitleOther: ").Append(TitleOther).Append("\n");
            sb.Append("  EnFirstName: ").Append(EnFirstName).Append("\n");
            sb.Append("  EnLastName: ").Append(EnLastName).Append("\n");
            sb.Append("  ThFirstName: ").Append(ThFirstName).Append("\n");
            sb.Append("  ThLastName: ").Append(ThLastName).Append("\n");
            sb.Append("  BirthDate: ").Append(BirthDate).Append("\n");
            sb.Append("  Nationality: ").Append(Nationality).Append("\n");
            sb.Append("  MobileNumber: ").Append(MobileNumber).Append("\n");
            sb.Append("  Email: ").Append(Email).Append("\n");
            sb.Append("  Phone: ").Append(Phone).Append("\n");
            sb.Append("  Fax: ").Append(Fax).Append("\n");
            sb.Append("  MaritalStatus: ").Append(MaritalStatus).Append("\n");
            sb.Append("  Spouse: ").Append(Spouse).Append("\n");
            sb.Append("  OccupationId: ").Append(OccupationId).Append("\n");
            sb.Append("  OccupationOther: ").Append(OccupationOther).Append("\n");
            sb.Append("  BusinessTypeId: ").Append(BusinessTypeId).Append("\n");
            sb.Append("  BusinessTypeOther: ").Append(BusinessTypeOther).Append("\n");
            sb.Append("  MonthlyIncomeLevel: ").Append(MonthlyIncomeLevel).Append("\n");
            sb.Append("  AssetValue: ").Append(AssetValue).Append("\n");
            sb.Append("  IncomeSource: ").Append(IncomeSource).Append("\n");
            sb.Append("  IncomeSourceOther: ").Append(IncomeSourceOther).Append("\n");
            sb.Append("  IdentificationDocument: ").Append(IdentificationDocument).Append("\n");
            sb.Append("  CurrentAddressSameAsFlag: ").Append(CurrentAddressSameAsFlag).Append("\n");
            sb.Append("  Current: ").Append(Current).Append("\n");
            sb.Append("  CompanyName: ").Append(CompanyName).Append("\n");
            sb.Append("  Work: ").Append(Work).Append("\n");
            sb.Append("  WorkPosition: ").Append(WorkPosition).Append("\n");
            sb.Append("  RelatedPoliticalPerson: ").Append(RelatedPoliticalPerson).Append("\n");
            sb.Append("  PoliticalRelatedPersonPosition: ").Append(PoliticalRelatedPersonPosition).Append("\n");
            sb.Append("  CanAcceptFxRisk: ").Append(CanAcceptFxRisk).Append("\n");
            sb.Append("  CanAcceptDerivativeInvestment: ").Append(CanAcceptDerivativeInvestment).Append("\n");
            sb.Append("  SuitabilityRiskLevel: ").Append(SuitabilityRiskLevel).Append("\n");
            sb.Append("  SuitabilityEvaluationDate: ").Append(SuitabilityEvaluationDate).Append("\n");
            sb.Append("  Fatca: ").Append(Fatca).Append("\n");
            sb.Append("  FatcaDeclarationDate: ").Append(FatcaDeclarationDate).Append("\n");
            sb.Append("  CddScore: ").Append(CddScore).Append("\n");
            sb.Append("  CddDate: ").Append(CddDate).Append("\n");
            sb.Append("  ReferralPerson: ").Append(ReferralPerson).Append("\n");
            sb.Append("  ApplicationDate: ").Append(ApplicationDate).Append("\n");
            sb.Append("  IncomeSourceCountry: ").Append(IncomeSourceCountry).Append("\n");
            sb.Append("  AcceptBy: ").Append(AcceptBy).Append("\n");
            sb.Append("  OpenFundConnextFormFlag: ").Append(OpenFundConnextFormFlag).Append("\n");
            sb.Append("  Approved: ").Append(Approved).Append("\n");
            sb.Append("  VulnerableFlag: ").Append(VulnerableFlag).Append("\n");
            sb.Append("  VulnerableDetail: ").Append(VulnerableDetail).Append("\n");
            sb.Append("  NdidFlag: ").Append(NdidFlag).Append("\n");
            sb.Append("  NdidRequestId: ").Append(NdidRequestId).Append("\n");
            sb.Append("  OpenChannel: ").Append(OpenChannel).Append("\n");
            sb.Append("  SuitabilityForm: ").Append(SuitabilityForm).Append("\n");
            sb.Append("  InvestorClass: ").Append(InvestorClass).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
