/*
 * FundConnext
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel.DataAnnotations;
using System.IO;
using System.Linq;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using FileParameter = Pi.Financial.Client.FundConnext.Client.FileParameter;
using OpenAPIDateConverter = Pi.Financial.Client.FundConnext.Client.OpenAPIDateConverter;

namespace Pi.Financial.Client.FundConnext.Model
{
    /// <summary>
    /// ApiValidatePointCodePostRequest
    /// </summary>
    [DataContract(Name = "_api_validatePointCode_post_request")]
    public partial class ApiValidatePointCodePostRequest : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ApiValidatePointCodePostRequest" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected ApiValidatePointCodePostRequest() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="ApiValidatePointCodePostRequest" /> class.
        /// </summary>
        /// <param name="pointCode">Point Code (required).</param>
        public ApiValidatePointCodePostRequest(string pointCode = default(string))
        {
            // to ensure "pointCode" is required (not null)
            if (pointCode == null)
            {
                throw new ArgumentNullException("pointCode is a required property for ApiValidatePointCodePostRequest and cannot be null");
            }
            this.PointCode = pointCode;
        }

        /// <summary>
        /// Point Code
        /// </summary>
        /// <value>Point Code</value>
        [DataMember(Name = "pointCode", IsRequired = true, EmitDefaultValue = true)]
        public string PointCode { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class ApiValidatePointCodePostRequest {\n");
            sb.Append("  PointCode: ").Append(PointCode).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            // PointCode (string) maxLength
            if (this.PointCode != null && this.PointCode.Length > 10)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for PointCode, length must be less than 10.", new[] { "PointCode" });
            }

            yield break;
        }
    }

}
