/*
 * FundConnext
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel.DataAnnotations;
using System.IO;
using System.Linq;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using FileParameter = Pi.Financial.Client.FundConnext.Client.FileParameter;
using OpenAPIDateConverter = Pi.Financial.Client.FundConnext.Client.OpenAPIDateConverter;

namespace Pi.Financial.Client.FundConnext.Model
{
    /// <summary>
    /// JuristicDirectors
    /// </summary>
    [DataContract(Name = "JuristicDirectors")]
    public partial class JuristicDirectors : IValidatableObject
    {
        /// <summary>
        /// ประเภทบัตรที่เปิดบัญชี PASSPORT CITIZEN_CARD&#x3D;บัตรประชาชน 
        /// </summary>
        /// <value>ประเภทบัตรที่เปิดบัญชี PASSPORT CITIZEN_CARD&#x3D;บัตรประชาชน </value>
        [JsonConverter(typeof(StringEnumConverter))]
        public enum IdentificationCardTypeEnum
        {
            /// <summary>
            /// Enum PASSPORT for value: PASSPORT
            /// </summary>
            [EnumMember(Value = "PASSPORT")]
            PASSPORT = 1,

            /// <summary>
            /// Enum CITIZENCARD for value: CITIZEN_CARD
            /// </summary>
            [EnumMember(Value = "CITIZEN_CARD")]
            CITIZENCARD = 2
        }


        /// <summary>
        /// ประเภทบัตรที่เปิดบัญชี PASSPORT CITIZEN_CARD&#x3D;บัตรประชาชน 
        /// </summary>
        /// <value>ประเภทบัตรที่เปิดบัญชี PASSPORT CITIZEN_CARD&#x3D;บัตรประชาชน </value>
        [DataMember(Name = "identificationCardType", IsRequired = true, EmitDefaultValue = true)]
        public IdentificationCardTypeEnum IdentificationCardType { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="JuristicDirectors" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected JuristicDirectors() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="JuristicDirectors" /> class.
        /// </summary>
        /// <param name="identificationCardType">ประเภทบัตรที่เปิดบัญชี PASSPORT CITIZEN_CARD&#x3D;บัตรประชาชน  (required).</param>
        /// <param name="passportCountry">รหัสประเทศที่ออก passport (mandatory กรณี IdentificationCardType &#x3D; PASSPORT) .</param>
        /// <param name="cardNumber">cardNumber (required).</param>
        /// <param name="nationality">รหัส สัญชาติ อ้างอิงตาม sheet Nationality .</param>
        /// <param name="thFirstName">ชื่อ ภาษาไทย  (required).</param>
        /// <param name="thLastName">นามสกุล ภาษาไทย  (required).</param>
        /// <param name="isAuthorized">true&#x3D;มีอำนาจลงนาม False&#x3D;ไม่มีอำนาจลงนาม  (required).</param>
        /// <param name="isChiefExecutive">เป็นผู้บริหารสูงสุด true&#x3D;ใช่ false&#x3D;ไม่ใช่  (required).</param>
        public JuristicDirectors(IdentificationCardTypeEnum identificationCardType = default(IdentificationCardTypeEnum), string passportCountry = default(string), IndividualInvestorV5ResponseCardNumber cardNumber = default(IndividualInvestorV5ResponseCardNumber), string nationality = default(string), string thFirstName = default(string), string thLastName = default(string), bool isAuthorized = default(bool), bool isChiefExecutive = default(bool))
        {
            this.IdentificationCardType = identificationCardType;
            // to ensure "cardNumber" is required (not null)
            if (cardNumber == null)
            {
                throw new ArgumentNullException("cardNumber is a required property for JuristicDirectors and cannot be null");
            }
            this.CardNumber = cardNumber;
            // to ensure "thFirstName" is required (not null)
            if (thFirstName == null)
            {
                throw new ArgumentNullException("thFirstName is a required property for JuristicDirectors and cannot be null");
            }
            this.ThFirstName = thFirstName;
            // to ensure "thLastName" is required (not null)
            if (thLastName == null)
            {
                throw new ArgumentNullException("thLastName is a required property for JuristicDirectors and cannot be null");
            }
            this.ThLastName = thLastName;
            this.IsAuthorized = isAuthorized;
            this.IsChiefExecutive = isChiefExecutive;
            this.PassportCountry = passportCountry;
            this.Nationality = nationality;
        }

        /// <summary>
        /// รหัสประเทศที่ออก passport (mandatory กรณี IdentificationCardType &#x3D; PASSPORT) 
        /// </summary>
        /// <value>รหัสประเทศที่ออก passport (mandatory กรณี IdentificationCardType &#x3D; PASSPORT) </value>
        [DataMember(Name = "passportCountry", EmitDefaultValue = true)]
        public string PassportCountry { get; set; }

        /// <summary>
        /// Gets or Sets CardNumber
        /// </summary>
        [DataMember(Name = "cardNumber", IsRequired = true, EmitDefaultValue = true)]
        public IndividualInvestorV5ResponseCardNumber CardNumber { get; set; }

        /// <summary>
        /// รหัส สัญชาติ อ้างอิงตาม sheet Nationality 
        /// </summary>
        /// <value>รหัส สัญชาติ อ้างอิงตาม sheet Nationality </value>
        [DataMember(Name = "nationality", EmitDefaultValue = true)]
        public string Nationality { get; set; }

        /// <summary>
        /// ชื่อ ภาษาไทย 
        /// </summary>
        /// <value>ชื่อ ภาษาไทย </value>
        [DataMember(Name = "thFirstName", IsRequired = true, EmitDefaultValue = true)]
        public string ThFirstName { get; set; }

        /// <summary>
        /// นามสกุล ภาษาไทย 
        /// </summary>
        /// <value>นามสกุล ภาษาไทย </value>
        [DataMember(Name = "thLastName", IsRequired = true, EmitDefaultValue = true)]
        public string ThLastName { get; set; }

        /// <summary>
        /// true&#x3D;มีอำนาจลงนาม False&#x3D;ไม่มีอำนาจลงนาม 
        /// </summary>
        /// <value>true&#x3D;มีอำนาจลงนาม False&#x3D;ไม่มีอำนาจลงนาม </value>
        [DataMember(Name = "isAuthorized", IsRequired = true, EmitDefaultValue = true)]
        public bool IsAuthorized { get; set; }

        /// <summary>
        /// เป็นผู้บริหารสูงสุด true&#x3D;ใช่ false&#x3D;ไม่ใช่ 
        /// </summary>
        /// <value>เป็นผู้บริหารสูงสุด true&#x3D;ใช่ false&#x3D;ไม่ใช่ </value>
        [DataMember(Name = "isChiefExecutive", IsRequired = true, EmitDefaultValue = true)]
        public bool IsChiefExecutive { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class JuristicDirectors {\n");
            sb.Append("  IdentificationCardType: ").Append(IdentificationCardType).Append("\n");
            sb.Append("  PassportCountry: ").Append(PassportCountry).Append("\n");
            sb.Append("  CardNumber: ").Append(CardNumber).Append("\n");
            sb.Append("  Nationality: ").Append(Nationality).Append("\n");
            sb.Append("  ThFirstName: ").Append(ThFirstName).Append("\n");
            sb.Append("  ThLastName: ").Append(ThLastName).Append("\n");
            sb.Append("  IsAuthorized: ").Append(IsAuthorized).Append("\n");
            sb.Append("  IsChiefExecutive: ").Append(IsChiefExecutive).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            // PassportCountry (string) maxLength
            if (this.PassportCountry != null && this.PassportCountry.Length > 2)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for PassportCountry, length must be less than 2.", new[] { "PassportCountry" });
            }

            // Nationality (string) maxLength
            if (this.Nationality != null && this.Nationality.Length > 2)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for Nationality, length must be less than 2.", new[] { "Nationality" });
            }

            // ThFirstName (string) maxLength
            if (this.ThFirstName != null && this.ThFirstName.Length > 100)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for ThFirstName, length must be less than 100.", new[] { "ThFirstName" });
            }

            // ThFirstName (string) minLength
            if (this.ThFirstName != null && this.ThFirstName.Length < 1)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for ThFirstName, length must be greater than 1.", new[] { "ThFirstName" });
            }

            // ThLastName (string) maxLength
            if (this.ThLastName != null && this.ThLastName.Length > 100)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for ThLastName, length must be less than 100.", new[] { "ThLastName" });
            }

            // ThLastName (string) minLength
            if (this.ThLastName != null && this.ThLastName.Length < 1)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for ThLastName, length must be greater than 1.", new[] { "ThLastName" });
            }

            yield break;
        }
    }

}
