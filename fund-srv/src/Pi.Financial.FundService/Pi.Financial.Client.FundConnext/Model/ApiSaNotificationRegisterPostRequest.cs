/*
 * FundConnext
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel.DataAnnotations;
using System.IO;
using System.Linq;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using FileParameter = Pi.Financial.Client.FundConnext.Client.FileParameter;
using OpenAPIDateConverter = Pi.Financial.Client.FundConnext.Client.OpenAPIDateConverter;

namespace Pi.Financial.Client.FundConnext.Model
{
    /// <summary>
    /// ApiSaNotificationRegisterPostRequest
    /// </summary>
    [DataContract(Name = "_api_sa_notification_register_post_request")]
    public partial class ApiSaNotificationRegisterPostRequest : IValidatableObject
    {
        /// <summary>
        /// Callback Type
        /// </summary>
        /// <value>Callback Type</value>
        [JsonConverter(typeof(StringEnumConverter))]
        public enum CallbackTypeEnum
        {
            /// <summary>
            /// Enum ACCOUNTPROFILENOTIFICATION for value: ACCOUNT_PROFILE_NOTIFICATION
            /// </summary>
            [EnumMember(Value = "ACCOUNT_PROFILE_NOTIFICATION")]
            ACCOUNTPROFILENOTIFICATION = 1,

            /// <summary>
            /// Enum FUNDDATANOTIFICATION for value: FUND_DATA_NOTIFICATION
            /// </summary>
            [EnumMember(Value = "FUND_DATA_NOTIFICATION")]
            FUNDDATANOTIFICATION = 2
        }


        /// <summary>
        /// Callback Type
        /// </summary>
        /// <value>Callback Type</value>
        [DataMember(Name = "callbackType", IsRequired = true, EmitDefaultValue = true)]
        public CallbackTypeEnum CallbackType { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="ApiSaNotificationRegisterPostRequest" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected ApiSaNotificationRegisterPostRequest() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="ApiSaNotificationRegisterPostRequest" /> class.
        /// </summary>
        /// <param name="callbackUrl">Callback Url (required).</param>
        /// <param name="callbackType">Callback Type (required).</param>
        /// <param name="tokenKey">Key (required).</param>
        public ApiSaNotificationRegisterPostRequest(string callbackUrl = default(string), CallbackTypeEnum callbackType = default(CallbackTypeEnum), string tokenKey = default(string))
        {
            // to ensure "callbackUrl" is required (not null)
            if (callbackUrl == null)
            {
                throw new ArgumentNullException("callbackUrl is a required property for ApiSaNotificationRegisterPostRequest and cannot be null");
            }
            this.CallbackUrl = callbackUrl;
            this.CallbackType = callbackType;
            // to ensure "tokenKey" is required (not null)
            if (tokenKey == null)
            {
                throw new ArgumentNullException("tokenKey is a required property for ApiSaNotificationRegisterPostRequest and cannot be null");
            }
            this.TokenKey = tokenKey;
        }

        /// <summary>
        /// Callback Url
        /// </summary>
        /// <value>Callback Url</value>
        [DataMember(Name = "callbackUrl", IsRequired = true, EmitDefaultValue = true)]
        public string CallbackUrl { get; set; }

        /// <summary>
        /// Key
        /// </summary>
        /// <value>Key</value>
        [DataMember(Name = "tokenKey", IsRequired = true, EmitDefaultValue = true)]
        public string TokenKey { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class ApiSaNotificationRegisterPostRequest {\n");
            sb.Append("  CallbackUrl: ").Append(CallbackUrl).Append("\n");
            sb.Append("  CallbackType: ").Append(CallbackType).Append("\n");
            sb.Append("  TokenKey: ").Append(TokenKey).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            // CallbackUrl (string) maxLength
            if (this.CallbackUrl != null && this.CallbackUrl.Length > 100)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for CallbackUrl, length must be less than 100.", new[] { "CallbackUrl" });
            }

            // TokenKey (string) maxLength
            if (this.TokenKey != null && this.TokenKey.Length > 200)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for TokenKey, length must be less than 200.", new[] { "TokenKey" });
            }

            yield break;
        }
    }

}
