// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Pi.Financial.FundService.Infrastructure;

#nullable disable

namespace Pi.Financial.FundService.Migrations.Migrations
{
    [DbContext(typeof(FundDbContext))]
    [Migration("20230213104406_AddFailedReasonAndIsOpenSegregateAccountFlag")]
    partial class AddFailedReasonAndIsOpenSegregateAccountFlag
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Pi.Financial.FundService.Domain.AggregatesModel.AccountOpeningAggregate.FundAccountOpeningState", b =>
                {
                    b.Property<Guid>("CorrelationId")
                        .HasColumnType("char(36)")
                        .HasColumnName("correlation_id");

                    b.Property<string>("CurrentState")
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)")
                        .HasColumnName("current_state");

                    b.Property<string>("CustomerCode")
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("customer_code");

                    b.Property<Guid?>("DocumentsGenerationTicketId")
                        .HasColumnType("char(36)")
                        .HasColumnName("documents_generation_ticket_id");

                    b.Property<string>("FailedReason")
                        .HasColumnType("longtext")
                        .HasColumnName("failed_reason");

                    b.Property<bool>("IsOpenSegregateAccount")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("is_open_segregate_account");

                    b.Property<bool>("Ndid")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("ndid");

                    b.Property<DateTime?>("NdidDateTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("ndid_date_time");

                    b.Property<string>("NdidRequestId")
                        .HasColumnType("longtext")
                        .HasColumnName("ndid_request_id");

                    b.Property<DateTime>("RequestReceivedTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("request_received_time");

                    b.Property<DateTime>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("timestamp(6)")
                        .HasColumnName("row_version");

                    b.HasKey("CorrelationId")
                        .HasName("pk_fund_account_opening_state");

                    b.ToTable("fund_account_opening_state", (string)null);
                });
#pragma warning restore 612, 618
        }
    }
}
