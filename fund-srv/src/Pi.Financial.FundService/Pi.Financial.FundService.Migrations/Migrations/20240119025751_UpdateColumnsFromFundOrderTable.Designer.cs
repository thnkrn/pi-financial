// <auto-generated />
using System;
using System.ComponentModel.DataAnnotations;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Pi.Financial.FundService.Infrastructure;

#nullable disable

namespace Pi.Financial.FundService.Migrations.Migrations
{
    [DbContext(typeof(FundDbContext))]
    [Migration("20240119025751_UpdateColumnsFromFundOrderTable")]
    partial class UpdateColumnsFromFundOrderTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Pi.Financial.FundService.Domain.AggregatesModel.AccountOpeningAggregate.FundAccountOpeningState", b =>
                {
                    b.Property<Guid>("CorrelationId")
                        .HasColumnType("char(36)")
                        .HasColumnName("correlation_id");

                    b.Property<string>("CurrentState")
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)")
                        .HasColumnName("current_state");

                    b.Property<string>("CustomerCode")
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("customer_code");

                    b.Property<long?>("CustomerId")
                        .HasColumnType("bigint")
                        .HasColumnName("customer_id");

                    b.Property<Guid?>("DocumentsGenerationTicketId")
                        .HasColumnType("char(36)")
                        .HasColumnName("documents_generation_ticket_id");

                    b.Property<string>("FailedReason")
                        .HasColumnType("longtext")
                        .HasColumnName("failed_reason");

                    b.Property<bool>("IsOpenSegregateAccount")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("is_open_segregate_account");

                    b.Property<bool>("Ndid")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("ndid");

                    b.Property<DateTime?>("NdidDateTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("ndid_date_time");

                    b.Property<string>("NdidRequestId")
                        .HasColumnType("longtext")
                        .HasColumnName("ndid_request_id");

                    b.Property<string>("OpenAccountRegisterUid")
                        .HasColumnType("longtext")
                        .HasColumnName("open_account_register_uid");

                    b.Property<DateTime>("RequestReceivedTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("request_received_time");

                    b.Property<DateTime>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("timestamp(6)")
                        .HasColumnName("row_version");

                    b.Property<Guid>("UserId")
                        .HasColumnType("char(36)")
                        .HasColumnName("user_id");

                    b.HasKey("CorrelationId")
                        .HasName("pk_fund_account_opening_state");

                    b.ToTable("fund_account_opening_state", (string)null);
                });

            modelBuilder.Entity("Pi.Financial.FundService.Domain.AggregatesModel.FinancialAssetAggregate.UnitHolder", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .HasColumnName("id");

                    b.Property<string>("AmcCode")
                        .IsRequired()
                        .HasMaxLength(36)
                        .HasColumnType("varchar(36)")
                        .HasColumnName("amc_code");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(6)
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP(6)");

                    b.Property<string>("CustomerCode")
                        .IsRequired()
                        .HasMaxLength(36)
                        .HasColumnType("varchar(36)")
                        .HasColumnName("customer_code");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(36)
                        .HasColumnType("varchar(36)")
                        .HasColumnName("status");

                    b.Property<string>("TradingAccountNo")
                        .IsRequired()
                        .HasMaxLength(36)
                        .HasColumnType("varchar(36)")
                        .HasColumnName("trading_account_no");

                    b.Property<string>("UnitHolderId")
                        .IsRequired()
                        .HasMaxLength(36)
                        .HasColumnType("varchar(36)")
                        .HasColumnName("unit_holder_id");

                    b.Property<string>("UnitHolderType")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("unit_holder_type");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("updated_at");

                    b.HasKey("Id")
                        .HasName("pk_unit_holders");

                    b.ToTable("unit_holders", (string)null);
                });

            modelBuilder.Entity("Pi.Financial.FundService.Domain.AggregatesModel.TradingAggregate.FundOrderState", b =>
                {
                    b.Property<Guid>("CorrelationId")
                        .HasColumnType("char(36)")
                        .HasColumnName("correlation_id");

                    b.Property<decimal?>("AllottedAmount")
                        .HasPrecision(65, 30)
                        .HasColumnType("decimal(65,30)")
                        .HasColumnName("allotted_amount");

                    b.Property<DateOnly?>("AllottedDate")
                        .HasColumnType("date")
                        .HasColumnName("allotted_date");

                    b.Property<decimal?>("AllottedNav")
                        .HasPrecision(65, 30)
                        .HasColumnType("decimal(65,30)")
                        .HasColumnName("allotted_nav");

                    b.Property<decimal?>("AllottedVolume")
                        .HasPrecision(65, 30)
                        .HasColumnType("decimal(65,30)")
                        .HasColumnName("allotted_volume");

                    b.Property<decimal>("Amount")
                        .HasPrecision(65, 30)
                        .HasColumnType("decimal(65,30)")
                        .HasColumnName("amount");

                    b.Property<string>("BankAccount")
                        .HasMaxLength(36)
                        .HasColumnType("varchar(36)")
                        .HasColumnName("bank_account")
                        .HasAnnotation("Microsoft.EntityFrameworkCore.DataEncryption.IsEncrypted", true)
                        .HasAnnotation("Microsoft.EntityFrameworkCore.DataEncryption.StorageFormat", StorageFormat.Default);

                    b.Property<string>("BankCode")
                        .HasMaxLength(36)
                        .HasColumnType("varchar(36)")
                        .HasColumnName("bank_code")
                        .HasAnnotation("Microsoft.EntityFrameworkCore.DataEncryption.IsEncrypted", true)
                        .HasAnnotation("Microsoft.EntityFrameworkCore.DataEncryption.StorageFormat", StorageFormat.Default);

                    b.Property<string>("BrokerOrderId")
                        .HasMaxLength(36)
                        .HasColumnType("varchar(36)")
                        .HasColumnName("broker_order_id");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(6)
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP(6)");

                    b.Property<string>("CurrentState")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)")
                        .HasColumnName("current_state");

                    b.Property<string>("CustomerCode")
                        .IsRequired()
                        .HasMaxLength(36)
                        .HasColumnType("varchar(36)")
                        .HasColumnName("customer_code");

                    b.Property<DateOnly?>("EffectiveDate")
                        .HasColumnType("date")
                        .HasColumnName("effective_date");

                    b.Property<string>("ExchangeOrderId")
                        .HasMaxLength(36)
                        .HasColumnType("varchar(36)")
                        .HasColumnName("exchange_order_id");

                    b.Property<string>("FundCode")
                        .IsRequired()
                        .HasMaxLength(36)
                        .HasColumnType("varchar(36)")
                        .HasColumnName("fund_code");

                    b.Property<int?>("InstrumentId")
                        .HasColumnType("int")
                        .HasColumnName("instrument_id");

                    b.Property<string>("OrderNo")
                        .IsRequired()
                        .HasMaxLength(36)
                        .HasColumnType("varchar(36)")
                        .HasColumnName("order_no");

                    b.Property<string>("OrderSide")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("order_side");

                    b.Property<string>("OrderStatus")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("order_status");

                    b.Property<string>("OrderType")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("order_type");

                    b.Property<string>("PaymentType")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("payment_type");

                    b.Property<string>("RedemptionType")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("redemption_type");

                    b.Property<string>("SaleLicense")
                        .HasMaxLength(36)
                        .HasColumnType("varchar(36)")
                        .HasColumnName("sale_license");

                    b.Property<string>("TradingAccountNo")
                        .IsRequired()
                        .HasMaxLength(36)
                        .HasColumnType("varchar(36)")
                        .HasColumnName("trading_account_no");

                    b.Property<decimal>("Unit")
                        .HasPrecision(65, 30)
                        .HasColumnType("decimal(65,30)")
                        .HasColumnName("unit");

                    b.Property<string>("UnitHolderId")
                        .IsRequired()
                        .HasMaxLength(36)
                        .HasColumnType("varchar(36)")
                        .HasColumnName("unit_holder_id");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(6)
                        .HasColumnType("datetime(6)")
                        .HasColumnName("updated_at")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP(6)");

                    b.Property<int?>("VenueId")
                        .HasColumnType("int")
                        .HasColumnName("venue_id");

                    b.HasKey("CorrelationId")
                        .HasName("pk_fund_order_state");

                    b.HasIndex("OrderNo")
                        .IsUnique()
                        .HasDatabaseName("ix_fund_order_state_order_no");

                    b.ToTable("fund_order_state", (string)null);
                });
#pragma warning restore 612, 618
        }
    }
}
