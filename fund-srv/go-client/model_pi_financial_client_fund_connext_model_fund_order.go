/*
Pi.Financial.FundService.API, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package go_client

import (
	"encoding/json"
)

// checks if the PiFinancialClientFundConnextModelFundOrder type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PiFinancialClientFundConnextModelFundOrder{}

// PiFinancialClientFundConnextModelFundOrder struct for PiFinancialClientFundConnextModelFundOrder
type PiFinancialClientFundConnextModelFundOrder struct {
	SellAllUnitFlag        NullableString  `json:"sellAllUnitFlag,omitempty"`
	Status                 *string         `json:"status,omitempty"`
	TransactionId          NullableString  `json:"transactionId,omitempty"`
	SaOrderReferenceNo     NullableString  `json:"saOrderReferenceNo,omitempty"`
	OrderType              NullableString  `json:"orderType,omitempty"`
	AccountId              NullableString  `json:"accountId,omitempty"`
	UnitholderId           NullableString  `json:"unitholderId,omitempty"`
	FundCode               NullableString  `json:"fundCode,omitempty"`
	RedemptionType         NullableString  `json:"redemptionType,omitempty"`
	Unit                   NullableFloat64 `json:"unit,omitempty"`
	Amount                 NullableFloat64 `json:"amount,omitempty"`
	TransactionDateTime    NullableString  `json:"transactionDateTime,omitempty"`
	EffectiveDate          NullableString  `json:"effectiveDate,omitempty"`
	SettlementDate         NullableString  `json:"settlementDate,omitempty"`
	AmcOrderReferenceNo    NullableString  `json:"amcOrderReferenceNo,omitempty"`
	AllottedUnit           NullableFloat64 `json:"allottedUnit,omitempty"`
	AllottedAmount         NullableFloat64 `json:"allottedAmount,omitempty"`
	AllottedNAV            NullableFloat64 `json:"allottedNAV,omitempty"`
	AllotmentDate          NullableString  `json:"allotmentDate,omitempty"`
	Fee                    NullableFloat64 `json:"fee,omitempty"`
	TransactionLastUpdated NullableString  `json:"transactionLastUpdated,omitempty"`
	PaymentType            NullableString  `json:"paymentType,omitempty"`
	BankCode               NullableString  `json:"bankCode,omitempty"`
	BankAccount            NullableString  `json:"bankAccount,omitempty"`
	Channel                NullableString  `json:"channel,omitempty"`
	IcLicense              NullableString  `json:"icLicense,omitempty"`
	BranchNo               NullableString  `json:"branchNo,omitempty"`
	ForceEntry             NullableString  `json:"forceEntry,omitempty"`
	SettlementBankCode     NullableString  `json:"settlementBankCode,omitempty"`
	SettlementBankAccount  NullableString  `json:"settlementBankAccount,omitempty"`
	ChqBranch              NullableString  `json:"chqBranch,omitempty"`
	RejectReason           NullableString  `json:"rejectReason,omitempty"`
	NavDate                NullableString  `json:"navDate,omitempty"`
	CollateralAccount      NullableString  `json:"collateralAccount,omitempty"`
	AccountType            NullableString  `json:"accountType,omitempty"`
	RecurringOrderId       NullableString  `json:"recurringOrderId,omitempty"`
	PaymentStatus          NullableString  `json:"paymentStatus,omitempty"`
	PaymentProcessingType  NullableString  `json:"paymentProcessingType,omitempty"`
	SaRecurringOrderRefNo  NullableString  `json:"saRecurringOrderRefNo,omitempty"`
	CrcApprovalCode        NullableString  `json:"crcApprovalCode,omitempty"`
	PointCode              NullableString  `json:"pointCode,omitempty"`
	CounterUnitholderId    NullableString  `json:"counterUnitholderId,omitempty"`
	CounterFundCode        NullableString  `json:"counterFundCode,omitempty"`
	XwtReferenceNo         NullableString  `json:"xwtReferenceNo,omitempty"`
	OriginalTransactionId  NullableString  `json:"originalTransactionId,omitempty"`
	LmtsAdlsFee            NullableString  `json:"lmtsAdlsFee,omitempty"`
	LmtsLiquidityFee       NullableString  `json:"lmtsLiquidityFee,omitempty"`
}

// NewPiFinancialClientFundConnextModelFundOrder instantiates a new PiFinancialClientFundConnextModelFundOrder object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPiFinancialClientFundConnextModelFundOrder() *PiFinancialClientFundConnextModelFundOrder {
	this := PiFinancialClientFundConnextModelFundOrder{}
	return &this
}

// NewPiFinancialClientFundConnextModelFundOrderWithDefaults instantiates a new PiFinancialClientFundConnextModelFundOrder object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPiFinancialClientFundConnextModelFundOrderWithDefaults() *PiFinancialClientFundConnextModelFundOrder {
	this := PiFinancialClientFundConnextModelFundOrder{}
	return &this
}

// GetSellAllUnitFlag returns the SellAllUnitFlag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiFinancialClientFundConnextModelFundOrder) GetSellAllUnitFlag() string {
	if o == nil || IsNil(o.SellAllUnitFlag.Get()) {
		var ret string
		return ret
	}
	return *o.SellAllUnitFlag.Get()
}

// GetSellAllUnitFlagOk returns a tuple with the SellAllUnitFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiFinancialClientFundConnextModelFundOrder) GetSellAllUnitFlagOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SellAllUnitFlag.Get(), o.SellAllUnitFlag.IsSet()
}

// HasSellAllUnitFlag returns a boolean if a field has been set.
func (o *PiFinancialClientFundConnextModelFundOrder) HasSellAllUnitFlag() bool {
	if o != nil && o.SellAllUnitFlag.IsSet() {
		return true
	}

	return false
}

// SetSellAllUnitFlag gets a reference to the given NullableString and assigns it to the SellAllUnitFlag field.
func (o *PiFinancialClientFundConnextModelFundOrder) SetSellAllUnitFlag(v string) {
	o.SellAllUnitFlag.Set(&v)
}

// SetSellAllUnitFlagNil sets the value for SellAllUnitFlag to be an explicit nil
func (o *PiFinancialClientFundConnextModelFundOrder) SetSellAllUnitFlagNil() {
	o.SellAllUnitFlag.Set(nil)
}

// UnsetSellAllUnitFlag ensures that no value is present for SellAllUnitFlag, not even an explicit nil
func (o *PiFinancialClientFundConnextModelFundOrder) UnsetSellAllUnitFlag() {
	o.SellAllUnitFlag.Unset()
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *PiFinancialClientFundConnextModelFundOrder) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PiFinancialClientFundConnextModelFundOrder) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *PiFinancialClientFundConnextModelFundOrder) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *PiFinancialClientFundConnextModelFundOrder) SetStatus(v string) {
	o.Status = &v
}

// GetTransactionId returns the TransactionId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiFinancialClientFundConnextModelFundOrder) GetTransactionId() string {
	if o == nil || IsNil(o.TransactionId.Get()) {
		var ret string
		return ret
	}
	return *o.TransactionId.Get()
}

// GetTransactionIdOk returns a tuple with the TransactionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiFinancialClientFundConnextModelFundOrder) GetTransactionIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TransactionId.Get(), o.TransactionId.IsSet()
}

// HasTransactionId returns a boolean if a field has been set.
func (o *PiFinancialClientFundConnextModelFundOrder) HasTransactionId() bool {
	if o != nil && o.TransactionId.IsSet() {
		return true
	}

	return false
}

// SetTransactionId gets a reference to the given NullableString and assigns it to the TransactionId field.
func (o *PiFinancialClientFundConnextModelFundOrder) SetTransactionId(v string) {
	o.TransactionId.Set(&v)
}

// SetTransactionIdNil sets the value for TransactionId to be an explicit nil
func (o *PiFinancialClientFundConnextModelFundOrder) SetTransactionIdNil() {
	o.TransactionId.Set(nil)
}

// UnsetTransactionId ensures that no value is present for TransactionId, not even an explicit nil
func (o *PiFinancialClientFundConnextModelFundOrder) UnsetTransactionId() {
	o.TransactionId.Unset()
}

// GetSaOrderReferenceNo returns the SaOrderReferenceNo field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiFinancialClientFundConnextModelFundOrder) GetSaOrderReferenceNo() string {
	if o == nil || IsNil(o.SaOrderReferenceNo.Get()) {
		var ret string
		return ret
	}
	return *o.SaOrderReferenceNo.Get()
}

// GetSaOrderReferenceNoOk returns a tuple with the SaOrderReferenceNo field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiFinancialClientFundConnextModelFundOrder) GetSaOrderReferenceNoOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SaOrderReferenceNo.Get(), o.SaOrderReferenceNo.IsSet()
}

// HasSaOrderReferenceNo returns a boolean if a field has been set.
func (o *PiFinancialClientFundConnextModelFundOrder) HasSaOrderReferenceNo() bool {
	if o != nil && o.SaOrderReferenceNo.IsSet() {
		return true
	}

	return false
}

// SetSaOrderReferenceNo gets a reference to the given NullableString and assigns it to the SaOrderReferenceNo field.
func (o *PiFinancialClientFundConnextModelFundOrder) SetSaOrderReferenceNo(v string) {
	o.SaOrderReferenceNo.Set(&v)
}

// SetSaOrderReferenceNoNil sets the value for SaOrderReferenceNo to be an explicit nil
func (o *PiFinancialClientFundConnextModelFundOrder) SetSaOrderReferenceNoNil() {
	o.SaOrderReferenceNo.Set(nil)
}

// UnsetSaOrderReferenceNo ensures that no value is present for SaOrderReferenceNo, not even an explicit nil
func (o *PiFinancialClientFundConnextModelFundOrder) UnsetSaOrderReferenceNo() {
	o.SaOrderReferenceNo.Unset()
}

// GetOrderType returns the OrderType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiFinancialClientFundConnextModelFundOrder) GetOrderType() string {
	if o == nil || IsNil(o.OrderType.Get()) {
		var ret string
		return ret
	}
	return *o.OrderType.Get()
}

// GetOrderTypeOk returns a tuple with the OrderType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiFinancialClientFundConnextModelFundOrder) GetOrderTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.OrderType.Get(), o.OrderType.IsSet()
}

// HasOrderType returns a boolean if a field has been set.
func (o *PiFinancialClientFundConnextModelFundOrder) HasOrderType() bool {
	if o != nil && o.OrderType.IsSet() {
		return true
	}

	return false
}

// SetOrderType gets a reference to the given NullableString and assigns it to the OrderType field.
func (o *PiFinancialClientFundConnextModelFundOrder) SetOrderType(v string) {
	o.OrderType.Set(&v)
}

// SetOrderTypeNil sets the value for OrderType to be an explicit nil
func (o *PiFinancialClientFundConnextModelFundOrder) SetOrderTypeNil() {
	o.OrderType.Set(nil)
}

// UnsetOrderType ensures that no value is present for OrderType, not even an explicit nil
func (o *PiFinancialClientFundConnextModelFundOrder) UnsetOrderType() {
	o.OrderType.Unset()
}

// GetAccountId returns the AccountId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiFinancialClientFundConnextModelFundOrder) GetAccountId() string {
	if o == nil || IsNil(o.AccountId.Get()) {
		var ret string
		return ret
	}
	return *o.AccountId.Get()
}

// GetAccountIdOk returns a tuple with the AccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiFinancialClientFundConnextModelFundOrder) GetAccountIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AccountId.Get(), o.AccountId.IsSet()
}

// HasAccountId returns a boolean if a field has been set.
func (o *PiFinancialClientFundConnextModelFundOrder) HasAccountId() bool {
	if o != nil && o.AccountId.IsSet() {
		return true
	}

	return false
}

// SetAccountId gets a reference to the given NullableString and assigns it to the AccountId field.
func (o *PiFinancialClientFundConnextModelFundOrder) SetAccountId(v string) {
	o.AccountId.Set(&v)
}

// SetAccountIdNil sets the value for AccountId to be an explicit nil
func (o *PiFinancialClientFundConnextModelFundOrder) SetAccountIdNil() {
	o.AccountId.Set(nil)
}

// UnsetAccountId ensures that no value is present for AccountId, not even an explicit nil
func (o *PiFinancialClientFundConnextModelFundOrder) UnsetAccountId() {
	o.AccountId.Unset()
}

// GetUnitholderId returns the UnitholderId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiFinancialClientFundConnextModelFundOrder) GetUnitholderId() string {
	if o == nil || IsNil(o.UnitholderId.Get()) {
		var ret string
		return ret
	}
	return *o.UnitholderId.Get()
}

// GetUnitholderIdOk returns a tuple with the UnitholderId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiFinancialClientFundConnextModelFundOrder) GetUnitholderIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.UnitholderId.Get(), o.UnitholderId.IsSet()
}

// HasUnitholderId returns a boolean if a field has been set.
func (o *PiFinancialClientFundConnextModelFundOrder) HasUnitholderId() bool {
	if o != nil && o.UnitholderId.IsSet() {
		return true
	}

	return false
}

// SetUnitholderId gets a reference to the given NullableString and assigns it to the UnitholderId field.
func (o *PiFinancialClientFundConnextModelFundOrder) SetUnitholderId(v string) {
	o.UnitholderId.Set(&v)
}

// SetUnitholderIdNil sets the value for UnitholderId to be an explicit nil
func (o *PiFinancialClientFundConnextModelFundOrder) SetUnitholderIdNil() {
	o.UnitholderId.Set(nil)
}

// UnsetUnitholderId ensures that no value is present for UnitholderId, not even an explicit nil
func (o *PiFinancialClientFundConnextModelFundOrder) UnsetUnitholderId() {
	o.UnitholderId.Unset()
}

// GetFundCode returns the FundCode field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiFinancialClientFundConnextModelFundOrder) GetFundCode() string {
	if o == nil || IsNil(o.FundCode.Get()) {
		var ret string
		return ret
	}
	return *o.FundCode.Get()
}

// GetFundCodeOk returns a tuple with the FundCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiFinancialClientFundConnextModelFundOrder) GetFundCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.FundCode.Get(), o.FundCode.IsSet()
}

// HasFundCode returns a boolean if a field has been set.
func (o *PiFinancialClientFundConnextModelFundOrder) HasFundCode() bool {
	if o != nil && o.FundCode.IsSet() {
		return true
	}

	return false
}

// SetFundCode gets a reference to the given NullableString and assigns it to the FundCode field.
func (o *PiFinancialClientFundConnextModelFundOrder) SetFundCode(v string) {
	o.FundCode.Set(&v)
}

// SetFundCodeNil sets the value for FundCode to be an explicit nil
func (o *PiFinancialClientFundConnextModelFundOrder) SetFundCodeNil() {
	o.FundCode.Set(nil)
}

// UnsetFundCode ensures that no value is present for FundCode, not even an explicit nil
func (o *PiFinancialClientFundConnextModelFundOrder) UnsetFundCode() {
	o.FundCode.Unset()
}

// GetRedemptionType returns the RedemptionType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiFinancialClientFundConnextModelFundOrder) GetRedemptionType() string {
	if o == nil || IsNil(o.RedemptionType.Get()) {
		var ret string
		return ret
	}
	return *o.RedemptionType.Get()
}

// GetRedemptionTypeOk returns a tuple with the RedemptionType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiFinancialClientFundConnextModelFundOrder) GetRedemptionTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.RedemptionType.Get(), o.RedemptionType.IsSet()
}

// HasRedemptionType returns a boolean if a field has been set.
func (o *PiFinancialClientFundConnextModelFundOrder) HasRedemptionType() bool {
	if o != nil && o.RedemptionType.IsSet() {
		return true
	}

	return false
}

// SetRedemptionType gets a reference to the given NullableString and assigns it to the RedemptionType field.
func (o *PiFinancialClientFundConnextModelFundOrder) SetRedemptionType(v string) {
	o.RedemptionType.Set(&v)
}

// SetRedemptionTypeNil sets the value for RedemptionType to be an explicit nil
func (o *PiFinancialClientFundConnextModelFundOrder) SetRedemptionTypeNil() {
	o.RedemptionType.Set(nil)
}

// UnsetRedemptionType ensures that no value is present for RedemptionType, not even an explicit nil
func (o *PiFinancialClientFundConnextModelFundOrder) UnsetRedemptionType() {
	o.RedemptionType.Unset()
}

// GetUnit returns the Unit field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiFinancialClientFundConnextModelFundOrder) GetUnit() float64 {
	if o == nil || IsNil(o.Unit.Get()) {
		var ret float64
		return ret
	}
	return *o.Unit.Get()
}

// GetUnitOk returns a tuple with the Unit field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiFinancialClientFundConnextModelFundOrder) GetUnitOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return o.Unit.Get(), o.Unit.IsSet()
}

// HasUnit returns a boolean if a field has been set.
func (o *PiFinancialClientFundConnextModelFundOrder) HasUnit() bool {
	if o != nil && o.Unit.IsSet() {
		return true
	}

	return false
}

// SetUnit gets a reference to the given NullableFloat64 and assigns it to the Unit field.
func (o *PiFinancialClientFundConnextModelFundOrder) SetUnit(v float64) {
	o.Unit.Set(&v)
}

// SetUnitNil sets the value for Unit to be an explicit nil
func (o *PiFinancialClientFundConnextModelFundOrder) SetUnitNil() {
	o.Unit.Set(nil)
}

// UnsetUnit ensures that no value is present for Unit, not even an explicit nil
func (o *PiFinancialClientFundConnextModelFundOrder) UnsetUnit() {
	o.Unit.Unset()
}

// GetAmount returns the Amount field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiFinancialClientFundConnextModelFundOrder) GetAmount() float64 {
	if o == nil || IsNil(o.Amount.Get()) {
		var ret float64
		return ret
	}
	return *o.Amount.Get()
}

// GetAmountOk returns a tuple with the Amount field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiFinancialClientFundConnextModelFundOrder) GetAmountOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return o.Amount.Get(), o.Amount.IsSet()
}

// HasAmount returns a boolean if a field has been set.
func (o *PiFinancialClientFundConnextModelFundOrder) HasAmount() bool {
	if o != nil && o.Amount.IsSet() {
		return true
	}

	return false
}

// SetAmount gets a reference to the given NullableFloat64 and assigns it to the Amount field.
func (o *PiFinancialClientFundConnextModelFundOrder) SetAmount(v float64) {
	o.Amount.Set(&v)
}

// SetAmountNil sets the value for Amount to be an explicit nil
func (o *PiFinancialClientFundConnextModelFundOrder) SetAmountNil() {
	o.Amount.Set(nil)
}

// UnsetAmount ensures that no value is present for Amount, not even an explicit nil
func (o *PiFinancialClientFundConnextModelFundOrder) UnsetAmount() {
	o.Amount.Unset()
}

// GetTransactionDateTime returns the TransactionDateTime field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiFinancialClientFundConnextModelFundOrder) GetTransactionDateTime() string {
	if o == nil || IsNil(o.TransactionDateTime.Get()) {
		var ret string
		return ret
	}
	return *o.TransactionDateTime.Get()
}

// GetTransactionDateTimeOk returns a tuple with the TransactionDateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiFinancialClientFundConnextModelFundOrder) GetTransactionDateTimeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TransactionDateTime.Get(), o.TransactionDateTime.IsSet()
}

// HasTransactionDateTime returns a boolean if a field has been set.
func (o *PiFinancialClientFundConnextModelFundOrder) HasTransactionDateTime() bool {
	if o != nil && o.TransactionDateTime.IsSet() {
		return true
	}

	return false
}

// SetTransactionDateTime gets a reference to the given NullableString and assigns it to the TransactionDateTime field.
func (o *PiFinancialClientFundConnextModelFundOrder) SetTransactionDateTime(v string) {
	o.TransactionDateTime.Set(&v)
}

// SetTransactionDateTimeNil sets the value for TransactionDateTime to be an explicit nil
func (o *PiFinancialClientFundConnextModelFundOrder) SetTransactionDateTimeNil() {
	o.TransactionDateTime.Set(nil)
}

// UnsetTransactionDateTime ensures that no value is present for TransactionDateTime, not even an explicit nil
func (o *PiFinancialClientFundConnextModelFundOrder) UnsetTransactionDateTime() {
	o.TransactionDateTime.Unset()
}

// GetEffectiveDate returns the EffectiveDate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiFinancialClientFundConnextModelFundOrder) GetEffectiveDate() string {
	if o == nil || IsNil(o.EffectiveDate.Get()) {
		var ret string
		return ret
	}
	return *o.EffectiveDate.Get()
}

// GetEffectiveDateOk returns a tuple with the EffectiveDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiFinancialClientFundConnextModelFundOrder) GetEffectiveDateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.EffectiveDate.Get(), o.EffectiveDate.IsSet()
}

// HasEffectiveDate returns a boolean if a field has been set.
func (o *PiFinancialClientFundConnextModelFundOrder) HasEffectiveDate() bool {
	if o != nil && o.EffectiveDate.IsSet() {
		return true
	}

	return false
}

// SetEffectiveDate gets a reference to the given NullableString and assigns it to the EffectiveDate field.
func (o *PiFinancialClientFundConnextModelFundOrder) SetEffectiveDate(v string) {
	o.EffectiveDate.Set(&v)
}

// SetEffectiveDateNil sets the value for EffectiveDate to be an explicit nil
func (o *PiFinancialClientFundConnextModelFundOrder) SetEffectiveDateNil() {
	o.EffectiveDate.Set(nil)
}

// UnsetEffectiveDate ensures that no value is present for EffectiveDate, not even an explicit nil
func (o *PiFinancialClientFundConnextModelFundOrder) UnsetEffectiveDate() {
	o.EffectiveDate.Unset()
}

// GetSettlementDate returns the SettlementDate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiFinancialClientFundConnextModelFundOrder) GetSettlementDate() string {
	if o == nil || IsNil(o.SettlementDate.Get()) {
		var ret string
		return ret
	}
	return *o.SettlementDate.Get()
}

// GetSettlementDateOk returns a tuple with the SettlementDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiFinancialClientFundConnextModelFundOrder) GetSettlementDateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SettlementDate.Get(), o.SettlementDate.IsSet()
}

// HasSettlementDate returns a boolean if a field has been set.
func (o *PiFinancialClientFundConnextModelFundOrder) HasSettlementDate() bool {
	if o != nil && o.SettlementDate.IsSet() {
		return true
	}

	return false
}

// SetSettlementDate gets a reference to the given NullableString and assigns it to the SettlementDate field.
func (o *PiFinancialClientFundConnextModelFundOrder) SetSettlementDate(v string) {
	o.SettlementDate.Set(&v)
}

// SetSettlementDateNil sets the value for SettlementDate to be an explicit nil
func (o *PiFinancialClientFundConnextModelFundOrder) SetSettlementDateNil() {
	o.SettlementDate.Set(nil)
}

// UnsetSettlementDate ensures that no value is present for SettlementDate, not even an explicit nil
func (o *PiFinancialClientFundConnextModelFundOrder) UnsetSettlementDate() {
	o.SettlementDate.Unset()
}

// GetAmcOrderReferenceNo returns the AmcOrderReferenceNo field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiFinancialClientFundConnextModelFundOrder) GetAmcOrderReferenceNo() string {
	if o == nil || IsNil(o.AmcOrderReferenceNo.Get()) {
		var ret string
		return ret
	}
	return *o.AmcOrderReferenceNo.Get()
}

// GetAmcOrderReferenceNoOk returns a tuple with the AmcOrderReferenceNo field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiFinancialClientFundConnextModelFundOrder) GetAmcOrderReferenceNoOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AmcOrderReferenceNo.Get(), o.AmcOrderReferenceNo.IsSet()
}

// HasAmcOrderReferenceNo returns a boolean if a field has been set.
func (o *PiFinancialClientFundConnextModelFundOrder) HasAmcOrderReferenceNo() bool {
	if o != nil && o.AmcOrderReferenceNo.IsSet() {
		return true
	}

	return false
}

// SetAmcOrderReferenceNo gets a reference to the given NullableString and assigns it to the AmcOrderReferenceNo field.
func (o *PiFinancialClientFundConnextModelFundOrder) SetAmcOrderReferenceNo(v string) {
	o.AmcOrderReferenceNo.Set(&v)
}

// SetAmcOrderReferenceNoNil sets the value for AmcOrderReferenceNo to be an explicit nil
func (o *PiFinancialClientFundConnextModelFundOrder) SetAmcOrderReferenceNoNil() {
	o.AmcOrderReferenceNo.Set(nil)
}

// UnsetAmcOrderReferenceNo ensures that no value is present for AmcOrderReferenceNo, not even an explicit nil
func (o *PiFinancialClientFundConnextModelFundOrder) UnsetAmcOrderReferenceNo() {
	o.AmcOrderReferenceNo.Unset()
}

// GetAllottedUnit returns the AllottedUnit field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiFinancialClientFundConnextModelFundOrder) GetAllottedUnit() float64 {
	if o == nil || IsNil(o.AllottedUnit.Get()) {
		var ret float64
		return ret
	}
	return *o.AllottedUnit.Get()
}

// GetAllottedUnitOk returns a tuple with the AllottedUnit field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiFinancialClientFundConnextModelFundOrder) GetAllottedUnitOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return o.AllottedUnit.Get(), o.AllottedUnit.IsSet()
}

// HasAllottedUnit returns a boolean if a field has been set.
func (o *PiFinancialClientFundConnextModelFundOrder) HasAllottedUnit() bool {
	if o != nil && o.AllottedUnit.IsSet() {
		return true
	}

	return false
}

// SetAllottedUnit gets a reference to the given NullableFloat64 and assigns it to the AllottedUnit field.
func (o *PiFinancialClientFundConnextModelFundOrder) SetAllottedUnit(v float64) {
	o.AllottedUnit.Set(&v)
}

// SetAllottedUnitNil sets the value for AllottedUnit to be an explicit nil
func (o *PiFinancialClientFundConnextModelFundOrder) SetAllottedUnitNil() {
	o.AllottedUnit.Set(nil)
}

// UnsetAllottedUnit ensures that no value is present for AllottedUnit, not even an explicit nil
func (o *PiFinancialClientFundConnextModelFundOrder) UnsetAllottedUnit() {
	o.AllottedUnit.Unset()
}

// GetAllottedAmount returns the AllottedAmount field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiFinancialClientFundConnextModelFundOrder) GetAllottedAmount() float64 {
	if o == nil || IsNil(o.AllottedAmount.Get()) {
		var ret float64
		return ret
	}
	return *o.AllottedAmount.Get()
}

// GetAllottedAmountOk returns a tuple with the AllottedAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiFinancialClientFundConnextModelFundOrder) GetAllottedAmountOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return o.AllottedAmount.Get(), o.AllottedAmount.IsSet()
}

// HasAllottedAmount returns a boolean if a field has been set.
func (o *PiFinancialClientFundConnextModelFundOrder) HasAllottedAmount() bool {
	if o != nil && o.AllottedAmount.IsSet() {
		return true
	}

	return false
}

// SetAllottedAmount gets a reference to the given NullableFloat64 and assigns it to the AllottedAmount field.
func (o *PiFinancialClientFundConnextModelFundOrder) SetAllottedAmount(v float64) {
	o.AllottedAmount.Set(&v)
}

// SetAllottedAmountNil sets the value for AllottedAmount to be an explicit nil
func (o *PiFinancialClientFundConnextModelFundOrder) SetAllottedAmountNil() {
	o.AllottedAmount.Set(nil)
}

// UnsetAllottedAmount ensures that no value is present for AllottedAmount, not even an explicit nil
func (o *PiFinancialClientFundConnextModelFundOrder) UnsetAllottedAmount() {
	o.AllottedAmount.Unset()
}

// GetAllottedNAV returns the AllottedNAV field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiFinancialClientFundConnextModelFundOrder) GetAllottedNAV() float64 {
	if o == nil || IsNil(o.AllottedNAV.Get()) {
		var ret float64
		return ret
	}
	return *o.AllottedNAV.Get()
}

// GetAllottedNAVOk returns a tuple with the AllottedNAV field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiFinancialClientFundConnextModelFundOrder) GetAllottedNAVOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return o.AllottedNAV.Get(), o.AllottedNAV.IsSet()
}

// HasAllottedNAV returns a boolean if a field has been set.
func (o *PiFinancialClientFundConnextModelFundOrder) HasAllottedNAV() bool {
	if o != nil && o.AllottedNAV.IsSet() {
		return true
	}

	return false
}

// SetAllottedNAV gets a reference to the given NullableFloat64 and assigns it to the AllottedNAV field.
func (o *PiFinancialClientFundConnextModelFundOrder) SetAllottedNAV(v float64) {
	o.AllottedNAV.Set(&v)
}

// SetAllottedNAVNil sets the value for AllottedNAV to be an explicit nil
func (o *PiFinancialClientFundConnextModelFundOrder) SetAllottedNAVNil() {
	o.AllottedNAV.Set(nil)
}

// UnsetAllottedNAV ensures that no value is present for AllottedNAV, not even an explicit nil
func (o *PiFinancialClientFundConnextModelFundOrder) UnsetAllottedNAV() {
	o.AllottedNAV.Unset()
}

// GetAllotmentDate returns the AllotmentDate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiFinancialClientFundConnextModelFundOrder) GetAllotmentDate() string {
	if o == nil || IsNil(o.AllotmentDate.Get()) {
		var ret string
		return ret
	}
	return *o.AllotmentDate.Get()
}

// GetAllotmentDateOk returns a tuple with the AllotmentDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiFinancialClientFundConnextModelFundOrder) GetAllotmentDateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AllotmentDate.Get(), o.AllotmentDate.IsSet()
}

// HasAllotmentDate returns a boolean if a field has been set.
func (o *PiFinancialClientFundConnextModelFundOrder) HasAllotmentDate() bool {
	if o != nil && o.AllotmentDate.IsSet() {
		return true
	}

	return false
}

// SetAllotmentDate gets a reference to the given NullableString and assigns it to the AllotmentDate field.
func (o *PiFinancialClientFundConnextModelFundOrder) SetAllotmentDate(v string) {
	o.AllotmentDate.Set(&v)
}

// SetAllotmentDateNil sets the value for AllotmentDate to be an explicit nil
func (o *PiFinancialClientFundConnextModelFundOrder) SetAllotmentDateNil() {
	o.AllotmentDate.Set(nil)
}

// UnsetAllotmentDate ensures that no value is present for AllotmentDate, not even an explicit nil
func (o *PiFinancialClientFundConnextModelFundOrder) UnsetAllotmentDate() {
	o.AllotmentDate.Unset()
}

// GetFee returns the Fee field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiFinancialClientFundConnextModelFundOrder) GetFee() float64 {
	if o == nil || IsNil(o.Fee.Get()) {
		var ret float64
		return ret
	}
	return *o.Fee.Get()
}

// GetFeeOk returns a tuple with the Fee field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiFinancialClientFundConnextModelFundOrder) GetFeeOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return o.Fee.Get(), o.Fee.IsSet()
}

// HasFee returns a boolean if a field has been set.
func (o *PiFinancialClientFundConnextModelFundOrder) HasFee() bool {
	if o != nil && o.Fee.IsSet() {
		return true
	}

	return false
}

// SetFee gets a reference to the given NullableFloat64 and assigns it to the Fee field.
func (o *PiFinancialClientFundConnextModelFundOrder) SetFee(v float64) {
	o.Fee.Set(&v)
}

// SetFeeNil sets the value for Fee to be an explicit nil
func (o *PiFinancialClientFundConnextModelFundOrder) SetFeeNil() {
	o.Fee.Set(nil)
}

// UnsetFee ensures that no value is present for Fee, not even an explicit nil
func (o *PiFinancialClientFundConnextModelFundOrder) UnsetFee() {
	o.Fee.Unset()
}

// GetTransactionLastUpdated returns the TransactionLastUpdated field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiFinancialClientFundConnextModelFundOrder) GetTransactionLastUpdated() string {
	if o == nil || IsNil(o.TransactionLastUpdated.Get()) {
		var ret string
		return ret
	}
	return *o.TransactionLastUpdated.Get()
}

// GetTransactionLastUpdatedOk returns a tuple with the TransactionLastUpdated field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiFinancialClientFundConnextModelFundOrder) GetTransactionLastUpdatedOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TransactionLastUpdated.Get(), o.TransactionLastUpdated.IsSet()
}

// HasTransactionLastUpdated returns a boolean if a field has been set.
func (o *PiFinancialClientFundConnextModelFundOrder) HasTransactionLastUpdated() bool {
	if o != nil && o.TransactionLastUpdated.IsSet() {
		return true
	}

	return false
}

// SetTransactionLastUpdated gets a reference to the given NullableString and assigns it to the TransactionLastUpdated field.
func (o *PiFinancialClientFundConnextModelFundOrder) SetTransactionLastUpdated(v string) {
	o.TransactionLastUpdated.Set(&v)
}

// SetTransactionLastUpdatedNil sets the value for TransactionLastUpdated to be an explicit nil
func (o *PiFinancialClientFundConnextModelFundOrder) SetTransactionLastUpdatedNil() {
	o.TransactionLastUpdated.Set(nil)
}

// UnsetTransactionLastUpdated ensures that no value is present for TransactionLastUpdated, not even an explicit nil
func (o *PiFinancialClientFundConnextModelFundOrder) UnsetTransactionLastUpdated() {
	o.TransactionLastUpdated.Unset()
}

// GetPaymentType returns the PaymentType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiFinancialClientFundConnextModelFundOrder) GetPaymentType() string {
	if o == nil || IsNil(o.PaymentType.Get()) {
		var ret string
		return ret
	}
	return *o.PaymentType.Get()
}

// GetPaymentTypeOk returns a tuple with the PaymentType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiFinancialClientFundConnextModelFundOrder) GetPaymentTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PaymentType.Get(), o.PaymentType.IsSet()
}

// HasPaymentType returns a boolean if a field has been set.
func (o *PiFinancialClientFundConnextModelFundOrder) HasPaymentType() bool {
	if o != nil && o.PaymentType.IsSet() {
		return true
	}

	return false
}

// SetPaymentType gets a reference to the given NullableString and assigns it to the PaymentType field.
func (o *PiFinancialClientFundConnextModelFundOrder) SetPaymentType(v string) {
	o.PaymentType.Set(&v)
}

// SetPaymentTypeNil sets the value for PaymentType to be an explicit nil
func (o *PiFinancialClientFundConnextModelFundOrder) SetPaymentTypeNil() {
	o.PaymentType.Set(nil)
}

// UnsetPaymentType ensures that no value is present for PaymentType, not even an explicit nil
func (o *PiFinancialClientFundConnextModelFundOrder) UnsetPaymentType() {
	o.PaymentType.Unset()
}

// GetBankCode returns the BankCode field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiFinancialClientFundConnextModelFundOrder) GetBankCode() string {
	if o == nil || IsNil(o.BankCode.Get()) {
		var ret string
		return ret
	}
	return *o.BankCode.Get()
}

// GetBankCodeOk returns a tuple with the BankCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiFinancialClientFundConnextModelFundOrder) GetBankCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.BankCode.Get(), o.BankCode.IsSet()
}

// HasBankCode returns a boolean if a field has been set.
func (o *PiFinancialClientFundConnextModelFundOrder) HasBankCode() bool {
	if o != nil && o.BankCode.IsSet() {
		return true
	}

	return false
}

// SetBankCode gets a reference to the given NullableString and assigns it to the BankCode field.
func (o *PiFinancialClientFundConnextModelFundOrder) SetBankCode(v string) {
	o.BankCode.Set(&v)
}

// SetBankCodeNil sets the value for BankCode to be an explicit nil
func (o *PiFinancialClientFundConnextModelFundOrder) SetBankCodeNil() {
	o.BankCode.Set(nil)
}

// UnsetBankCode ensures that no value is present for BankCode, not even an explicit nil
func (o *PiFinancialClientFundConnextModelFundOrder) UnsetBankCode() {
	o.BankCode.Unset()
}

// GetBankAccount returns the BankAccount field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiFinancialClientFundConnextModelFundOrder) GetBankAccount() string {
	if o == nil || IsNil(o.BankAccount.Get()) {
		var ret string
		return ret
	}
	return *o.BankAccount.Get()
}

// GetBankAccountOk returns a tuple with the BankAccount field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiFinancialClientFundConnextModelFundOrder) GetBankAccountOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.BankAccount.Get(), o.BankAccount.IsSet()
}

// HasBankAccount returns a boolean if a field has been set.
func (o *PiFinancialClientFundConnextModelFundOrder) HasBankAccount() bool {
	if o != nil && o.BankAccount.IsSet() {
		return true
	}

	return false
}

// SetBankAccount gets a reference to the given NullableString and assigns it to the BankAccount field.
func (o *PiFinancialClientFundConnextModelFundOrder) SetBankAccount(v string) {
	o.BankAccount.Set(&v)
}

// SetBankAccountNil sets the value for BankAccount to be an explicit nil
func (o *PiFinancialClientFundConnextModelFundOrder) SetBankAccountNil() {
	o.BankAccount.Set(nil)
}

// UnsetBankAccount ensures that no value is present for BankAccount, not even an explicit nil
func (o *PiFinancialClientFundConnextModelFundOrder) UnsetBankAccount() {
	o.BankAccount.Unset()
}

// GetChannel returns the Channel field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiFinancialClientFundConnextModelFundOrder) GetChannel() string {
	if o == nil || IsNil(o.Channel.Get()) {
		var ret string
		return ret
	}
	return *o.Channel.Get()
}

// GetChannelOk returns a tuple with the Channel field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiFinancialClientFundConnextModelFundOrder) GetChannelOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Channel.Get(), o.Channel.IsSet()
}

// HasChannel returns a boolean if a field has been set.
func (o *PiFinancialClientFundConnextModelFundOrder) HasChannel() bool {
	if o != nil && o.Channel.IsSet() {
		return true
	}

	return false
}

// SetChannel gets a reference to the given NullableString and assigns it to the Channel field.
func (o *PiFinancialClientFundConnextModelFundOrder) SetChannel(v string) {
	o.Channel.Set(&v)
}

// SetChannelNil sets the value for Channel to be an explicit nil
func (o *PiFinancialClientFundConnextModelFundOrder) SetChannelNil() {
	o.Channel.Set(nil)
}

// UnsetChannel ensures that no value is present for Channel, not even an explicit nil
func (o *PiFinancialClientFundConnextModelFundOrder) UnsetChannel() {
	o.Channel.Unset()
}

// GetIcLicense returns the IcLicense field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiFinancialClientFundConnextModelFundOrder) GetIcLicense() string {
	if o == nil || IsNil(o.IcLicense.Get()) {
		var ret string
		return ret
	}
	return *o.IcLicense.Get()
}

// GetIcLicenseOk returns a tuple with the IcLicense field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiFinancialClientFundConnextModelFundOrder) GetIcLicenseOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.IcLicense.Get(), o.IcLicense.IsSet()
}

// HasIcLicense returns a boolean if a field has been set.
func (o *PiFinancialClientFundConnextModelFundOrder) HasIcLicense() bool {
	if o != nil && o.IcLicense.IsSet() {
		return true
	}

	return false
}

// SetIcLicense gets a reference to the given NullableString and assigns it to the IcLicense field.
func (o *PiFinancialClientFundConnextModelFundOrder) SetIcLicense(v string) {
	o.IcLicense.Set(&v)
}

// SetIcLicenseNil sets the value for IcLicense to be an explicit nil
func (o *PiFinancialClientFundConnextModelFundOrder) SetIcLicenseNil() {
	o.IcLicense.Set(nil)
}

// UnsetIcLicense ensures that no value is present for IcLicense, not even an explicit nil
func (o *PiFinancialClientFundConnextModelFundOrder) UnsetIcLicense() {
	o.IcLicense.Unset()
}

// GetBranchNo returns the BranchNo field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiFinancialClientFundConnextModelFundOrder) GetBranchNo() string {
	if o == nil || IsNil(o.BranchNo.Get()) {
		var ret string
		return ret
	}
	return *o.BranchNo.Get()
}

// GetBranchNoOk returns a tuple with the BranchNo field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiFinancialClientFundConnextModelFundOrder) GetBranchNoOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.BranchNo.Get(), o.BranchNo.IsSet()
}

// HasBranchNo returns a boolean if a field has been set.
func (o *PiFinancialClientFundConnextModelFundOrder) HasBranchNo() bool {
	if o != nil && o.BranchNo.IsSet() {
		return true
	}

	return false
}

// SetBranchNo gets a reference to the given NullableString and assigns it to the BranchNo field.
func (o *PiFinancialClientFundConnextModelFundOrder) SetBranchNo(v string) {
	o.BranchNo.Set(&v)
}

// SetBranchNoNil sets the value for BranchNo to be an explicit nil
func (o *PiFinancialClientFundConnextModelFundOrder) SetBranchNoNil() {
	o.BranchNo.Set(nil)
}

// UnsetBranchNo ensures that no value is present for BranchNo, not even an explicit nil
func (o *PiFinancialClientFundConnextModelFundOrder) UnsetBranchNo() {
	o.BranchNo.Unset()
}

// GetForceEntry returns the ForceEntry field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiFinancialClientFundConnextModelFundOrder) GetForceEntry() string {
	if o == nil || IsNil(o.ForceEntry.Get()) {
		var ret string
		return ret
	}
	return *o.ForceEntry.Get()
}

// GetForceEntryOk returns a tuple with the ForceEntry field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiFinancialClientFundConnextModelFundOrder) GetForceEntryOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ForceEntry.Get(), o.ForceEntry.IsSet()
}

// HasForceEntry returns a boolean if a field has been set.
func (o *PiFinancialClientFundConnextModelFundOrder) HasForceEntry() bool {
	if o != nil && o.ForceEntry.IsSet() {
		return true
	}

	return false
}

// SetForceEntry gets a reference to the given NullableString and assigns it to the ForceEntry field.
func (o *PiFinancialClientFundConnextModelFundOrder) SetForceEntry(v string) {
	o.ForceEntry.Set(&v)
}

// SetForceEntryNil sets the value for ForceEntry to be an explicit nil
func (o *PiFinancialClientFundConnextModelFundOrder) SetForceEntryNil() {
	o.ForceEntry.Set(nil)
}

// UnsetForceEntry ensures that no value is present for ForceEntry, not even an explicit nil
func (o *PiFinancialClientFundConnextModelFundOrder) UnsetForceEntry() {
	o.ForceEntry.Unset()
}

// GetSettlementBankCode returns the SettlementBankCode field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiFinancialClientFundConnextModelFundOrder) GetSettlementBankCode() string {
	if o == nil || IsNil(o.SettlementBankCode.Get()) {
		var ret string
		return ret
	}
	return *o.SettlementBankCode.Get()
}

// GetSettlementBankCodeOk returns a tuple with the SettlementBankCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiFinancialClientFundConnextModelFundOrder) GetSettlementBankCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SettlementBankCode.Get(), o.SettlementBankCode.IsSet()
}

// HasSettlementBankCode returns a boolean if a field has been set.
func (o *PiFinancialClientFundConnextModelFundOrder) HasSettlementBankCode() bool {
	if o != nil && o.SettlementBankCode.IsSet() {
		return true
	}

	return false
}

// SetSettlementBankCode gets a reference to the given NullableString and assigns it to the SettlementBankCode field.
func (o *PiFinancialClientFundConnextModelFundOrder) SetSettlementBankCode(v string) {
	o.SettlementBankCode.Set(&v)
}

// SetSettlementBankCodeNil sets the value for SettlementBankCode to be an explicit nil
func (o *PiFinancialClientFundConnextModelFundOrder) SetSettlementBankCodeNil() {
	o.SettlementBankCode.Set(nil)
}

// UnsetSettlementBankCode ensures that no value is present for SettlementBankCode, not even an explicit nil
func (o *PiFinancialClientFundConnextModelFundOrder) UnsetSettlementBankCode() {
	o.SettlementBankCode.Unset()
}

// GetSettlementBankAccount returns the SettlementBankAccount field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiFinancialClientFundConnextModelFundOrder) GetSettlementBankAccount() string {
	if o == nil || IsNil(o.SettlementBankAccount.Get()) {
		var ret string
		return ret
	}
	return *o.SettlementBankAccount.Get()
}

// GetSettlementBankAccountOk returns a tuple with the SettlementBankAccount field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiFinancialClientFundConnextModelFundOrder) GetSettlementBankAccountOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SettlementBankAccount.Get(), o.SettlementBankAccount.IsSet()
}

// HasSettlementBankAccount returns a boolean if a field has been set.
func (o *PiFinancialClientFundConnextModelFundOrder) HasSettlementBankAccount() bool {
	if o != nil && o.SettlementBankAccount.IsSet() {
		return true
	}

	return false
}

// SetSettlementBankAccount gets a reference to the given NullableString and assigns it to the SettlementBankAccount field.
func (o *PiFinancialClientFundConnextModelFundOrder) SetSettlementBankAccount(v string) {
	o.SettlementBankAccount.Set(&v)
}

// SetSettlementBankAccountNil sets the value for SettlementBankAccount to be an explicit nil
func (o *PiFinancialClientFundConnextModelFundOrder) SetSettlementBankAccountNil() {
	o.SettlementBankAccount.Set(nil)
}

// UnsetSettlementBankAccount ensures that no value is present for SettlementBankAccount, not even an explicit nil
func (o *PiFinancialClientFundConnextModelFundOrder) UnsetSettlementBankAccount() {
	o.SettlementBankAccount.Unset()
}

// GetChqBranch returns the ChqBranch field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiFinancialClientFundConnextModelFundOrder) GetChqBranch() string {
	if o == nil || IsNil(o.ChqBranch.Get()) {
		var ret string
		return ret
	}
	return *o.ChqBranch.Get()
}

// GetChqBranchOk returns a tuple with the ChqBranch field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiFinancialClientFundConnextModelFundOrder) GetChqBranchOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ChqBranch.Get(), o.ChqBranch.IsSet()
}

// HasChqBranch returns a boolean if a field has been set.
func (o *PiFinancialClientFundConnextModelFundOrder) HasChqBranch() bool {
	if o != nil && o.ChqBranch.IsSet() {
		return true
	}

	return false
}

// SetChqBranch gets a reference to the given NullableString and assigns it to the ChqBranch field.
func (o *PiFinancialClientFundConnextModelFundOrder) SetChqBranch(v string) {
	o.ChqBranch.Set(&v)
}

// SetChqBranchNil sets the value for ChqBranch to be an explicit nil
func (o *PiFinancialClientFundConnextModelFundOrder) SetChqBranchNil() {
	o.ChqBranch.Set(nil)
}

// UnsetChqBranch ensures that no value is present for ChqBranch, not even an explicit nil
func (o *PiFinancialClientFundConnextModelFundOrder) UnsetChqBranch() {
	o.ChqBranch.Unset()
}

// GetRejectReason returns the RejectReason field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiFinancialClientFundConnextModelFundOrder) GetRejectReason() string {
	if o == nil || IsNil(o.RejectReason.Get()) {
		var ret string
		return ret
	}
	return *o.RejectReason.Get()
}

// GetRejectReasonOk returns a tuple with the RejectReason field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiFinancialClientFundConnextModelFundOrder) GetRejectReasonOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.RejectReason.Get(), o.RejectReason.IsSet()
}

// HasRejectReason returns a boolean if a field has been set.
func (o *PiFinancialClientFundConnextModelFundOrder) HasRejectReason() bool {
	if o != nil && o.RejectReason.IsSet() {
		return true
	}

	return false
}

// SetRejectReason gets a reference to the given NullableString and assigns it to the RejectReason field.
func (o *PiFinancialClientFundConnextModelFundOrder) SetRejectReason(v string) {
	o.RejectReason.Set(&v)
}

// SetRejectReasonNil sets the value for RejectReason to be an explicit nil
func (o *PiFinancialClientFundConnextModelFundOrder) SetRejectReasonNil() {
	o.RejectReason.Set(nil)
}

// UnsetRejectReason ensures that no value is present for RejectReason, not even an explicit nil
func (o *PiFinancialClientFundConnextModelFundOrder) UnsetRejectReason() {
	o.RejectReason.Unset()
}

// GetNavDate returns the NavDate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiFinancialClientFundConnextModelFundOrder) GetNavDate() string {
	if o == nil || IsNil(o.NavDate.Get()) {
		var ret string
		return ret
	}
	return *o.NavDate.Get()
}

// GetNavDateOk returns a tuple with the NavDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiFinancialClientFundConnextModelFundOrder) GetNavDateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.NavDate.Get(), o.NavDate.IsSet()
}

// HasNavDate returns a boolean if a field has been set.
func (o *PiFinancialClientFundConnextModelFundOrder) HasNavDate() bool {
	if o != nil && o.NavDate.IsSet() {
		return true
	}

	return false
}

// SetNavDate gets a reference to the given NullableString and assigns it to the NavDate field.
func (o *PiFinancialClientFundConnextModelFundOrder) SetNavDate(v string) {
	o.NavDate.Set(&v)
}

// SetNavDateNil sets the value for NavDate to be an explicit nil
func (o *PiFinancialClientFundConnextModelFundOrder) SetNavDateNil() {
	o.NavDate.Set(nil)
}

// UnsetNavDate ensures that no value is present for NavDate, not even an explicit nil
func (o *PiFinancialClientFundConnextModelFundOrder) UnsetNavDate() {
	o.NavDate.Unset()
}

// GetCollateralAccount returns the CollateralAccount field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiFinancialClientFundConnextModelFundOrder) GetCollateralAccount() string {
	if o == nil || IsNil(o.CollateralAccount.Get()) {
		var ret string
		return ret
	}
	return *o.CollateralAccount.Get()
}

// GetCollateralAccountOk returns a tuple with the CollateralAccount field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiFinancialClientFundConnextModelFundOrder) GetCollateralAccountOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CollateralAccount.Get(), o.CollateralAccount.IsSet()
}

// HasCollateralAccount returns a boolean if a field has been set.
func (o *PiFinancialClientFundConnextModelFundOrder) HasCollateralAccount() bool {
	if o != nil && o.CollateralAccount.IsSet() {
		return true
	}

	return false
}

// SetCollateralAccount gets a reference to the given NullableString and assigns it to the CollateralAccount field.
func (o *PiFinancialClientFundConnextModelFundOrder) SetCollateralAccount(v string) {
	o.CollateralAccount.Set(&v)
}

// SetCollateralAccountNil sets the value for CollateralAccount to be an explicit nil
func (o *PiFinancialClientFundConnextModelFundOrder) SetCollateralAccountNil() {
	o.CollateralAccount.Set(nil)
}

// UnsetCollateralAccount ensures that no value is present for CollateralAccount, not even an explicit nil
func (o *PiFinancialClientFundConnextModelFundOrder) UnsetCollateralAccount() {
	o.CollateralAccount.Unset()
}

// GetAccountType returns the AccountType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiFinancialClientFundConnextModelFundOrder) GetAccountType() string {
	if o == nil || IsNil(o.AccountType.Get()) {
		var ret string
		return ret
	}
	return *o.AccountType.Get()
}

// GetAccountTypeOk returns a tuple with the AccountType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiFinancialClientFundConnextModelFundOrder) GetAccountTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AccountType.Get(), o.AccountType.IsSet()
}

// HasAccountType returns a boolean if a field has been set.
func (o *PiFinancialClientFundConnextModelFundOrder) HasAccountType() bool {
	if o != nil && o.AccountType.IsSet() {
		return true
	}

	return false
}

// SetAccountType gets a reference to the given NullableString and assigns it to the AccountType field.
func (o *PiFinancialClientFundConnextModelFundOrder) SetAccountType(v string) {
	o.AccountType.Set(&v)
}

// SetAccountTypeNil sets the value for AccountType to be an explicit nil
func (o *PiFinancialClientFundConnextModelFundOrder) SetAccountTypeNil() {
	o.AccountType.Set(nil)
}

// UnsetAccountType ensures that no value is present for AccountType, not even an explicit nil
func (o *PiFinancialClientFundConnextModelFundOrder) UnsetAccountType() {
	o.AccountType.Unset()
}

// GetRecurringOrderId returns the RecurringOrderId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiFinancialClientFundConnextModelFundOrder) GetRecurringOrderId() string {
	if o == nil || IsNil(o.RecurringOrderId.Get()) {
		var ret string
		return ret
	}
	return *o.RecurringOrderId.Get()
}

// GetRecurringOrderIdOk returns a tuple with the RecurringOrderId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiFinancialClientFundConnextModelFundOrder) GetRecurringOrderIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.RecurringOrderId.Get(), o.RecurringOrderId.IsSet()
}

// HasRecurringOrderId returns a boolean if a field has been set.
func (o *PiFinancialClientFundConnextModelFundOrder) HasRecurringOrderId() bool {
	if o != nil && o.RecurringOrderId.IsSet() {
		return true
	}

	return false
}

// SetRecurringOrderId gets a reference to the given NullableString and assigns it to the RecurringOrderId field.
func (o *PiFinancialClientFundConnextModelFundOrder) SetRecurringOrderId(v string) {
	o.RecurringOrderId.Set(&v)
}

// SetRecurringOrderIdNil sets the value for RecurringOrderId to be an explicit nil
func (o *PiFinancialClientFundConnextModelFundOrder) SetRecurringOrderIdNil() {
	o.RecurringOrderId.Set(nil)
}

// UnsetRecurringOrderId ensures that no value is present for RecurringOrderId, not even an explicit nil
func (o *PiFinancialClientFundConnextModelFundOrder) UnsetRecurringOrderId() {
	o.RecurringOrderId.Unset()
}

// GetPaymentStatus returns the PaymentStatus field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiFinancialClientFundConnextModelFundOrder) GetPaymentStatus() string {
	if o == nil || IsNil(o.PaymentStatus.Get()) {
		var ret string
		return ret
	}
	return *o.PaymentStatus.Get()
}

// GetPaymentStatusOk returns a tuple with the PaymentStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiFinancialClientFundConnextModelFundOrder) GetPaymentStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PaymentStatus.Get(), o.PaymentStatus.IsSet()
}

// HasPaymentStatus returns a boolean if a field has been set.
func (o *PiFinancialClientFundConnextModelFundOrder) HasPaymentStatus() bool {
	if o != nil && o.PaymentStatus.IsSet() {
		return true
	}

	return false
}

// SetPaymentStatus gets a reference to the given NullableString and assigns it to the PaymentStatus field.
func (o *PiFinancialClientFundConnextModelFundOrder) SetPaymentStatus(v string) {
	o.PaymentStatus.Set(&v)
}

// SetPaymentStatusNil sets the value for PaymentStatus to be an explicit nil
func (o *PiFinancialClientFundConnextModelFundOrder) SetPaymentStatusNil() {
	o.PaymentStatus.Set(nil)
}

// UnsetPaymentStatus ensures that no value is present for PaymentStatus, not even an explicit nil
func (o *PiFinancialClientFundConnextModelFundOrder) UnsetPaymentStatus() {
	o.PaymentStatus.Unset()
}

// GetPaymentProcessingType returns the PaymentProcessingType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiFinancialClientFundConnextModelFundOrder) GetPaymentProcessingType() string {
	if o == nil || IsNil(o.PaymentProcessingType.Get()) {
		var ret string
		return ret
	}
	return *o.PaymentProcessingType.Get()
}

// GetPaymentProcessingTypeOk returns a tuple with the PaymentProcessingType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiFinancialClientFundConnextModelFundOrder) GetPaymentProcessingTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PaymentProcessingType.Get(), o.PaymentProcessingType.IsSet()
}

// HasPaymentProcessingType returns a boolean if a field has been set.
func (o *PiFinancialClientFundConnextModelFundOrder) HasPaymentProcessingType() bool {
	if o != nil && o.PaymentProcessingType.IsSet() {
		return true
	}

	return false
}

// SetPaymentProcessingType gets a reference to the given NullableString and assigns it to the PaymentProcessingType field.
func (o *PiFinancialClientFundConnextModelFundOrder) SetPaymentProcessingType(v string) {
	o.PaymentProcessingType.Set(&v)
}

// SetPaymentProcessingTypeNil sets the value for PaymentProcessingType to be an explicit nil
func (o *PiFinancialClientFundConnextModelFundOrder) SetPaymentProcessingTypeNil() {
	o.PaymentProcessingType.Set(nil)
}

// UnsetPaymentProcessingType ensures that no value is present for PaymentProcessingType, not even an explicit nil
func (o *PiFinancialClientFundConnextModelFundOrder) UnsetPaymentProcessingType() {
	o.PaymentProcessingType.Unset()
}

// GetSaRecurringOrderRefNo returns the SaRecurringOrderRefNo field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiFinancialClientFundConnextModelFundOrder) GetSaRecurringOrderRefNo() string {
	if o == nil || IsNil(o.SaRecurringOrderRefNo.Get()) {
		var ret string
		return ret
	}
	return *o.SaRecurringOrderRefNo.Get()
}

// GetSaRecurringOrderRefNoOk returns a tuple with the SaRecurringOrderRefNo field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiFinancialClientFundConnextModelFundOrder) GetSaRecurringOrderRefNoOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SaRecurringOrderRefNo.Get(), o.SaRecurringOrderRefNo.IsSet()
}

// HasSaRecurringOrderRefNo returns a boolean if a field has been set.
func (o *PiFinancialClientFundConnextModelFundOrder) HasSaRecurringOrderRefNo() bool {
	if o != nil && o.SaRecurringOrderRefNo.IsSet() {
		return true
	}

	return false
}

// SetSaRecurringOrderRefNo gets a reference to the given NullableString and assigns it to the SaRecurringOrderRefNo field.
func (o *PiFinancialClientFundConnextModelFundOrder) SetSaRecurringOrderRefNo(v string) {
	o.SaRecurringOrderRefNo.Set(&v)
}

// SetSaRecurringOrderRefNoNil sets the value for SaRecurringOrderRefNo to be an explicit nil
func (o *PiFinancialClientFundConnextModelFundOrder) SetSaRecurringOrderRefNoNil() {
	o.SaRecurringOrderRefNo.Set(nil)
}

// UnsetSaRecurringOrderRefNo ensures that no value is present for SaRecurringOrderRefNo, not even an explicit nil
func (o *PiFinancialClientFundConnextModelFundOrder) UnsetSaRecurringOrderRefNo() {
	o.SaRecurringOrderRefNo.Unset()
}

// GetCrcApprovalCode returns the CrcApprovalCode field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiFinancialClientFundConnextModelFundOrder) GetCrcApprovalCode() string {
	if o == nil || IsNil(o.CrcApprovalCode.Get()) {
		var ret string
		return ret
	}
	return *o.CrcApprovalCode.Get()
}

// GetCrcApprovalCodeOk returns a tuple with the CrcApprovalCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiFinancialClientFundConnextModelFundOrder) GetCrcApprovalCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CrcApprovalCode.Get(), o.CrcApprovalCode.IsSet()
}

// HasCrcApprovalCode returns a boolean if a field has been set.
func (o *PiFinancialClientFundConnextModelFundOrder) HasCrcApprovalCode() bool {
	if o != nil && o.CrcApprovalCode.IsSet() {
		return true
	}

	return false
}

// SetCrcApprovalCode gets a reference to the given NullableString and assigns it to the CrcApprovalCode field.
func (o *PiFinancialClientFundConnextModelFundOrder) SetCrcApprovalCode(v string) {
	o.CrcApprovalCode.Set(&v)
}

// SetCrcApprovalCodeNil sets the value for CrcApprovalCode to be an explicit nil
func (o *PiFinancialClientFundConnextModelFundOrder) SetCrcApprovalCodeNil() {
	o.CrcApprovalCode.Set(nil)
}

// UnsetCrcApprovalCode ensures that no value is present for CrcApprovalCode, not even an explicit nil
func (o *PiFinancialClientFundConnextModelFundOrder) UnsetCrcApprovalCode() {
	o.CrcApprovalCode.Unset()
}

// GetPointCode returns the PointCode field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiFinancialClientFundConnextModelFundOrder) GetPointCode() string {
	if o == nil || IsNil(o.PointCode.Get()) {
		var ret string
		return ret
	}
	return *o.PointCode.Get()
}

// GetPointCodeOk returns a tuple with the PointCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiFinancialClientFundConnextModelFundOrder) GetPointCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PointCode.Get(), o.PointCode.IsSet()
}

// HasPointCode returns a boolean if a field has been set.
func (o *PiFinancialClientFundConnextModelFundOrder) HasPointCode() bool {
	if o != nil && o.PointCode.IsSet() {
		return true
	}

	return false
}

// SetPointCode gets a reference to the given NullableString and assigns it to the PointCode field.
func (o *PiFinancialClientFundConnextModelFundOrder) SetPointCode(v string) {
	o.PointCode.Set(&v)
}

// SetPointCodeNil sets the value for PointCode to be an explicit nil
func (o *PiFinancialClientFundConnextModelFundOrder) SetPointCodeNil() {
	o.PointCode.Set(nil)
}

// UnsetPointCode ensures that no value is present for PointCode, not even an explicit nil
func (o *PiFinancialClientFundConnextModelFundOrder) UnsetPointCode() {
	o.PointCode.Unset()
}

// GetCounterUnitholderId returns the CounterUnitholderId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiFinancialClientFundConnextModelFundOrder) GetCounterUnitholderId() string {
	if o == nil || IsNil(o.CounterUnitholderId.Get()) {
		var ret string
		return ret
	}
	return *o.CounterUnitholderId.Get()
}

// GetCounterUnitholderIdOk returns a tuple with the CounterUnitholderId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiFinancialClientFundConnextModelFundOrder) GetCounterUnitholderIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CounterUnitholderId.Get(), o.CounterUnitholderId.IsSet()
}

// HasCounterUnitholderId returns a boolean if a field has been set.
func (o *PiFinancialClientFundConnextModelFundOrder) HasCounterUnitholderId() bool {
	if o != nil && o.CounterUnitholderId.IsSet() {
		return true
	}

	return false
}

// SetCounterUnitholderId gets a reference to the given NullableString and assigns it to the CounterUnitholderId field.
func (o *PiFinancialClientFundConnextModelFundOrder) SetCounterUnitholderId(v string) {
	o.CounterUnitholderId.Set(&v)
}

// SetCounterUnitholderIdNil sets the value for CounterUnitholderId to be an explicit nil
func (o *PiFinancialClientFundConnextModelFundOrder) SetCounterUnitholderIdNil() {
	o.CounterUnitholderId.Set(nil)
}

// UnsetCounterUnitholderId ensures that no value is present for CounterUnitholderId, not even an explicit nil
func (o *PiFinancialClientFundConnextModelFundOrder) UnsetCounterUnitholderId() {
	o.CounterUnitholderId.Unset()
}

// GetCounterFundCode returns the CounterFundCode field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiFinancialClientFundConnextModelFundOrder) GetCounterFundCode() string {
	if o == nil || IsNil(o.CounterFundCode.Get()) {
		var ret string
		return ret
	}
	return *o.CounterFundCode.Get()
}

// GetCounterFundCodeOk returns a tuple with the CounterFundCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiFinancialClientFundConnextModelFundOrder) GetCounterFundCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CounterFundCode.Get(), o.CounterFundCode.IsSet()
}

// HasCounterFundCode returns a boolean if a field has been set.
func (o *PiFinancialClientFundConnextModelFundOrder) HasCounterFundCode() bool {
	if o != nil && o.CounterFundCode.IsSet() {
		return true
	}

	return false
}

// SetCounterFundCode gets a reference to the given NullableString and assigns it to the CounterFundCode field.
func (o *PiFinancialClientFundConnextModelFundOrder) SetCounterFundCode(v string) {
	o.CounterFundCode.Set(&v)
}

// SetCounterFundCodeNil sets the value for CounterFundCode to be an explicit nil
func (o *PiFinancialClientFundConnextModelFundOrder) SetCounterFundCodeNil() {
	o.CounterFundCode.Set(nil)
}

// UnsetCounterFundCode ensures that no value is present for CounterFundCode, not even an explicit nil
func (o *PiFinancialClientFundConnextModelFundOrder) UnsetCounterFundCode() {
	o.CounterFundCode.Unset()
}

// GetXwtReferenceNo returns the XwtReferenceNo field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiFinancialClientFundConnextModelFundOrder) GetXwtReferenceNo() string {
	if o == nil || IsNil(o.XwtReferenceNo.Get()) {
		var ret string
		return ret
	}
	return *o.XwtReferenceNo.Get()
}

// GetXwtReferenceNoOk returns a tuple with the XwtReferenceNo field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiFinancialClientFundConnextModelFundOrder) GetXwtReferenceNoOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.XwtReferenceNo.Get(), o.XwtReferenceNo.IsSet()
}

// HasXwtReferenceNo returns a boolean if a field has been set.
func (o *PiFinancialClientFundConnextModelFundOrder) HasXwtReferenceNo() bool {
	if o != nil && o.XwtReferenceNo.IsSet() {
		return true
	}

	return false
}

// SetXwtReferenceNo gets a reference to the given NullableString and assigns it to the XwtReferenceNo field.
func (o *PiFinancialClientFundConnextModelFundOrder) SetXwtReferenceNo(v string) {
	o.XwtReferenceNo.Set(&v)
}

// SetXwtReferenceNoNil sets the value for XwtReferenceNo to be an explicit nil
func (o *PiFinancialClientFundConnextModelFundOrder) SetXwtReferenceNoNil() {
	o.XwtReferenceNo.Set(nil)
}

// UnsetXwtReferenceNo ensures that no value is present for XwtReferenceNo, not even an explicit nil
func (o *PiFinancialClientFundConnextModelFundOrder) UnsetXwtReferenceNo() {
	o.XwtReferenceNo.Unset()
}

// GetOriginalTransactionId returns the OriginalTransactionId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiFinancialClientFundConnextModelFundOrder) GetOriginalTransactionId() string {
	if o == nil || IsNil(o.OriginalTransactionId.Get()) {
		var ret string
		return ret
	}
	return *o.OriginalTransactionId.Get()
}

// GetOriginalTransactionIdOk returns a tuple with the OriginalTransactionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiFinancialClientFundConnextModelFundOrder) GetOriginalTransactionIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.OriginalTransactionId.Get(), o.OriginalTransactionId.IsSet()
}

// HasOriginalTransactionId returns a boolean if a field has been set.
func (o *PiFinancialClientFundConnextModelFundOrder) HasOriginalTransactionId() bool {
	if o != nil && o.OriginalTransactionId.IsSet() {
		return true
	}

	return false
}

// SetOriginalTransactionId gets a reference to the given NullableString and assigns it to the OriginalTransactionId field.
func (o *PiFinancialClientFundConnextModelFundOrder) SetOriginalTransactionId(v string) {
	o.OriginalTransactionId.Set(&v)
}

// SetOriginalTransactionIdNil sets the value for OriginalTransactionId to be an explicit nil
func (o *PiFinancialClientFundConnextModelFundOrder) SetOriginalTransactionIdNil() {
	o.OriginalTransactionId.Set(nil)
}

// UnsetOriginalTransactionId ensures that no value is present for OriginalTransactionId, not even an explicit nil
func (o *PiFinancialClientFundConnextModelFundOrder) UnsetOriginalTransactionId() {
	o.OriginalTransactionId.Unset()
}

// GetLmtsAdlsFee returns the LmtsAdlsFee field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiFinancialClientFundConnextModelFundOrder) GetLmtsAdlsFee() string {
	if o == nil || IsNil(o.LmtsAdlsFee.Get()) {
		var ret string
		return ret
	}
	return *o.LmtsAdlsFee.Get()
}

// GetLmtsAdlsFeeOk returns a tuple with the LmtsAdlsFee field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiFinancialClientFundConnextModelFundOrder) GetLmtsAdlsFeeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.LmtsAdlsFee.Get(), o.LmtsAdlsFee.IsSet()
}

// HasLmtsAdlsFee returns a boolean if a field has been set.
func (o *PiFinancialClientFundConnextModelFundOrder) HasLmtsAdlsFee() bool {
	if o != nil && o.LmtsAdlsFee.IsSet() {
		return true
	}

	return false
}

// SetLmtsAdlsFee gets a reference to the given NullableString and assigns it to the LmtsAdlsFee field.
func (o *PiFinancialClientFundConnextModelFundOrder) SetLmtsAdlsFee(v string) {
	o.LmtsAdlsFee.Set(&v)
}

// SetLmtsAdlsFeeNil sets the value for LmtsAdlsFee to be an explicit nil
func (o *PiFinancialClientFundConnextModelFundOrder) SetLmtsAdlsFeeNil() {
	o.LmtsAdlsFee.Set(nil)
}

// UnsetLmtsAdlsFee ensures that no value is present for LmtsAdlsFee, not even an explicit nil
func (o *PiFinancialClientFundConnextModelFundOrder) UnsetLmtsAdlsFee() {
	o.LmtsAdlsFee.Unset()
}

// GetLmtsLiquidityFee returns the LmtsLiquidityFee field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiFinancialClientFundConnextModelFundOrder) GetLmtsLiquidityFee() string {
	if o == nil || IsNil(o.LmtsLiquidityFee.Get()) {
		var ret string
		return ret
	}
	return *o.LmtsLiquidityFee.Get()
}

// GetLmtsLiquidityFeeOk returns a tuple with the LmtsLiquidityFee field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiFinancialClientFundConnextModelFundOrder) GetLmtsLiquidityFeeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.LmtsLiquidityFee.Get(), o.LmtsLiquidityFee.IsSet()
}

// HasLmtsLiquidityFee returns a boolean if a field has been set.
func (o *PiFinancialClientFundConnextModelFundOrder) HasLmtsLiquidityFee() bool {
	if o != nil && o.LmtsLiquidityFee.IsSet() {
		return true
	}

	return false
}

// SetLmtsLiquidityFee gets a reference to the given NullableString and assigns it to the LmtsLiquidityFee field.
func (o *PiFinancialClientFundConnextModelFundOrder) SetLmtsLiquidityFee(v string) {
	o.LmtsLiquidityFee.Set(&v)
}

// SetLmtsLiquidityFeeNil sets the value for LmtsLiquidityFee to be an explicit nil
func (o *PiFinancialClientFundConnextModelFundOrder) SetLmtsLiquidityFeeNil() {
	o.LmtsLiquidityFee.Set(nil)
}

// UnsetLmtsLiquidityFee ensures that no value is present for LmtsLiquidityFee, not even an explicit nil
func (o *PiFinancialClientFundConnextModelFundOrder) UnsetLmtsLiquidityFee() {
	o.LmtsLiquidityFee.Unset()
}

func (o PiFinancialClientFundConnextModelFundOrder) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PiFinancialClientFundConnextModelFundOrder) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.SellAllUnitFlag.IsSet() {
		toSerialize["sellAllUnitFlag"] = o.SellAllUnitFlag.Get()
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if o.TransactionId.IsSet() {
		toSerialize["transactionId"] = o.TransactionId.Get()
	}
	if o.SaOrderReferenceNo.IsSet() {
		toSerialize["saOrderReferenceNo"] = o.SaOrderReferenceNo.Get()
	}
	if o.OrderType.IsSet() {
		toSerialize["orderType"] = o.OrderType.Get()
	}
	if o.AccountId.IsSet() {
		toSerialize["accountId"] = o.AccountId.Get()
	}
	if o.UnitholderId.IsSet() {
		toSerialize["unitholderId"] = o.UnitholderId.Get()
	}
	if o.FundCode.IsSet() {
		toSerialize["fundCode"] = o.FundCode.Get()
	}
	if o.RedemptionType.IsSet() {
		toSerialize["redemptionType"] = o.RedemptionType.Get()
	}
	if o.Unit.IsSet() {
		toSerialize["unit"] = o.Unit.Get()
	}
	if o.Amount.IsSet() {
		toSerialize["amount"] = o.Amount.Get()
	}
	if o.TransactionDateTime.IsSet() {
		toSerialize["transactionDateTime"] = o.TransactionDateTime.Get()
	}
	if o.EffectiveDate.IsSet() {
		toSerialize["effectiveDate"] = o.EffectiveDate.Get()
	}
	if o.SettlementDate.IsSet() {
		toSerialize["settlementDate"] = o.SettlementDate.Get()
	}
	if o.AmcOrderReferenceNo.IsSet() {
		toSerialize["amcOrderReferenceNo"] = o.AmcOrderReferenceNo.Get()
	}
	if o.AllottedUnit.IsSet() {
		toSerialize["allottedUnit"] = o.AllottedUnit.Get()
	}
	if o.AllottedAmount.IsSet() {
		toSerialize["allottedAmount"] = o.AllottedAmount.Get()
	}
	if o.AllottedNAV.IsSet() {
		toSerialize["allottedNAV"] = o.AllottedNAV.Get()
	}
	if o.AllotmentDate.IsSet() {
		toSerialize["allotmentDate"] = o.AllotmentDate.Get()
	}
	if o.Fee.IsSet() {
		toSerialize["fee"] = o.Fee.Get()
	}
	if o.TransactionLastUpdated.IsSet() {
		toSerialize["transactionLastUpdated"] = o.TransactionLastUpdated.Get()
	}
	if o.PaymentType.IsSet() {
		toSerialize["paymentType"] = o.PaymentType.Get()
	}
	if o.BankCode.IsSet() {
		toSerialize["bankCode"] = o.BankCode.Get()
	}
	if o.BankAccount.IsSet() {
		toSerialize["bankAccount"] = o.BankAccount.Get()
	}
	if o.Channel.IsSet() {
		toSerialize["channel"] = o.Channel.Get()
	}
	if o.IcLicense.IsSet() {
		toSerialize["icLicense"] = o.IcLicense.Get()
	}
	if o.BranchNo.IsSet() {
		toSerialize["branchNo"] = o.BranchNo.Get()
	}
	if o.ForceEntry.IsSet() {
		toSerialize["forceEntry"] = o.ForceEntry.Get()
	}
	if o.SettlementBankCode.IsSet() {
		toSerialize["settlementBankCode"] = o.SettlementBankCode.Get()
	}
	if o.SettlementBankAccount.IsSet() {
		toSerialize["settlementBankAccount"] = o.SettlementBankAccount.Get()
	}
	if o.ChqBranch.IsSet() {
		toSerialize["chqBranch"] = o.ChqBranch.Get()
	}
	if o.RejectReason.IsSet() {
		toSerialize["rejectReason"] = o.RejectReason.Get()
	}
	if o.NavDate.IsSet() {
		toSerialize["navDate"] = o.NavDate.Get()
	}
	if o.CollateralAccount.IsSet() {
		toSerialize["collateralAccount"] = o.CollateralAccount.Get()
	}
	if o.AccountType.IsSet() {
		toSerialize["accountType"] = o.AccountType.Get()
	}
	if o.RecurringOrderId.IsSet() {
		toSerialize["recurringOrderId"] = o.RecurringOrderId.Get()
	}
	if o.PaymentStatus.IsSet() {
		toSerialize["paymentStatus"] = o.PaymentStatus.Get()
	}
	if o.PaymentProcessingType.IsSet() {
		toSerialize["paymentProcessingType"] = o.PaymentProcessingType.Get()
	}
	if o.SaRecurringOrderRefNo.IsSet() {
		toSerialize["saRecurringOrderRefNo"] = o.SaRecurringOrderRefNo.Get()
	}
	if o.CrcApprovalCode.IsSet() {
		toSerialize["crcApprovalCode"] = o.CrcApprovalCode.Get()
	}
	if o.PointCode.IsSet() {
		toSerialize["pointCode"] = o.PointCode.Get()
	}
	if o.CounterUnitholderId.IsSet() {
		toSerialize["counterUnitholderId"] = o.CounterUnitholderId.Get()
	}
	if o.CounterFundCode.IsSet() {
		toSerialize["counterFundCode"] = o.CounterFundCode.Get()
	}
	if o.XwtReferenceNo.IsSet() {
		toSerialize["xwtReferenceNo"] = o.XwtReferenceNo.Get()
	}
	if o.OriginalTransactionId.IsSet() {
		toSerialize["originalTransactionId"] = o.OriginalTransactionId.Get()
	}
	if o.LmtsAdlsFee.IsSet() {
		toSerialize["lmtsAdlsFee"] = o.LmtsAdlsFee.Get()
	}
	if o.LmtsLiquidityFee.IsSet() {
		toSerialize["lmtsLiquidityFee"] = o.LmtsLiquidityFee.Get()
	}
	return toSerialize, nil
}

type NullablePiFinancialClientFundConnextModelFundOrder struct {
	value *PiFinancialClientFundConnextModelFundOrder
	isSet bool
}

func (v NullablePiFinancialClientFundConnextModelFundOrder) Get() *PiFinancialClientFundConnextModelFundOrder {
	return v.value
}

func (v *NullablePiFinancialClientFundConnextModelFundOrder) Set(val *PiFinancialClientFundConnextModelFundOrder) {
	v.value = val
	v.isSet = true
}

func (v NullablePiFinancialClientFundConnextModelFundOrder) IsSet() bool {
	return v.isSet
}

func (v *NullablePiFinancialClientFundConnextModelFundOrder) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePiFinancialClientFundConnextModelFundOrder(val *PiFinancialClientFundConnextModelFundOrder) *NullablePiFinancialClientFundConnextModelFundOrder {
	return &NullablePiFinancialClientFundConnextModelFundOrder{value: val, isSet: true}
}

func (v NullablePiFinancialClientFundConnextModelFundOrder) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePiFinancialClientFundConnextModelFundOrder) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
