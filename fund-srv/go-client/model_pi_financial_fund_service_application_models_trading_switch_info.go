/*
Pi.Financial.FundService.API, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package go_client

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the PiFinancialFundServiceApplicationModelsTradingSwitchInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PiFinancialFundServiceApplicationModelsTradingSwitchInfo{}

// PiFinancialFundServiceApplicationModelsTradingSwitchInfo struct for PiFinancialFundServiceApplicationModelsTradingSwitchInfo
type PiFinancialFundServiceApplicationModelsTradingSwitchInfo struct {
	MinSwitchUnit   float64 `json:"minSwitchUnit"`
	MinSwitchAmount float64 `json:"minSwitchAmount"`
}

type _PiFinancialFundServiceApplicationModelsTradingSwitchInfo PiFinancialFundServiceApplicationModelsTradingSwitchInfo

// NewPiFinancialFundServiceApplicationModelsTradingSwitchInfo instantiates a new PiFinancialFundServiceApplicationModelsTradingSwitchInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPiFinancialFundServiceApplicationModelsTradingSwitchInfo(minSwitchUnit float64, minSwitchAmount float64) *PiFinancialFundServiceApplicationModelsTradingSwitchInfo {
	this := PiFinancialFundServiceApplicationModelsTradingSwitchInfo{}
	this.MinSwitchUnit = minSwitchUnit
	this.MinSwitchAmount = minSwitchAmount
	return &this
}

// NewPiFinancialFundServiceApplicationModelsTradingSwitchInfoWithDefaults instantiates a new PiFinancialFundServiceApplicationModelsTradingSwitchInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPiFinancialFundServiceApplicationModelsTradingSwitchInfoWithDefaults() *PiFinancialFundServiceApplicationModelsTradingSwitchInfo {
	this := PiFinancialFundServiceApplicationModelsTradingSwitchInfo{}
	return &this
}

// GetMinSwitchUnit returns the MinSwitchUnit field value
func (o *PiFinancialFundServiceApplicationModelsTradingSwitchInfo) GetMinSwitchUnit() float64 {
	if o == nil {
		var ret float64
		return ret
	}

	return o.MinSwitchUnit
}

// GetMinSwitchUnitOk returns a tuple with the MinSwitchUnit field value
// and a boolean to check if the value has been set.
func (o *PiFinancialFundServiceApplicationModelsTradingSwitchInfo) GetMinSwitchUnitOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MinSwitchUnit, true
}

// SetMinSwitchUnit sets field value
func (o *PiFinancialFundServiceApplicationModelsTradingSwitchInfo) SetMinSwitchUnit(v float64) {
	o.MinSwitchUnit = v
}

// GetMinSwitchAmount returns the MinSwitchAmount field value
func (o *PiFinancialFundServiceApplicationModelsTradingSwitchInfo) GetMinSwitchAmount() float64 {
	if o == nil {
		var ret float64
		return ret
	}

	return o.MinSwitchAmount
}

// GetMinSwitchAmountOk returns a tuple with the MinSwitchAmount field value
// and a boolean to check if the value has been set.
func (o *PiFinancialFundServiceApplicationModelsTradingSwitchInfo) GetMinSwitchAmountOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MinSwitchAmount, true
}

// SetMinSwitchAmount sets field value
func (o *PiFinancialFundServiceApplicationModelsTradingSwitchInfo) SetMinSwitchAmount(v float64) {
	o.MinSwitchAmount = v
}

func (o PiFinancialFundServiceApplicationModelsTradingSwitchInfo) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PiFinancialFundServiceApplicationModelsTradingSwitchInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["minSwitchUnit"] = o.MinSwitchUnit
	toSerialize["minSwitchAmount"] = o.MinSwitchAmount
	return toSerialize, nil
}

func (o *PiFinancialFundServiceApplicationModelsTradingSwitchInfo) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"minSwitchUnit",
		"minSwitchAmount",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varPiFinancialFundServiceApplicationModelsTradingSwitchInfo := _PiFinancialFundServiceApplicationModelsTradingSwitchInfo{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varPiFinancialFundServiceApplicationModelsTradingSwitchInfo)

	if err != nil {
		return err
	}

	*o = PiFinancialFundServiceApplicationModelsTradingSwitchInfo(varPiFinancialFundServiceApplicationModelsTradingSwitchInfo)

	return err
}

type NullablePiFinancialFundServiceApplicationModelsTradingSwitchInfo struct {
	value *PiFinancialFundServiceApplicationModelsTradingSwitchInfo
	isSet bool
}

func (v NullablePiFinancialFundServiceApplicationModelsTradingSwitchInfo) Get() *PiFinancialFundServiceApplicationModelsTradingSwitchInfo {
	return v.value
}

func (v *NullablePiFinancialFundServiceApplicationModelsTradingSwitchInfo) Set(val *PiFinancialFundServiceApplicationModelsTradingSwitchInfo) {
	v.value = val
	v.isSet = true
}

func (v NullablePiFinancialFundServiceApplicationModelsTradingSwitchInfo) IsSet() bool {
	return v.isSet
}

func (v *NullablePiFinancialFundServiceApplicationModelsTradingSwitchInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePiFinancialFundServiceApplicationModelsTradingSwitchInfo(val *PiFinancialFundServiceApplicationModelsTradingSwitchInfo) *NullablePiFinancialFundServiceApplicationModelsTradingSwitchInfo {
	return &NullablePiFinancialFundServiceApplicationModelsTradingSwitchInfo{value: val, isSet: true}
}

func (v NullablePiFinancialFundServiceApplicationModelsTradingSwitchInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePiFinancialFundServiceApplicationModelsTradingSwitchInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
