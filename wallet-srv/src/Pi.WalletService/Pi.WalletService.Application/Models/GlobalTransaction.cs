using Pi.WalletService.Domain.AggregatesModel.GlobalWalletAggregate;
using Pi.WalletService.IntegrationEvents.AggregatesModel;

namespace Pi.WalletService.Application.Models;

[Obsolete("Use TransactionV2 instead")]
public record GlobalTransaction(
    // Base Transaction
    Guid Id,
    string UserId,
    string AccountNo,
    string CustomerCode,
    string? CustomerName,
    string? CurrentState,
    string Status,
    string? TransactionNo,
    TransactionType TransactionType,
    decimal RequestedAmount,
    Currency Currency,
    string? QrValue,
    DateTime? QrGenerateDateTime,
    DateTime? QrExpiredTime,
    decimal? ReceivedAmount,
    DateTime? PaymentReceivedDateTime,
    DateTime? PaymentDisbursedDateTime,
    Channel Channel,
    Product Product,
    string? BankAccountNo,
    string? BankAccountName,
    string? BankName,
    DateTime CreatedAt,
    // Global Extended Field
    decimal? RequestedFxRate,
    Currency? RequestedFxCurrency,
    decimal? FxRate,
    DateTime? FxRequestDateTime,
    DateTime? FxConfirmDateTime,
    decimal? FxConfirmAmount,
    string? TransferFromAccount,
    string? TransferToAccount,
    decimal? TransferAmount,
    decimal? TransactionFee,
    DateTime? TransferRequestDateTime,
    DateTime? TransferConfirmDateTime,
    decimal? RefundAmountThb,
    decimal? NetAmountThb,
    string? FailedReason,
    decimal? BankFee,
    decimal? TransferFee,
    decimal? ConfirmedAmount
) : Transaction(
    Id,
    UserId,
    AccountNo,
    CustomerCode,
    CustomerName,
    CurrentState,
    Status,
    TransactionNo,
    TransactionType,
    RequestedAmount,
    Currency,
    QrValue,
    QrGenerateDateTime,
    ReceivedAmount,
    PaymentReceivedDateTime,
    PaymentDisbursedDateTime,
    Channel,
    Product,
    BankAccountNo,
    BankAccountName,
    BankName,
    BankFee,
    CreatedAt,
    ConfirmedAmount
);
