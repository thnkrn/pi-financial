// <auto-generated />
using System;
using System.ComponentModel.DataAnnotations;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Pi.WalletService.Infrastructure;

#nullable disable

namespace Pi.WalletService.Migrations.Migrations.WalletDb
{
    [DbContext(typeof(WalletDbContext))]
    [Migration("20231020044707_RemoveLimitOnEncrpytedField")]
    partial class RemoveLimitOnEncrpytedField
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseCollation("utf8mb4_0900_ai_ci")
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Pi.WalletService.Domain.AggregatesModel.CashAggregate.CashDepositState", b =>
                {
                    b.Property<Guid>("CorrelationId")
                        .HasMaxLength(36)
                        .HasColumnType("char(36)")
                        .HasColumnName("correlation_id");

                    b.Property<string>("AccountCode")
                        .IsRequired()
                        .HasMaxLength(36)
                        .HasColumnType("varchar(36)")
                        .HasColumnName("account_code");

                    b.Property<string>("BankName")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("bank_name");

                    b.Property<string>("Channel")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("channel");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(6)
                        .HasColumnType("datetime(6)")
                        .HasDefaultValue(new DateTime(2023, 10, 20, 11, 47, 7, 146, DateTimeKind.Local).AddTicks(280))
                        .HasColumnName("created_at");

                    b.Property<string>("CurrentState")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("current_state");

                    b.Property<string>("CustomerCode")
                        .IsRequired()
                        .HasMaxLength(36)
                        .HasColumnType("varchar(36)")
                        .HasColumnName("customer_code");

                    b.Property<string>("FailedReason")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("failed_reason");

                    b.Property<DateTime?>("PaymentReceivedDateTime")
                        .HasMaxLength(6)
                        .HasColumnType("datetime(6)")
                        .HasColumnName("payment_received_date_time");

                    b.Property<string>("Product")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("product");

                    b.Property<string>("Purpose")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("purpose");

                    b.Property<decimal>("RequestedAmount")
                        .HasPrecision(65, 30)
                        .HasColumnType("decimal(65,30)")
                        .HasColumnName("requested_amount");

                    b.Property<DateTime>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("timestamp(6)")
                        .HasColumnName("row_version");

                    b.Property<string>("TransactionNo")
                        .HasMaxLength(36)
                        .HasColumnType("varchar(36)")
                        .HasColumnName("transaction_no");

                    b.Property<DateTime>("UpdatedAt")
                        .HasMaxLength(6)
                        .HasColumnType("datetime(6)")
                        .HasColumnName("updated_at");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasMaxLength(36)
                        .HasColumnType("varchar(36)")
                        .HasColumnName("user_id");

                    b.HasKey("CorrelationId")
                        .HasName("pk_cash_deposit_state");

                    b.HasIndex("TransactionNo")
                        .IsUnique()
                        .HasDatabaseName("ix_cash_deposit_state_transaction_no");

                    b.ToTable("cash_deposit_state", (string)null);
                });

            modelBuilder.Entity("Pi.WalletService.Domain.AggregatesModel.CashAggregate.CashWithdrawState", b =>
                {
                    b.Property<Guid>("CorrelationId")
                        .HasMaxLength(36)
                        .HasColumnType("char(36)")
                        .HasColumnName("correlation_id");

                    b.Property<string>("AccountCode")
                        .IsRequired()
                        .HasMaxLength(36)
                        .HasColumnType("varchar(36)")
                        .HasColumnName("account_code");

                    b.Property<string>("BankAccountNo")
                        .HasMaxLength(36)
                        .HasColumnType("varchar(36)")
                        .HasColumnName("bank_account_no");

                    b.Property<string>("BankCode")
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("bank_code");

                    b.Property<decimal?>("BankFee")
                        .HasPrecision(65, 30)
                        .HasColumnType("decimal(65,30)")
                        .HasColumnName("bank_fee");

                    b.Property<string>("BankName")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("bank_name");

                    b.Property<string>("Channel")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("channel");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(6)
                        .HasColumnType("datetime(6)")
                        .HasDefaultValue(new DateTime(2023, 10, 20, 11, 47, 7, 148, DateTimeKind.Local).AddTicks(2880))
                        .HasColumnName("created_at");

                    b.Property<string>("CurrentState")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("current_state");

                    b.Property<string>("CustomerCode")
                        .IsRequired()
                        .HasMaxLength(36)
                        .HasColumnType("varchar(36)")
                        .HasColumnName("customer_code");

                    b.Property<Guid>("DeviceId")
                        .HasColumnType("char(36)")
                        .HasColumnName("device_id");

                    b.Property<string>("FailedReason")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("failed_reason");

                    b.Property<DateTime?>("OtpConfirmedDateTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("otp_confirmed_date_time");

                    b.Property<Guid?>("OtpRequestId")
                        .HasColumnType("char(36)")
                        .HasColumnName("otp_request_id");

                    b.Property<string>("OtpRequestRef")
                        .HasColumnType("longtext")
                        .HasColumnName("otp_request_ref");

                    b.Property<string>("Product")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("product");

                    b.Property<Guid?>("RequestId")
                        .HasColumnType("char(36)")
                        .HasColumnName("request_id");

                    b.Property<decimal>("RequestedAmount")
                        .HasColumnType("decimal(65,30)")
                        .HasColumnName("requested_amount");

                    b.Property<string>("ResponseAddress")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("response_address");

                    b.Property<DateTime>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("timestamp(6)")
                        .HasColumnName("row_version");

                    b.Property<string>("TransactionNo")
                        .HasMaxLength(36)
                        .HasColumnType("varchar(36)")
                        .HasColumnName("transaction_no");

                    b.Property<DateTime>("UpdatedAt")
                        .HasMaxLength(6)
                        .HasColumnType("datetime(6)")
                        .HasColumnName("updated_at");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasMaxLength(36)
                        .HasColumnType("varchar(36)")
                        .HasColumnName("user_id");

                    b.HasKey("CorrelationId")
                        .HasName("pk_cash_withdraw_state");

                    b.HasIndex("TransactionNo")
                        .IsUnique()
                        .HasDatabaseName("ix_cash_withdraw_state_transaction_no");

                    b.ToTable("cash_withdraw_state", (string)null);
                });

            modelBuilder.Entity("Pi.WalletService.Domain.AggregatesModel.DepositAggregate.DepositState", b =>
                {
                    b.Property<Guid>("CorrelationId")
                        .HasMaxLength(36)
                        .HasColumnType("char(36)")
                        .HasColumnName("correlation_id");

                    b.Property<string>("AccountCode")
                        .IsRequired()
                        .HasMaxLength(36)
                        .HasColumnType("varchar(36)")
                        .HasColumnName("account_code");

                    b.Property<decimal?>("Amount")
                        .HasColumnType("decimal(65,30)")
                        .HasColumnName("amount");

                    b.Property<string>("BankAccountName")
                        .HasColumnType("longtext")
                        .HasColumnName("bank_account_name")
                        .HasAnnotation("Microsoft.EntityFrameworkCore.DataEncryption.IsEncrypted", true)
                        .HasAnnotation("Microsoft.EntityFrameworkCore.DataEncryption.StorageFormat", StorageFormat.Default);

                    b.Property<string>("BankAccountNo")
                        .HasMaxLength(36)
                        .HasColumnType("varchar(36)")
                        .HasColumnName("bank_account_no");

                    b.Property<string>("BankCode")
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("bank_code");

                    b.Property<decimal?>("BankFee")
                        .HasPrecision(65, 30)
                        .HasColumnType("decimal(65,30)")
                        .HasColumnName("bank_fee");

                    b.Property<string>("BankName")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("bank_name");

                    b.Property<string>("Channel")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("channel");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(6)
                        .HasColumnType("datetime(6)")
                        .HasDefaultValue(new DateTime(2023, 10, 20, 11, 47, 7, 143, DateTimeKind.Local).AddTicks(9530))
                        .HasColumnName("created_at");

                    b.Property<string>("CurrentState")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("current_state");

                    b.Property<string>("CustomerCode")
                        .IsRequired()
                        .HasMaxLength(36)
                        .HasColumnType("varchar(36)")
                        .HasColumnName("customer_code");

                    b.Property<string>("CustomerName")
                        .HasColumnType("longtext")
                        .HasColumnName("customer_name")
                        .HasAnnotation("Microsoft.EntityFrameworkCore.DataEncryption.IsEncrypted", true)
                        .HasAnnotation("Microsoft.EntityFrameworkCore.DataEncryption.StorageFormat", StorageFormat.Default);

                    b.Property<DateTime?>("DepositQrGenerateDateTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("deposit_qr_generate_date_time");

                    b.Property<string>("FailedReason")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("failed_reason");

                    b.Property<decimal?>("PaymentReceivedAmount")
                        .HasPrecision(65, 30)
                        .HasColumnType("decimal(65,30)")
                        .HasColumnName("payment_received_amount");

                    b.Property<DateTime?>("PaymentReceivedDateTime")
                        .HasMaxLength(6)
                        .HasColumnType("datetime(6)")
                        .HasColumnName("payment_received_date_time");

                    b.Property<string>("Product")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("product");

                    b.Property<string>("Purpose")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("purpose");

                    b.Property<int>("QrCodeExpiredTimeInMinute")
                        .HasColumnType("int")
                        .HasColumnName("qr_code_expired_time_in_minute");

                    b.Property<string>("QrTransactionNo")
                        .HasColumnType("longtext")
                        .HasColumnName("qr_transaction_no");

                    b.Property<string>("QrTransactionRef")
                        .HasColumnType("longtext")
                        .HasColumnName("qr_transaction_ref");

                    b.Property<string>("QrValue")
                        .HasColumnType("longtext")
                        .HasColumnName("qr_value");

                    b.Property<Guid?>("RequestId")
                        .HasColumnType("char(36)")
                        .HasColumnName("request_id");

                    b.Property<decimal>("RequestedAmount")
                        .HasPrecision(65, 30)
                        .HasColumnType("decimal(65,30)")
                        .HasColumnName("requested_amount");

                    b.Property<Guid?>("RequesterDeviceId")
                        .HasColumnType("char(36)")
                        .HasColumnName("requester_device_id");

                    b.Property<string>("ResponseAddress")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("response_address");

                    b.Property<DateTime?>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("timestamp(6)")
                        .HasColumnName("row_version");

                    b.Property<string>("TransactionNo")
                        .HasMaxLength(36)
                        .HasColumnType("varchar(36)")
                        .HasColumnName("transaction_no");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasMaxLength(36)
                        .HasColumnType("varchar(36)")
                        .HasColumnName("user_id");

                    b.HasKey("CorrelationId")
                        .HasName("pk_deposit_state");

                    b.HasIndex("TransactionNo")
                        .IsUnique()
                        .HasDatabaseName("ix_deposit_state_transaction_no");

                    b.ToTable("deposit_state", (string)null);
                });

            modelBuilder.Entity("Pi.WalletService.Domain.AggregatesModel.GlobalWalletAggregate.GlobalWalletTransferState", b =>
                {
                    b.Property<Guid>("CorrelationId")
                        .HasColumnType("char(36)")
                        .HasColumnName("correlation_id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_at");

                    b.Property<string>("CurrentState")
                        .HasColumnType("longtext")
                        .HasColumnName("current_state");

                    b.Property<string>("CustomerCode")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("customer_code");

                    b.Property<long>("CustomerId")
                        .HasColumnType("bigint")
                        .HasColumnName("customer_id");

                    b.Property<string>("FailedReason")
                        .HasColumnType("longtext")
                        .HasColumnName("failed_reason");

                    b.Property<decimal?>("FxConfirmedAmount")
                        .HasColumnType("decimal(65,30)")
                        .HasColumnName("fx_confirmed_amount");

                    b.Property<string>("FxConfirmedCurrency")
                        .HasColumnType("longtext")
                        .HasColumnName("fx_confirmed_currency");

                    b.Property<DateTime?>("FxConfirmedDateTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("fx_confirmed_date_time");

                    b.Property<decimal?>("FxConfirmedExchangeRate")
                        .HasColumnType("decimal(65,30)")
                        .HasColumnName("fx_confirmed_exchange_rate");

                    b.Property<DateTime?>("FxInitiateRequestDateTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("fx_initiate_request_date_time");

                    b.Property<string>("FxTransactionId")
                        .HasColumnType("longtext")
                        .HasColumnName("fx_transaction_id");

                    b.Property<string>("GlobalAccount")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("global_account");

                    b.Property<decimal?>("NetAmount")
                        .HasColumnType("decimal(65,30)")
                        .HasColumnName("net_amount");

                    b.Property<decimal?>("PaymentReceivedAmount")
                        .HasColumnType("decimal(65,30)")
                        .HasColumnName("payment_received_amount");

                    b.Property<string>("PaymentReceivedCurrency")
                        .HasColumnType("longtext")
                        .HasColumnName("payment_received_currency");

                    b.Property<string>("Product")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("product");

                    b.Property<decimal?>("RefundAmount")
                        .HasColumnType("decimal(65,30)")
                        .HasColumnName("refund_amount");

                    b.Property<Guid?>("RequestId")
                        .HasColumnType("char(36)")
                        .HasColumnName("request_id");

                    b.Property<decimal>("RequestedAmount")
                        .HasColumnType("decimal(65,30)")
                        .HasColumnName("requested_amount");

                    b.Property<string>("RequestedCurrency")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("requested_currency");

                    b.Property<decimal>("RequestedFxAmount")
                        .HasColumnType("decimal(65,30)")
                        .HasColumnName("requested_fx_amount");

                    b.Property<string>("RequestedFxCurrency")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("requested_fx_currency");

                    b.Property<Guid?>("RequesterDeviceId")
                        .HasColumnType("char(36)")
                        .HasColumnName("requester_device_id");

                    b.Property<string>("ResponseAddress")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("response_address");

                    b.Property<DateTime>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("timestamp(6)")
                        .HasColumnName("row_version");

                    b.Property<string>("TransactionNo")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("transaction_no");

                    b.Property<string>("TransactionType")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("transaction_type");

                    b.Property<decimal?>("TransferAmount")
                        .HasColumnType("decimal(65,30)")
                        .HasColumnName("transfer_amount");

                    b.Property<DateTime?>("TransferCompleteTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("transfer_complete_time");

                    b.Property<string>("TransferCurrency")
                        .HasColumnType("longtext")
                        .HasColumnName("transfer_currency");

                    b.Property<decimal?>("TransferFee")
                        .HasColumnType("decimal(65,30)")
                        .HasColumnName("transfer_fee");

                    b.Property<string>("TransferFromAccount")
                        .HasColumnType("longtext")
                        .HasColumnName("transfer_from_account");

                    b.Property<DateTime?>("TransferRequestTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("transfer_request_time");

                    b.Property<string>("TransferToAccount")
                        .HasColumnType("longtext")
                        .HasColumnName("transfer_to_account");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasMaxLength(36)
                        .HasColumnType("varchar(36)")
                        .HasColumnName("user_id");

                    b.HasKey("CorrelationId")
                        .HasName("pk_global_wallet_transfer_state");

                    b.HasIndex("TransactionNo")
                        .IsUnique()
                        .HasDatabaseName("ix_global_wallet_transfer_state_transaction_no");

                    b.ToTable("global_wallet_transfer_state", (string)null);
                });

            modelBuilder.Entity("Pi.WalletService.Domain.AggregatesModel.GlobalWalletManualAllocationAggregate.GlobalManualAllocationState", b =>
                {
                    b.Property<Guid>("CorrelationId")
                        .HasColumnType("char(36)")
                        .HasColumnName("correlation_id");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(65,30)")
                        .HasColumnName("amount");

                    b.Property<DateTime?>("CompletedTransferAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("completed_transfer_at");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_at");

                    b.Property<string>("Currency")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("currency");

                    b.Property<string>("CurrentState")
                        .HasColumnType("longtext")
                        .HasColumnName("current_state");

                    b.Property<string>("FailedReason")
                        .HasColumnType("longtext")
                        .HasColumnName("failed_reason");

                    b.Property<string>("GlobalAccount")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("global_account");

                    b.Property<DateTime?>("InitiateTransferAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("initiate_transfer_at");

                    b.Property<Guid?>("RequestId")
                        .HasColumnType("char(36)")
                        .HasColumnName("request_id");

                    b.Property<string>("RequestType")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("request_type");

                    b.Property<string>("ResponseAddress")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("response_address");

                    b.Property<DateTime>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("timestamp(6)")
                        .HasColumnName("row_version");

                    b.Property<string>("TransactionNo")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasColumnName("transaction_no");

                    b.HasKey("CorrelationId")
                        .HasName("pk_global_manual_allocation_state");

                    b.HasIndex("TransactionNo")
                        .HasDatabaseName("ix_global_manual_allocation_state_transaction_no");

                    b.ToTable("global_manual_allocation_state", (string)null);
                });

            modelBuilder.Entity("Pi.WalletService.Domain.AggregatesModel.LogAggregate.FreewillRequestLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .HasColumnName("id");

                    b.Property<string>("Callback")
                        .HasColumnType("longtext")
                        .HasColumnName("callback");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(6)
                        .HasColumnType("datetime(6)")
                        .HasDefaultValue(new DateTime(2023, 10, 20, 11, 47, 7, 150, DateTimeKind.Local).AddTicks(4430))
                        .HasColumnName("created_at");

                    b.Property<string>("ReferId")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("refer_id");

                    b.Property<string>("Request")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("request");

                    b.Property<string>("Response")
                        .HasColumnType("longtext")
                        .HasColumnName("response");

                    b.Property<DateTime>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("timestamp(6)")
                        .HasColumnName("row_version");

                    b.Property<string>("TransId")
                        .HasColumnType("longtext")
                        .HasColumnName("trans_id");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("type");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("updated_at");

                    b.HasKey("Id")
                        .HasName("pk_freewill_request_logs");

                    b.ToTable("freewill_request_logs", (string)null);
                });

            modelBuilder.Entity("Pi.WalletService.Domain.AggregatesModel.OnlineDirectDebitRegistrationAggregate.OnlineDirectDebitRegistration", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("id");

                    b.Property<string>("Bank")
                        .IsRequired()
                        .HasMaxLength(6)
                        .HasColumnType("varchar(6)")
                        .HasColumnName("bank");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_at");

                    b.Property<string>("ExternalStatusCode")
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("external_status_code");

                    b.Property<bool>("IsSuccess")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("is_success");

                    b.Property<DateTime>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("timestamp(6)")
                        .HasColumnName("row_version");

                    b.Property<Guid>("UserId")
                        .HasColumnType("char(36)")
                        .HasColumnName("user_id");

                    b.HasKey("Id")
                        .HasName("pk_online_direct_debit_registrations");

                    b.ToTable("online_direct_debit_registrations", (string)null);
                });

            modelBuilder.Entity("Pi.WalletService.Domain.AggregatesModel.RefundAggregate.RefundState", b =>
                {
                    b.Property<Guid>("CorrelationId")
                        .HasMaxLength(36)
                        .HasColumnType("char(36)")
                        .HasColumnName("correlation_id");

                    b.Property<string>("AccountCode")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("account_code");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(65,30)")
                        .HasColumnName("amount");

                    b.Property<string>("BankAccountNo")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("bank_account_no");

                    b.Property<string>("BankCode")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("bank_code");

                    b.Property<decimal?>("BankFee")
                        .HasColumnType("decimal(65,30)")
                        .HasColumnName("bank_fee");

                    b.Property<string>("BankName")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("bank_name");

                    b.Property<string>("Channel")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("channel");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_at");

                    b.Property<string>("CurrentState")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("current_state");

                    b.Property<string>("CustomerCode")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("customer_code");

                    b.Property<string>("DepositTransactionNo")
                        .HasMaxLength(36)
                        .HasColumnType("varchar(36)")
                        .HasColumnName("deposit_transaction_no");

                    b.Property<string>("FailedReason")
                        .HasColumnType("longtext")
                        .HasColumnName("failed_reason");

                    b.Property<string>("Product")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("product");

                    b.Property<DateTime?>("RefundedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("refunded_at");

                    b.Property<Guid?>("RequestId")
                        .HasColumnType("char(36)")
                        .HasColumnName("request_id");

                    b.Property<string>("ResponseAddress")
                        .HasColumnType("longtext")
                        .HasColumnName("response_address");

                    b.Property<string>("TransactionNo")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("transaction_no");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("user_id");

                    b.HasKey("CorrelationId")
                        .HasName("pk_refund_state");

                    b.ToTable("refund_state", (string)null);
                });

            modelBuilder.Entity("Pi.WalletService.Domain.AggregatesModel.WalletAggregate.GlobalWalletTransactionHistory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .HasColumnName("id");

                    b.Property<Guid>("CorrelationId")
                        .HasColumnType("char(36)")
                        .HasColumnName("correlation_id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_at");

                    b.Property<string>("CurrentState")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("current_state");

                    b.Property<string>("CustomerCode")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("customer_code");

                    b.Property<long>("CustomerId")
                        .HasColumnType("bigint")
                        .HasColumnName("customer_id");

                    b.Property<string>("FailedReason")
                        .HasColumnType("longtext")
                        .HasColumnName("failed_reason");

                    b.Property<decimal?>("FxConfirmedAmount")
                        .HasColumnType("decimal(65,30)")
                        .HasColumnName("fx_confirmed_amount");

                    b.Property<string>("FxConfirmedAmountWithCurrency")
                        .HasColumnType("longtext")
                        .HasColumnName("fx_confirmed_amount_with_currency");

                    b.Property<string>("FxConfirmedCurrency")
                        .HasColumnType("longtext")
                        .HasColumnName("fx_confirmed_currency");

                    b.Property<DateTime?>("FxConfirmedDateTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("fx_confirmed_date_time");

                    b.Property<decimal?>("FxConfirmedExchangeRate")
                        .HasColumnType("decimal(65,30)")
                        .HasColumnName("fx_confirmed_exchange_rate");

                    b.Property<DateTime?>("FxInitiateRequestDateTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("fx_initiate_request_date_time");

                    b.Property<string>("FxTransactionId")
                        .HasColumnType("longtext")
                        .HasColumnName("fx_transaction_id");

                    b.Property<string>("GlobalAccount")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("global_account");

                    b.Property<decimal?>("NetAmount")
                        .HasColumnType("decimal(65,30)")
                        .HasColumnName("net_amount");

                    b.Property<decimal?>("PaymentReceivedAmount")
                        .HasColumnType("decimal(65,30)")
                        .HasColumnName("payment_received_amount");

                    b.Property<string>("PaymentReceivedCurrency")
                        .HasColumnType("longtext")
                        .HasColumnName("payment_received_currency");

                    b.Property<decimal?>("RefundAmount")
                        .HasColumnType("decimal(65,30)")
                        .HasColumnName("refund_amount");

                    b.Property<decimal>("RequestedAmount")
                        .HasColumnType("decimal(65,30)")
                        .HasColumnName("requested_amount");

                    b.Property<string>("RequestedAmountWithCurrency")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("requested_amount_with_currency");

                    b.Property<string>("RequestedCurrency")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("requested_currency");

                    b.Property<decimal>("RequestedFxAmount")
                        .HasColumnType("decimal(65,30)")
                        .HasColumnName("requested_fx_amount");

                    b.Property<string>("RequestedFxAmountWithCurrency")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("requested_fx_amount_with_currency");

                    b.Property<string>("RequestedFxCurrency")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("requested_fx_currency");

                    b.Property<Guid?>("RequesterDeviceId")
                        .HasColumnType("char(36)")
                        .HasColumnName("requester_device_id");

                    b.Property<DateTime>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("timestamp(6)")
                        .HasColumnName("row_version");

                    b.Property<decimal?>("TransactionFee")
                        .HasColumnType("decimal(65,30)")
                        .HasColumnName("transaction_fee");

                    b.Property<string>("TransactionNo")
                        .HasColumnType("longtext")
                        .HasColumnName("transaction_no");

                    b.Property<int>("TransactionType")
                        .HasColumnType("int")
                        .HasColumnName("transaction_type");

                    b.Property<decimal?>("TransferAmount")
                        .HasColumnType("decimal(65,30)")
                        .HasColumnName("transfer_amount");

                    b.Property<string>("TransferAmountWithCurrency")
                        .HasColumnType("longtext")
                        .HasColumnName("transfer_amount_with_currency");

                    b.Property<DateTime?>("TransferCompleteTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("transfer_complete_time");

                    b.Property<string>("TransferCurrency")
                        .HasColumnType("longtext")
                        .HasColumnName("transfer_currency");

                    b.Property<string>("TransferFromAccount")
                        .HasColumnType("longtext")
                        .HasColumnName("transfer_from_account");

                    b.Property<DateTime?>("TransferRequestTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("transfer_request_time");

                    b.Property<string>("TransferToAccount")
                        .HasColumnType("longtext")
                        .HasColumnName("transfer_to_account");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("updated_at");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("user_id");

                    b.HasKey("Id")
                        .HasName("pk_global_wallet_transaction_histories");

                    b.ToTable("global_wallet_transaction_histories", (string)null);
                });

            modelBuilder.Entity("Pi.WalletService.Domain.AggregatesModel.WalletAggregate.TransactionHistory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .HasColumnName("id");

                    b.Property<string>("AccountCode")
                        .IsRequired()
                        .HasMaxLength(36)
                        .HasColumnType("varchar(36)")
                        .HasColumnName("account_code");

                    b.Property<string>("BankAccountName")
                        .HasColumnType("longtext")
                        .HasColumnName("bank_account_name")
                        .HasAnnotation("Microsoft.EntityFrameworkCore.DataEncryption.IsEncrypted", true)
                        .HasAnnotation("Microsoft.EntityFrameworkCore.DataEncryption.StorageFormat", StorageFormat.Default);

                    b.Property<string>("BankAccountNo")
                        .HasMaxLength(36)
                        .HasColumnType("varchar(36)")
                        .HasColumnName("bank_account_no");

                    b.Property<string>("BankCode")
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("bank_code");

                    b.Property<decimal?>("BankFee")
                        .HasPrecision(65, 30)
                        .HasColumnType("decimal(65,30)")
                        .HasColumnName("bank_fee");

                    b.Property<string>("BankName")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("bank_name");

                    b.Property<string>("Channel")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("channel");

                    b.Property<Guid>("CorrelationId")
                        .HasMaxLength(36)
                        .HasColumnType("char(36)")
                        .HasColumnName("correlation_id");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(6)
                        .HasColumnType("datetime(6)")
                        .HasDefaultValue(new DateTime(2023, 10, 20, 11, 47, 7, 150, DateTimeKind.Local).AddTicks(5270))
                        .HasColumnName("created_at");

                    b.Property<string>("CustomerCode")
                        .IsRequired()
                        .HasMaxLength(36)
                        .HasColumnType("varchar(36)")
                        .HasColumnName("customer_code");

                    b.Property<string>("CustomerName")
                        .HasColumnType("longtext")
                        .HasColumnName("customer_name")
                        .HasAnnotation("Microsoft.EntityFrameworkCore.DataEncryption.IsEncrypted", true)
                        .HasAnnotation("Microsoft.EntityFrameworkCore.DataEncryption.StorageFormat", StorageFormat.Default);

                    b.Property<string>("FailedReason")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("failed_reason");

                    b.Property<string>("GlobalAccount")
                        .HasMaxLength(36)
                        .HasColumnType("varchar(36)")
                        .HasColumnName("global_account");

                    b.Property<string>("Product")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("product");

                    b.Property<string>("Purpose")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("purpose");

                    b.Property<decimal>("RequestedAmount")
                        .HasPrecision(65, 30)
                        .HasColumnType("decimal(65,30)")
                        .HasColumnName("requested_amount");

                    b.Property<Guid?>("RequesterDeviceId")
                        .HasColumnType("char(36)")
                        .HasColumnName("requester_device_id");

                    b.Property<DateTime>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("timestamp(6)")
                        .HasColumnName("row_version");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("state");

                    b.Property<decimal?>("TransactionAmount")
                        .HasPrecision(65, 30)
                        .HasColumnType("decimal(65,30)")
                        .HasColumnName("transaction_amount");

                    b.Property<DateTime?>("TransactionDateTime")
                        .HasMaxLength(6)
                        .HasColumnType("datetime(6)")
                        .HasColumnName("transaction_date_time");

                    b.Property<string>("TransactionNo")
                        .IsRequired()
                        .HasMaxLength(36)
                        .HasColumnType("varchar(36)")
                        .HasColumnName("transaction_no");

                    b.Property<string>("TransactionType")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("transaction_type");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("updated_at");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasMaxLength(36)
                        .HasColumnType("varchar(36)")
                        .HasColumnName("user_id");

                    b.HasKey("Id")
                        .HasName("pk_transaction_histories");

                    b.ToTable("transaction_histories", (string)null);
                });

            modelBuilder.Entity("Pi.WalletService.Domain.AggregatesModel.WithdrawAggregate.WithdrawState", b =>
                {
                    b.Property<Guid>("CorrelationId")
                        .HasMaxLength(36)
                        .HasColumnType("char(36)")
                        .HasColumnName("correlation_id");

                    b.Property<string>("AccountCode")
                        .IsRequired()
                        .HasMaxLength(36)
                        .HasColumnType("varchar(36)")
                        .HasColumnName("account_code");

                    b.Property<string>("BankAccountNo")
                        .HasMaxLength(36)
                        .HasColumnType("varchar(36)")
                        .HasColumnName("bank_account_no");

                    b.Property<string>("BankCode")
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("bank_code");

                    b.Property<decimal?>("BankFee")
                        .HasPrecision(65, 30)
                        .HasColumnType("decimal(65,30)")
                        .HasColumnName("bank_fee");

                    b.Property<string>("BankName")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("bank_name");

                    b.Property<string>("Channel")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("channel");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(6)
                        .HasColumnType("datetime(6)")
                        .HasDefaultValue(new DateTime(2023, 10, 20, 11, 47, 7, 148, DateTimeKind.Local).AddTicks(1320))
                        .HasColumnName("created_at");

                    b.Property<string>("CurrentState")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("current_state");

                    b.Property<string>("CustomerCode")
                        .IsRequired()
                        .HasMaxLength(36)
                        .HasColumnType("varchar(36)")
                        .HasColumnName("customer_code");

                    b.Property<string>("FailedReason")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("failed_reason");

                    b.Property<DateTime?>("OtpConfirmedDateTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("otp_confirmed_date_time");

                    b.Property<Guid?>("OtpRequestId")
                        .HasColumnType("char(36)")
                        .HasColumnName("otp_request_id");

                    b.Property<string>("OtpRequestRef")
                        .HasColumnType("longtext")
                        .HasColumnName("otp_request_ref");

                    b.Property<decimal?>("PaymentConfirmedAmount")
                        .HasColumnType("decimal(65,30)")
                        .HasColumnName("payment_confirmed_amount");

                    b.Property<decimal?>("PaymentDisbursedAmount")
                        .HasPrecision(65, 30)
                        .HasColumnType("decimal(65,30)")
                        .HasColumnName("payment_disbursed_amount");

                    b.Property<DateTime?>("PaymentDisbursedDateTime")
                        .HasMaxLength(6)
                        .HasColumnType("datetime(6)")
                        .HasColumnName("payment_disbursed_date_time");

                    b.Property<string>("Product")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("product");

                    b.Property<Guid?>("RequestId")
                        .HasColumnType("char(36)")
                        .HasColumnName("request_id");

                    b.Property<Guid?>("RequesterDeviceId")
                        .HasColumnType("char(36)")
                        .HasColumnName("requester_device_id");

                    b.Property<string>("ResponseAddress")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("response_address");

                    b.Property<DateTime?>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("timestamp(6)")
                        .HasColumnName("row_version");

                    b.Property<string>("TransactionNo")
                        .HasMaxLength(36)
                        .HasColumnType("varchar(36)")
                        .HasColumnName("transaction_no");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasMaxLength(36)
                        .HasColumnType("varchar(36)")
                        .HasColumnName("user_id");

                    b.HasKey("CorrelationId")
                        .HasName("pk_withdraw_state");

                    b.HasIndex("TransactionNo")
                        .IsUnique()
                        .HasDatabaseName("ix_withdraw_state_transaction_no");

                    b.ToTable("withdraw_state", (string)null);
                });
#pragma warning restore 612, 618
        }
    }
}
