/*
 * Cgs Bank
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using FileParameter = Pi.Client.CgsBank.Client.FileParameter;
using OpenAPIDateConverter = Pi.Client.CgsBank.Client.OpenAPIDateConverter;

namespace Pi.Client.CgsBank.Model
{
    /// <summary>
    /// ODDRegistrationRequest
    /// </summary>
    [DataContract(Name = "ODDRegistrationRequest")]
    public partial class ODDRegistrationRequest : IEquatable<ODDRegistrationRequest>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ODDRegistrationRequest" /> class.
        /// </summary>
        /// <param name="registrationRefCode">registrationRefCode.</param>
        /// <param name="citizenId">citizenId.</param>
        /// <param name="redirectUrl">redirectUrl.</param>
        /// <param name="email">email.</param>
        /// <param name="mobileNo">mobileNo.</param>
        /// <param name="remarks">remarks.</param>
        public ODDRegistrationRequest(string registrationRefCode = default(string), string citizenId = default(string), string redirectUrl = default(string), string email = default(string), string mobileNo = default(string), string remarks = default(string))
        {
            this.RegistrationRefCode = registrationRefCode;
            this.CitizenId = citizenId;
            this.RedirectUrl = redirectUrl;
            this.Email = email;
            this.MobileNo = mobileNo;
            this.Remarks = remarks;
        }

        /// <summary>
        /// Gets or Sets RegistrationRefCode
        /// </summary>
        [DataMember(Name = "registrationRefCode", EmitDefaultValue = false)]
        public string RegistrationRefCode { get; set; }

        /// <summary>
        /// Gets or Sets CitizenId
        /// </summary>
        [DataMember(Name = "citizenId", EmitDefaultValue = false)]
        public string CitizenId { get; set; }

        /// <summary>
        /// Gets or Sets RedirectUrl
        /// </summary>
        [DataMember(Name = "redirectUrl", EmitDefaultValue = false)]
        public string RedirectUrl { get; set; }

        /// <summary>
        /// Gets or Sets Email
        /// </summary>
        [DataMember(Name = "email", EmitDefaultValue = false)]
        public string Email { get; set; }

        /// <summary>
        /// Gets or Sets MobileNo
        /// </summary>
        [DataMember(Name = "mobileNo", EmitDefaultValue = false)]
        public string MobileNo { get; set; }

        /// <summary>
        /// Gets or Sets Remarks
        /// </summary>
        [DataMember(Name = "remarks", EmitDefaultValue = false)]
        public string Remarks { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class ODDRegistrationRequest {\n");
            sb.Append("  RegistrationRefCode: ").Append(RegistrationRefCode).Append("\n");
            sb.Append("  CitizenId: ").Append(CitizenId).Append("\n");
            sb.Append("  RedirectUrl: ").Append(RedirectUrl).Append("\n");
            sb.Append("  Email: ").Append(Email).Append("\n");
            sb.Append("  MobileNo: ").Append(MobileNo).Append("\n");
            sb.Append("  Remarks: ").Append(Remarks).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as ODDRegistrationRequest);
        }

        /// <summary>
        /// Returns true if ODDRegistrationRequest instances are equal
        /// </summary>
        /// <param name="input">Instance of ODDRegistrationRequest to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(ODDRegistrationRequest input)
        {
            if (input == null)
            {
                return false;
            }
            return
                (
                    this.RegistrationRefCode == input.RegistrationRefCode ||
                    (this.RegistrationRefCode != null &&
                    this.RegistrationRefCode.Equals(input.RegistrationRefCode))
                ) &&
                (
                    this.CitizenId == input.CitizenId ||
                    (this.CitizenId != null &&
                    this.CitizenId.Equals(input.CitizenId))
                ) &&
                (
                    this.RedirectUrl == input.RedirectUrl ||
                    (this.RedirectUrl != null &&
                    this.RedirectUrl.Equals(input.RedirectUrl))
                ) &&
                (
                    this.Email == input.Email ||
                    (this.Email != null &&
                    this.Email.Equals(input.Email))
                ) &&
                (
                    this.MobileNo == input.MobileNo ||
                    (this.MobileNo != null &&
                    this.MobileNo.Equals(input.MobileNo))
                ) &&
                (
                    this.Remarks == input.Remarks ||
                    (this.Remarks != null &&
                    this.Remarks.Equals(input.Remarks))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.RegistrationRefCode != null)
                {
                    hashCode = (hashCode * 59) + this.RegistrationRefCode.GetHashCode();
                }
                if (this.CitizenId != null)
                {
                    hashCode = (hashCode * 59) + this.CitizenId.GetHashCode();
                }
                if (this.RedirectUrl != null)
                {
                    hashCode = (hashCode * 59) + this.RedirectUrl.GetHashCode();
                }
                if (this.Email != null)
                {
                    hashCode = (hashCode * 59) + this.Email.GetHashCode();
                }
                if (this.MobileNo != null)
                {
                    hashCode = (hashCode * 59) + this.MobileNo.GetHashCode();
                }
                if (this.Remarks != null)
                {
                    hashCode = (hashCode * 59) + this.Remarks.GetHashCode();
                }
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        public IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
