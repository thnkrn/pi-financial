/*
 * Cgs Bank
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using FileParameter = Pi.Client.CgsBank.Client.FileParameter;
using OpenAPIDateConverter = Pi.Client.CgsBank.Client.OpenAPIDateConverter;

namespace Pi.Client.CgsBank.Model
{
    /// <summary>
    /// ODDRegistrationResponseStatus
    /// </summary>
    [DataContract(Name = "ODDRegistrationResponse_status")]
    public partial class ODDRegistrationResponseStatus : IEquatable<ODDRegistrationResponseStatus>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ODDRegistrationResponseStatus" /> class.
        /// </summary>
        /// <param name="externalStatusCode">externalStatusCode.</param>
        /// <param name="externalStatusDescription">externalStatusDescription.</param>
        /// <param name="internalStatusCode">internalStatusCode.</param>
        /// <param name="internalStatusDescription">internalStatusDescription.</param>
        /// <param name="status">status.</param>
        public ODDRegistrationResponseStatus(string externalStatusCode = default(string), string externalStatusDescription = default(string), string internalStatusCode = default(string), string internalStatusDescription = default(string), bool status = default(bool))
        {
            this.ExternalStatusCode = externalStatusCode;
            this.ExternalStatusDescription = externalStatusDescription;
            this.InternalStatusCode = internalStatusCode;
            this.InternalStatusDescription = internalStatusDescription;
            this.Status = status;
        }

        /// <summary>
        /// Gets or Sets ExternalStatusCode
        /// </summary>
        [DataMember(Name = "externalStatusCode", EmitDefaultValue = false)]
        public string ExternalStatusCode { get; set; }

        /// <summary>
        /// Gets or Sets ExternalStatusDescription
        /// </summary>
        [DataMember(Name = "externalStatusDescription", EmitDefaultValue = false)]
        public string ExternalStatusDescription { get; set; }

        /// <summary>
        /// Gets or Sets InternalStatusCode
        /// </summary>
        [DataMember(Name = "internalStatusCode", EmitDefaultValue = false)]
        public string InternalStatusCode { get; set; }

        /// <summary>
        /// Gets or Sets InternalStatusDescription
        /// </summary>
        [DataMember(Name = "internalStatusDescription", EmitDefaultValue = false)]
        public string InternalStatusDescription { get; set; }

        /// <summary>
        /// Gets or Sets Status
        /// </summary>
        [DataMember(Name = "status", EmitDefaultValue = true)]
        public bool Status { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class ODDRegistrationResponseStatus {\n");
            sb.Append("  ExternalStatusCode: ").Append(ExternalStatusCode).Append("\n");
            sb.Append("  ExternalStatusDescription: ").Append(ExternalStatusDescription).Append("\n");
            sb.Append("  InternalStatusCode: ").Append(InternalStatusCode).Append("\n");
            sb.Append("  InternalStatusDescription: ").Append(InternalStatusDescription).Append("\n");
            sb.Append("  Status: ").Append(Status).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as ODDRegistrationResponseStatus);
        }

        /// <summary>
        /// Returns true if ODDRegistrationResponseStatus instances are equal
        /// </summary>
        /// <param name="input">Instance of ODDRegistrationResponseStatus to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(ODDRegistrationResponseStatus input)
        {
            if (input == null)
            {
                return false;
            }
            return
                (
                    this.ExternalStatusCode == input.ExternalStatusCode ||
                    (this.ExternalStatusCode != null &&
                    this.ExternalStatusCode.Equals(input.ExternalStatusCode))
                ) &&
                (
                    this.ExternalStatusDescription == input.ExternalStatusDescription ||
                    (this.ExternalStatusDescription != null &&
                    this.ExternalStatusDescription.Equals(input.ExternalStatusDescription))
                ) &&
                (
                    this.InternalStatusCode == input.InternalStatusCode ||
                    (this.InternalStatusCode != null &&
                    this.InternalStatusCode.Equals(input.InternalStatusCode))
                ) &&
                (
                    this.InternalStatusDescription == input.InternalStatusDescription ||
                    (this.InternalStatusDescription != null &&
                    this.InternalStatusDescription.Equals(input.InternalStatusDescription))
                ) &&
                (
                    this.Status == input.Status ||
                    this.Status.Equals(input.Status)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.ExternalStatusCode != null)
                {
                    hashCode = (hashCode * 59) + this.ExternalStatusCode.GetHashCode();
                }
                if (this.ExternalStatusDescription != null)
                {
                    hashCode = (hashCode * 59) + this.ExternalStatusDescription.GetHashCode();
                }
                if (this.InternalStatusCode != null)
                {
                    hashCode = (hashCode * 59) + this.InternalStatusCode.GetHashCode();
                }
                if (this.InternalStatusDescription != null)
                {
                    hashCode = (hashCode * 59) + this.InternalStatusDescription.GetHashCode();
                }
                hashCode = (hashCode * 59) + this.Status.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        public IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
