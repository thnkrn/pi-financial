/*
Bond API

Serve Bond accounting, trading and market data.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the ResultResponseError type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ResultResponseError{}

// ResultResponseError struct for ResultResponseError
type ResultResponseError struct {
	Detail *string `json:"detail,omitempty"`
	Status *int32  `json:"status,omitempty"`
	Title  *string `json:"title,omitempty"`
}

// NewResultResponseError instantiates a new ResultResponseError object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewResultResponseError() *ResultResponseError {
	this := ResultResponseError{}
	return &this
}

// NewResultResponseErrorWithDefaults instantiates a new ResultResponseError object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewResultResponseErrorWithDefaults() *ResultResponseError {
	this := ResultResponseError{}
	return &this
}

// GetDetail returns the Detail field value if set, zero value otherwise.
func (o *ResultResponseError) GetDetail() string {
	if o == nil || IsNil(o.Detail) {
		var ret string
		return ret
	}
	return *o.Detail
}

// GetDetailOk returns a tuple with the Detail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResultResponseError) GetDetailOk() (*string, bool) {
	if o == nil || IsNil(o.Detail) {
		return nil, false
	}
	return o.Detail, true
}

// HasDetail returns a boolean if a field has been set.
func (o *ResultResponseError) HasDetail() bool {
	if o != nil && !IsNil(o.Detail) {
		return true
	}

	return false
}

// SetDetail gets a reference to the given string and assigns it to the Detail field.
func (o *ResultResponseError) SetDetail(v string) {
	o.Detail = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *ResultResponseError) GetStatus() int32 {
	if o == nil || IsNil(o.Status) {
		var ret int32
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResultResponseError) GetStatusOk() (*int32, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *ResultResponseError) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given int32 and assigns it to the Status field.
func (o *ResultResponseError) SetStatus(v int32) {
	o.Status = &v
}

// GetTitle returns the Title field value if set, zero value otherwise.
func (o *ResultResponseError) GetTitle() string {
	if o == nil || IsNil(o.Title) {
		var ret string
		return ret
	}
	return *o.Title
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResultResponseError) GetTitleOk() (*string, bool) {
	if o == nil || IsNil(o.Title) {
		return nil, false
	}
	return o.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (o *ResultResponseError) HasTitle() bool {
	if o != nil && !IsNil(o.Title) {
		return true
	}

	return false
}

// SetTitle gets a reference to the given string and assigns it to the Title field.
func (o *ResultResponseError) SetTitle(v string) {
	o.Title = &v
}

func (o ResultResponseError) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ResultResponseError) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Detail) {
		toSerialize["detail"] = o.Detail
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.Title) {
		toSerialize["title"] = o.Title
	}
	return toSerialize, nil
}

type NullableResultResponseError struct {
	value *ResultResponseError
	isSet bool
}

func (v NullableResultResponseError) Get() *ResultResponseError {
	return v.value
}

func (v *NullableResultResponseError) Set(val *ResultResponseError) {
	v.value = val
	v.isSet = true
}

func (v NullableResultResponseError) IsSet() bool {
	return v.isSet
}

func (v *NullableResultResponseError) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableResultResponseError(val *ResultResponseError) *NullableResultResponseError {
	return &NullableResultResponseError{value: val, isSet: true}
}

func (v NullableResultResponseError) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableResultResponseError) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
