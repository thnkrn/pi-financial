/*
Pi.GlobalEquities.API, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package go_client

import (
	"encoding/json"
)

// checks if the PositionResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PositionResponse{}

// PositionResponse struct for PositionResponse
type PositionResponse struct {
	Symbol            NullableString `json:"symbol,omitempty"`
	Venue             NullableString `json:"venue,omitempty"`
	Currency          *Currency      `json:"currency,omitempty"`
	EntireQuantity    *float32       `json:"entireQuantity,omitempty"`
	AvailableQuantity *float32       `json:"availableQuantity,omitempty"`
	LastPrice         *float32       `json:"lastPrice,omitempty"`
	MarketValue       *float32       `json:"marketValue,omitempty"`
	AveragePrice      *float32       `json:"averagePrice,omitempty"`
	Upnl              *float32       `json:"upnl,omitempty"`
	Cost              *float32       `json:"cost,omitempty"`
	UpnlPercentage    *float32       `json:"upnlPercentage,omitempty"`
	Logo              NullableString `json:"logo,omitempty"`
}

// NewPositionResponse instantiates a new PositionResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPositionResponse() *PositionResponse {
	this := PositionResponse{}
	return &this
}

// NewPositionResponseWithDefaults instantiates a new PositionResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPositionResponseWithDefaults() *PositionResponse {
	this := PositionResponse{}
	return &this
}

// GetSymbol returns the Symbol field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PositionResponse) GetSymbol() string {
	if o == nil || IsNil(o.Symbol.Get()) {
		var ret string
		return ret
	}
	return *o.Symbol.Get()
}

// GetSymbolOk returns a tuple with the Symbol field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PositionResponse) GetSymbolOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Symbol.Get(), o.Symbol.IsSet()
}

// HasSymbol returns a boolean if a field has been set.
func (o *PositionResponse) HasSymbol() bool {
	if o != nil && o.Symbol.IsSet() {
		return true
	}

	return false
}

// SetSymbol gets a reference to the given NullableString and assigns it to the Symbol field.
func (o *PositionResponse) SetSymbol(v string) {
	o.Symbol.Set(&v)
}

// SetSymbolNil sets the value for Symbol to be an explicit nil
func (o *PositionResponse) SetSymbolNil() {
	o.Symbol.Set(nil)
}

// UnsetSymbol ensures that no value is present for Symbol, not even an explicit nil
func (o *PositionResponse) UnsetSymbol() {
	o.Symbol.Unset()
}

// GetVenue returns the Venue field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PositionResponse) GetVenue() string {
	if o == nil || IsNil(o.Venue.Get()) {
		var ret string
		return ret
	}
	return *o.Venue.Get()
}

// GetVenueOk returns a tuple with the Venue field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PositionResponse) GetVenueOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Venue.Get(), o.Venue.IsSet()
}

// HasVenue returns a boolean if a field has been set.
func (o *PositionResponse) HasVenue() bool {
	if o != nil && o.Venue.IsSet() {
		return true
	}

	return false
}

// SetVenue gets a reference to the given NullableString and assigns it to the Venue field.
func (o *PositionResponse) SetVenue(v string) {
	o.Venue.Set(&v)
}

// SetVenueNil sets the value for Venue to be an explicit nil
func (o *PositionResponse) SetVenueNil() {
	o.Venue.Set(nil)
}

// UnsetVenue ensures that no value is present for Venue, not even an explicit nil
func (o *PositionResponse) UnsetVenue() {
	o.Venue.Unset()
}

// GetCurrency returns the Currency field value if set, zero value otherwise.
func (o *PositionResponse) GetCurrency() Currency {
	if o == nil || IsNil(o.Currency) {
		var ret Currency
		return ret
	}
	return *o.Currency
}

// GetCurrencyOk returns a tuple with the Currency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PositionResponse) GetCurrencyOk() (*Currency, bool) {
	if o == nil || IsNil(o.Currency) {
		return nil, false
	}
	return o.Currency, true
}

// HasCurrency returns a boolean if a field has been set.
func (o *PositionResponse) HasCurrency() bool {
	if o != nil && !IsNil(o.Currency) {
		return true
	}

	return false
}

// SetCurrency gets a reference to the given Currency and assigns it to the Currency field.
func (o *PositionResponse) SetCurrency(v Currency) {
	o.Currency = &v
}

// GetEntireQuantity returns the EntireQuantity field value if set, zero value otherwise.
func (o *PositionResponse) GetEntireQuantity() float32 {
	if o == nil || IsNil(o.EntireQuantity) {
		var ret float32
		return ret
	}
	return *o.EntireQuantity
}

// GetEntireQuantityOk returns a tuple with the EntireQuantity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PositionResponse) GetEntireQuantityOk() (*float32, bool) {
	if o == nil || IsNil(o.EntireQuantity) {
		return nil, false
	}
	return o.EntireQuantity, true
}

// HasEntireQuantity returns a boolean if a field has been set.
func (o *PositionResponse) HasEntireQuantity() bool {
	if o != nil && !IsNil(o.EntireQuantity) {
		return true
	}

	return false
}

// SetEntireQuantity gets a reference to the given float32 and assigns it to the EntireQuantity field.
func (o *PositionResponse) SetEntireQuantity(v float32) {
	o.EntireQuantity = &v
}

// GetAvailableQuantity returns the AvailableQuantity field value if set, zero value otherwise.
func (o *PositionResponse) GetAvailableQuantity() float32 {
	if o == nil || IsNil(o.AvailableQuantity) {
		var ret float32
		return ret
	}
	return *o.AvailableQuantity
}

// GetAvailableQuantityOk returns a tuple with the AvailableQuantity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PositionResponse) GetAvailableQuantityOk() (*float32, bool) {
	if o == nil || IsNil(o.AvailableQuantity) {
		return nil, false
	}
	return o.AvailableQuantity, true
}

// HasAvailableQuantity returns a boolean if a field has been set.
func (o *PositionResponse) HasAvailableQuantity() bool {
	if o != nil && !IsNil(o.AvailableQuantity) {
		return true
	}

	return false
}

// SetAvailableQuantity gets a reference to the given float32 and assigns it to the AvailableQuantity field.
func (o *PositionResponse) SetAvailableQuantity(v float32) {
	o.AvailableQuantity = &v
}

// GetLastPrice returns the LastPrice field value if set, zero value otherwise.
func (o *PositionResponse) GetLastPrice() float32 {
	if o == nil || IsNil(o.LastPrice) {
		var ret float32
		return ret
	}
	return *o.LastPrice
}

// GetLastPriceOk returns a tuple with the LastPrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PositionResponse) GetLastPriceOk() (*float32, bool) {
	if o == nil || IsNil(o.LastPrice) {
		return nil, false
	}
	return o.LastPrice, true
}

// HasLastPrice returns a boolean if a field has been set.
func (o *PositionResponse) HasLastPrice() bool {
	if o != nil && !IsNil(o.LastPrice) {
		return true
	}

	return false
}

// SetLastPrice gets a reference to the given float32 and assigns it to the LastPrice field.
func (o *PositionResponse) SetLastPrice(v float32) {
	o.LastPrice = &v
}

// GetMarketValue returns the MarketValue field value if set, zero value otherwise.
func (o *PositionResponse) GetMarketValue() float32 {
	if o == nil || IsNil(o.MarketValue) {
		var ret float32
		return ret
	}
	return *o.MarketValue
}

// GetMarketValueOk returns a tuple with the MarketValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PositionResponse) GetMarketValueOk() (*float32, bool) {
	if o == nil || IsNil(o.MarketValue) {
		return nil, false
	}
	return o.MarketValue, true
}

// HasMarketValue returns a boolean if a field has been set.
func (o *PositionResponse) HasMarketValue() bool {
	if o != nil && !IsNil(o.MarketValue) {
		return true
	}

	return false
}

// SetMarketValue gets a reference to the given float32 and assigns it to the MarketValue field.
func (o *PositionResponse) SetMarketValue(v float32) {
	o.MarketValue = &v
}

// GetAveragePrice returns the AveragePrice field value if set, zero value otherwise.
func (o *PositionResponse) GetAveragePrice() float32 {
	if o == nil || IsNil(o.AveragePrice) {
		var ret float32
		return ret
	}
	return *o.AveragePrice
}

// GetAveragePriceOk returns a tuple with the AveragePrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PositionResponse) GetAveragePriceOk() (*float32, bool) {
	if o == nil || IsNil(o.AveragePrice) {
		return nil, false
	}
	return o.AveragePrice, true
}

// HasAveragePrice returns a boolean if a field has been set.
func (o *PositionResponse) HasAveragePrice() bool {
	if o != nil && !IsNil(o.AveragePrice) {
		return true
	}

	return false
}

// SetAveragePrice gets a reference to the given float32 and assigns it to the AveragePrice field.
func (o *PositionResponse) SetAveragePrice(v float32) {
	o.AveragePrice = &v
}

// GetUpnl returns the Upnl field value if set, zero value otherwise.
func (o *PositionResponse) GetUpnl() float32 {
	if o == nil || IsNil(o.Upnl) {
		var ret float32
		return ret
	}
	return *o.Upnl
}

// GetUpnlOk returns a tuple with the Upnl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PositionResponse) GetUpnlOk() (*float32, bool) {
	if o == nil || IsNil(o.Upnl) {
		return nil, false
	}
	return o.Upnl, true
}

// HasUpnl returns a boolean if a field has been set.
func (o *PositionResponse) HasUpnl() bool {
	if o != nil && !IsNil(o.Upnl) {
		return true
	}

	return false
}

// SetUpnl gets a reference to the given float32 and assigns it to the Upnl field.
func (o *PositionResponse) SetUpnl(v float32) {
	o.Upnl = &v
}

// GetCost returns the Cost field value if set, zero value otherwise.
func (o *PositionResponse) GetCost() float32 {
	if o == nil || IsNil(o.Cost) {
		var ret float32
		return ret
	}
	return *o.Cost
}

// GetCostOk returns a tuple with the Cost field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PositionResponse) GetCostOk() (*float32, bool) {
	if o == nil || IsNil(o.Cost) {
		return nil, false
	}
	return o.Cost, true
}

// HasCost returns a boolean if a field has been set.
func (o *PositionResponse) HasCost() bool {
	if o != nil && !IsNil(o.Cost) {
		return true
	}

	return false
}

// SetCost gets a reference to the given float32 and assigns it to the Cost field.
func (o *PositionResponse) SetCost(v float32) {
	o.Cost = &v
}

// GetUpnlPercentage returns the UpnlPercentage field value if set, zero value otherwise.
func (o *PositionResponse) GetUpnlPercentage() float32 {
	if o == nil || IsNil(o.UpnlPercentage) {
		var ret float32
		return ret
	}
	return *o.UpnlPercentage
}

// GetUpnlPercentageOk returns a tuple with the UpnlPercentage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PositionResponse) GetUpnlPercentageOk() (*float32, bool) {
	if o == nil || IsNil(o.UpnlPercentage) {
		return nil, false
	}
	return o.UpnlPercentage, true
}

// HasUpnlPercentage returns a boolean if a field has been set.
func (o *PositionResponse) HasUpnlPercentage() bool {
	if o != nil && !IsNil(o.UpnlPercentage) {
		return true
	}

	return false
}

// SetUpnlPercentage gets a reference to the given float32 and assigns it to the UpnlPercentage field.
func (o *PositionResponse) SetUpnlPercentage(v float32) {
	o.UpnlPercentage = &v
}

// GetLogo returns the Logo field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PositionResponse) GetLogo() string {
	if o == nil || IsNil(o.Logo.Get()) {
		var ret string
		return ret
	}
	return *o.Logo.Get()
}

// GetLogoOk returns a tuple with the Logo field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PositionResponse) GetLogoOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Logo.Get(), o.Logo.IsSet()
}

// HasLogo returns a boolean if a field has been set.
func (o *PositionResponse) HasLogo() bool {
	if o != nil && o.Logo.IsSet() {
		return true
	}

	return false
}

// SetLogo gets a reference to the given NullableString and assigns it to the Logo field.
func (o *PositionResponse) SetLogo(v string) {
	o.Logo.Set(&v)
}

// SetLogoNil sets the value for Logo to be an explicit nil
func (o *PositionResponse) SetLogoNil() {
	o.Logo.Set(nil)
}

// UnsetLogo ensures that no value is present for Logo, not even an explicit nil
func (o *PositionResponse) UnsetLogo() {
	o.Logo.Unset()
}

func (o PositionResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PositionResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Symbol.IsSet() {
		toSerialize["symbol"] = o.Symbol.Get()
	}
	if o.Venue.IsSet() {
		toSerialize["venue"] = o.Venue.Get()
	}
	if !IsNil(o.Currency) {
		toSerialize["currency"] = o.Currency
	}
	if !IsNil(o.EntireQuantity) {
		toSerialize["entireQuantity"] = o.EntireQuantity
	}
	if !IsNil(o.AvailableQuantity) {
		toSerialize["availableQuantity"] = o.AvailableQuantity
	}
	if !IsNil(o.LastPrice) {
		toSerialize["lastPrice"] = o.LastPrice
	}
	if !IsNil(o.MarketValue) {
		toSerialize["marketValue"] = o.MarketValue
	}
	if !IsNil(o.AveragePrice) {
		toSerialize["averagePrice"] = o.AveragePrice
	}
	if !IsNil(o.Upnl) {
		toSerialize["upnl"] = o.Upnl
	}
	if !IsNil(o.Cost) {
		toSerialize["cost"] = o.Cost
	}
	if !IsNil(o.UpnlPercentage) {
		toSerialize["upnlPercentage"] = o.UpnlPercentage
	}
	if o.Logo.IsSet() {
		toSerialize["logo"] = o.Logo.Get()
	}
	return toSerialize, nil
}

type NullablePositionResponse struct {
	value *PositionResponse
	isSet bool
}

func (v NullablePositionResponse) Get() *PositionResponse {
	return v.value
}

func (v *NullablePositionResponse) Set(val *PositionResponse) {
	v.value = val
	v.isSet = true
}

func (v NullablePositionResponse) IsSet() bool {
	return v.isSet
}

func (v *NullablePositionResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePositionResponse(val *PositionResponse) *NullablePositionResponse {
	return &NullablePositionResponse{value: val, isSet: true}
}

func (v NullablePositionResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePositionResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
