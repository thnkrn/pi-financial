/*
Pi.GlobalEquities.API, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package go_client

import (
	"encoding/json"
	"time"
)

// checks if the CorporateActionResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CorporateActionResponse{}

// CorporateActionResponse struct for CorporateActionResponse
type CorporateActionResponse struct {
	Id            NullableString      `json:"id,omitempty"`
	Venue         NullableString      `json:"venue,omitempty"`
	Symbol        NullableString      `json:"symbol,omitempty"`
	SymbolId      NullableString      `json:"symbolId,omitempty"`
	OperationType *OperationType      `json:"operationType,omitempty"`
	AssetType     *CorporateAssetType `json:"assetType,omitempty"`
	Currency      *Currency           `json:"currency,omitempty"`
	Value         NullableFloat32     `json:"value,omitempty"`
	ValueUSD      NullableFloat32     `json:"valueUSD,omitempty"`
	CreatedAt     *time.Time          `json:"createdAt,omitempty"`
}

// NewCorporateActionResponse instantiates a new CorporateActionResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCorporateActionResponse() *CorporateActionResponse {
	this := CorporateActionResponse{}
	return &this
}

// NewCorporateActionResponseWithDefaults instantiates a new CorporateActionResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCorporateActionResponseWithDefaults() *CorporateActionResponse {
	this := CorporateActionResponse{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CorporateActionResponse) GetId() string {
	if o == nil || IsNil(o.Id.Get()) {
		var ret string
		return ret
	}
	return *o.Id.Get()
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CorporateActionResponse) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Id.Get(), o.Id.IsSet()
}

// HasId returns a boolean if a field has been set.
func (o *CorporateActionResponse) HasId() bool {
	if o != nil && o.Id.IsSet() {
		return true
	}

	return false
}

// SetId gets a reference to the given NullableString and assigns it to the Id field.
func (o *CorporateActionResponse) SetId(v string) {
	o.Id.Set(&v)
}

// SetIdNil sets the value for Id to be an explicit nil
func (o *CorporateActionResponse) SetIdNil() {
	o.Id.Set(nil)
}

// UnsetId ensures that no value is present for Id, not even an explicit nil
func (o *CorporateActionResponse) UnsetId() {
	o.Id.Unset()
}

// GetVenue returns the Venue field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CorporateActionResponse) GetVenue() string {
	if o == nil || IsNil(o.Venue.Get()) {
		var ret string
		return ret
	}
	return *o.Venue.Get()
}

// GetVenueOk returns a tuple with the Venue field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CorporateActionResponse) GetVenueOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Venue.Get(), o.Venue.IsSet()
}

// HasVenue returns a boolean if a field has been set.
func (o *CorporateActionResponse) HasVenue() bool {
	if o != nil && o.Venue.IsSet() {
		return true
	}

	return false
}

// SetVenue gets a reference to the given NullableString and assigns it to the Venue field.
func (o *CorporateActionResponse) SetVenue(v string) {
	o.Venue.Set(&v)
}

// SetVenueNil sets the value for Venue to be an explicit nil
func (o *CorporateActionResponse) SetVenueNil() {
	o.Venue.Set(nil)
}

// UnsetVenue ensures that no value is present for Venue, not even an explicit nil
func (o *CorporateActionResponse) UnsetVenue() {
	o.Venue.Unset()
}

// GetSymbol returns the Symbol field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CorporateActionResponse) GetSymbol() string {
	if o == nil || IsNil(o.Symbol.Get()) {
		var ret string
		return ret
	}
	return *o.Symbol.Get()
}

// GetSymbolOk returns a tuple with the Symbol field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CorporateActionResponse) GetSymbolOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Symbol.Get(), o.Symbol.IsSet()
}

// HasSymbol returns a boolean if a field has been set.
func (o *CorporateActionResponse) HasSymbol() bool {
	if o != nil && o.Symbol.IsSet() {
		return true
	}

	return false
}

// SetSymbol gets a reference to the given NullableString and assigns it to the Symbol field.
func (o *CorporateActionResponse) SetSymbol(v string) {
	o.Symbol.Set(&v)
}

// SetSymbolNil sets the value for Symbol to be an explicit nil
func (o *CorporateActionResponse) SetSymbolNil() {
	o.Symbol.Set(nil)
}

// UnsetSymbol ensures that no value is present for Symbol, not even an explicit nil
func (o *CorporateActionResponse) UnsetSymbol() {
	o.Symbol.Unset()
}

// GetSymbolId returns the SymbolId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CorporateActionResponse) GetSymbolId() string {
	if o == nil || IsNil(o.SymbolId.Get()) {
		var ret string
		return ret
	}
	return *o.SymbolId.Get()
}

// GetSymbolIdOk returns a tuple with the SymbolId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CorporateActionResponse) GetSymbolIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SymbolId.Get(), o.SymbolId.IsSet()
}

// HasSymbolId returns a boolean if a field has been set.
func (o *CorporateActionResponse) HasSymbolId() bool {
	if o != nil && o.SymbolId.IsSet() {
		return true
	}

	return false
}

// SetSymbolId gets a reference to the given NullableString and assigns it to the SymbolId field.
func (o *CorporateActionResponse) SetSymbolId(v string) {
	o.SymbolId.Set(&v)
}

// SetSymbolIdNil sets the value for SymbolId to be an explicit nil
func (o *CorporateActionResponse) SetSymbolIdNil() {
	o.SymbolId.Set(nil)
}

// UnsetSymbolId ensures that no value is present for SymbolId, not even an explicit nil
func (o *CorporateActionResponse) UnsetSymbolId() {
	o.SymbolId.Unset()
}

// GetOperationType returns the OperationType field value if set, zero value otherwise.
func (o *CorporateActionResponse) GetOperationType() OperationType {
	if o == nil || IsNil(o.OperationType) {
		var ret OperationType
		return ret
	}
	return *o.OperationType
}

// GetOperationTypeOk returns a tuple with the OperationType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CorporateActionResponse) GetOperationTypeOk() (*OperationType, bool) {
	if o == nil || IsNil(o.OperationType) {
		return nil, false
	}
	return o.OperationType, true
}

// HasOperationType returns a boolean if a field has been set.
func (o *CorporateActionResponse) HasOperationType() bool {
	if o != nil && !IsNil(o.OperationType) {
		return true
	}

	return false
}

// SetOperationType gets a reference to the given OperationType and assigns it to the OperationType field.
func (o *CorporateActionResponse) SetOperationType(v OperationType) {
	o.OperationType = &v
}

// GetAssetType returns the AssetType field value if set, zero value otherwise.
func (o *CorporateActionResponse) GetAssetType() CorporateAssetType {
	if o == nil || IsNil(o.AssetType) {
		var ret CorporateAssetType
		return ret
	}
	return *o.AssetType
}

// GetAssetTypeOk returns a tuple with the AssetType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CorporateActionResponse) GetAssetTypeOk() (*CorporateAssetType, bool) {
	if o == nil || IsNil(o.AssetType) {
		return nil, false
	}
	return o.AssetType, true
}

// HasAssetType returns a boolean if a field has been set.
func (o *CorporateActionResponse) HasAssetType() bool {
	if o != nil && !IsNil(o.AssetType) {
		return true
	}

	return false
}

// SetAssetType gets a reference to the given CorporateAssetType and assigns it to the AssetType field.
func (o *CorporateActionResponse) SetAssetType(v CorporateAssetType) {
	o.AssetType = &v
}

// GetCurrency returns the Currency field value if set, zero value otherwise.
func (o *CorporateActionResponse) GetCurrency() Currency {
	if o == nil || IsNil(o.Currency) {
		var ret Currency
		return ret
	}
	return *o.Currency
}

// GetCurrencyOk returns a tuple with the Currency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CorporateActionResponse) GetCurrencyOk() (*Currency, bool) {
	if o == nil || IsNil(o.Currency) {
		return nil, false
	}
	return o.Currency, true
}

// HasCurrency returns a boolean if a field has been set.
func (o *CorporateActionResponse) HasCurrency() bool {
	if o != nil && !IsNil(o.Currency) {
		return true
	}

	return false
}

// SetCurrency gets a reference to the given Currency and assigns it to the Currency field.
func (o *CorporateActionResponse) SetCurrency(v Currency) {
	o.Currency = &v
}

// GetValue returns the Value field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CorporateActionResponse) GetValue() float32 {
	if o == nil || IsNil(o.Value.Get()) {
		var ret float32
		return ret
	}
	return *o.Value.Get()
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CorporateActionResponse) GetValueOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return o.Value.Get(), o.Value.IsSet()
}

// HasValue returns a boolean if a field has been set.
func (o *CorporateActionResponse) HasValue() bool {
	if o != nil && o.Value.IsSet() {
		return true
	}

	return false
}

// SetValue gets a reference to the given NullableFloat32 and assigns it to the Value field.
func (o *CorporateActionResponse) SetValue(v float32) {
	o.Value.Set(&v)
}

// SetValueNil sets the value for Value to be an explicit nil
func (o *CorporateActionResponse) SetValueNil() {
	o.Value.Set(nil)
}

// UnsetValue ensures that no value is present for Value, not even an explicit nil
func (o *CorporateActionResponse) UnsetValue() {
	o.Value.Unset()
}

// GetValueUSD returns the ValueUSD field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CorporateActionResponse) GetValueUSD() float32 {
	if o == nil || IsNil(o.ValueUSD.Get()) {
		var ret float32
		return ret
	}
	return *o.ValueUSD.Get()
}

// GetValueUSDOk returns a tuple with the ValueUSD field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CorporateActionResponse) GetValueUSDOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return o.ValueUSD.Get(), o.ValueUSD.IsSet()
}

// HasValueUSD returns a boolean if a field has been set.
func (o *CorporateActionResponse) HasValueUSD() bool {
	if o != nil && o.ValueUSD.IsSet() {
		return true
	}

	return false
}

// SetValueUSD gets a reference to the given NullableFloat32 and assigns it to the ValueUSD field.
func (o *CorporateActionResponse) SetValueUSD(v float32) {
	o.ValueUSD.Set(&v)
}

// SetValueUSDNil sets the value for ValueUSD to be an explicit nil
func (o *CorporateActionResponse) SetValueUSDNil() {
	o.ValueUSD.Set(nil)
}

// UnsetValueUSD ensures that no value is present for ValueUSD, not even an explicit nil
func (o *CorporateActionResponse) UnsetValueUSD() {
	o.ValueUSD.Unset()
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *CorporateActionResponse) GetCreatedAt() time.Time {
	if o == nil || IsNil(o.CreatedAt) {
		var ret time.Time
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CorporateActionResponse) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *CorporateActionResponse) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given time.Time and assigns it to the CreatedAt field.
func (o *CorporateActionResponse) SetCreatedAt(v time.Time) {
	o.CreatedAt = &v
}

func (o CorporateActionResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CorporateActionResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Id.IsSet() {
		toSerialize["id"] = o.Id.Get()
	}
	if o.Venue.IsSet() {
		toSerialize["venue"] = o.Venue.Get()
	}
	if o.Symbol.IsSet() {
		toSerialize["symbol"] = o.Symbol.Get()
	}
	if o.SymbolId.IsSet() {
		toSerialize["symbolId"] = o.SymbolId.Get()
	}
	if !IsNil(o.OperationType) {
		toSerialize["operationType"] = o.OperationType
	}
	if !IsNil(o.AssetType) {
		toSerialize["assetType"] = o.AssetType
	}
	if !IsNil(o.Currency) {
		toSerialize["currency"] = o.Currency
	}
	if o.Value.IsSet() {
		toSerialize["value"] = o.Value.Get()
	}
	if o.ValueUSD.IsSet() {
		toSerialize["valueUSD"] = o.ValueUSD.Get()
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["createdAt"] = o.CreatedAt
	}
	return toSerialize, nil
}

type NullableCorporateActionResponse struct {
	value *CorporateActionResponse
	isSet bool
}

func (v NullableCorporateActionResponse) Get() *CorporateActionResponse {
	return v.value
}

func (v *NullableCorporateActionResponse) Set(val *CorporateActionResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableCorporateActionResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableCorporateActionResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCorporateActionResponse(val *CorporateActionResponse) *NullableCorporateActionResponse {
	return &NullableCorporateActionResponse{value: val, isSet: true}
}

func (v NullableCorporateActionResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCorporateActionResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
