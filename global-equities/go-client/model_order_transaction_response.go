/*
Pi.GlobalEquities.API, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package go_client

import (
	"encoding/json"
)

// checks if the OrderTransactionResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OrderTransactionResponse{}

// OrderTransactionResponse struct for OrderTransactionResponse
type OrderTransactionResponse struct {
	Commission    *float32 `json:"commission,omitempty"`
	CommissionUSD *float32 `json:"commissionUSD,omitempty"`
	TotalCost     *float32 `json:"totalCost,omitempty"`
	TotalCostUSD  *float32 `json:"totalCostUSD,omitempty"`
	Cost          *float32 `json:"cost,omitempty"`
	CostUSD       *float32 `json:"costUSD,omitempty"`
}

// NewOrderTransactionResponse instantiates a new OrderTransactionResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOrderTransactionResponse() *OrderTransactionResponse {
	this := OrderTransactionResponse{}
	return &this
}

// NewOrderTransactionResponseWithDefaults instantiates a new OrderTransactionResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOrderTransactionResponseWithDefaults() *OrderTransactionResponse {
	this := OrderTransactionResponse{}
	return &this
}

// GetCommission returns the Commission field value if set, zero value otherwise.
func (o *OrderTransactionResponse) GetCommission() float32 {
	if o == nil || IsNil(o.Commission) {
		var ret float32
		return ret
	}
	return *o.Commission
}

// GetCommissionOk returns a tuple with the Commission field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderTransactionResponse) GetCommissionOk() (*float32, bool) {
	if o == nil || IsNil(o.Commission) {
		return nil, false
	}
	return o.Commission, true
}

// HasCommission returns a boolean if a field has been set.
func (o *OrderTransactionResponse) HasCommission() bool {
	if o != nil && !IsNil(o.Commission) {
		return true
	}

	return false
}

// SetCommission gets a reference to the given float32 and assigns it to the Commission field.
func (o *OrderTransactionResponse) SetCommission(v float32) {
	o.Commission = &v
}

// GetCommissionUSD returns the CommissionUSD field value if set, zero value otherwise.
func (o *OrderTransactionResponse) GetCommissionUSD() float32 {
	if o == nil || IsNil(o.CommissionUSD) {
		var ret float32
		return ret
	}
	return *o.CommissionUSD
}

// GetCommissionUSDOk returns a tuple with the CommissionUSD field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderTransactionResponse) GetCommissionUSDOk() (*float32, bool) {
	if o == nil || IsNil(o.CommissionUSD) {
		return nil, false
	}
	return o.CommissionUSD, true
}

// HasCommissionUSD returns a boolean if a field has been set.
func (o *OrderTransactionResponse) HasCommissionUSD() bool {
	if o != nil && !IsNil(o.CommissionUSD) {
		return true
	}

	return false
}

// SetCommissionUSD gets a reference to the given float32 and assigns it to the CommissionUSD field.
func (o *OrderTransactionResponse) SetCommissionUSD(v float32) {
	o.CommissionUSD = &v
}

// GetTotalCost returns the TotalCost field value if set, zero value otherwise.
func (o *OrderTransactionResponse) GetTotalCost() float32 {
	if o == nil || IsNil(o.TotalCost) {
		var ret float32
		return ret
	}
	return *o.TotalCost
}

// GetTotalCostOk returns a tuple with the TotalCost field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderTransactionResponse) GetTotalCostOk() (*float32, bool) {
	if o == nil || IsNil(o.TotalCost) {
		return nil, false
	}
	return o.TotalCost, true
}

// HasTotalCost returns a boolean if a field has been set.
func (o *OrderTransactionResponse) HasTotalCost() bool {
	if o != nil && !IsNil(o.TotalCost) {
		return true
	}

	return false
}

// SetTotalCost gets a reference to the given float32 and assigns it to the TotalCost field.
func (o *OrderTransactionResponse) SetTotalCost(v float32) {
	o.TotalCost = &v
}

// GetTotalCostUSD returns the TotalCostUSD field value if set, zero value otherwise.
func (o *OrderTransactionResponse) GetTotalCostUSD() float32 {
	if o == nil || IsNil(o.TotalCostUSD) {
		var ret float32
		return ret
	}
	return *o.TotalCostUSD
}

// GetTotalCostUSDOk returns a tuple with the TotalCostUSD field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderTransactionResponse) GetTotalCostUSDOk() (*float32, bool) {
	if o == nil || IsNil(o.TotalCostUSD) {
		return nil, false
	}
	return o.TotalCostUSD, true
}

// HasTotalCostUSD returns a boolean if a field has been set.
func (o *OrderTransactionResponse) HasTotalCostUSD() bool {
	if o != nil && !IsNil(o.TotalCostUSD) {
		return true
	}

	return false
}

// SetTotalCostUSD gets a reference to the given float32 and assigns it to the TotalCostUSD field.
func (o *OrderTransactionResponse) SetTotalCostUSD(v float32) {
	o.TotalCostUSD = &v
}

// GetCost returns the Cost field value if set, zero value otherwise.
func (o *OrderTransactionResponse) GetCost() float32 {
	if o == nil || IsNil(o.Cost) {
		var ret float32
		return ret
	}
	return *o.Cost
}

// GetCostOk returns a tuple with the Cost field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderTransactionResponse) GetCostOk() (*float32, bool) {
	if o == nil || IsNil(o.Cost) {
		return nil, false
	}
	return o.Cost, true
}

// HasCost returns a boolean if a field has been set.
func (o *OrderTransactionResponse) HasCost() bool {
	if o != nil && !IsNil(o.Cost) {
		return true
	}

	return false
}

// SetCost gets a reference to the given float32 and assigns it to the Cost field.
func (o *OrderTransactionResponse) SetCost(v float32) {
	o.Cost = &v
}

// GetCostUSD returns the CostUSD field value if set, zero value otherwise.
func (o *OrderTransactionResponse) GetCostUSD() float32 {
	if o == nil || IsNil(o.CostUSD) {
		var ret float32
		return ret
	}
	return *o.CostUSD
}

// GetCostUSDOk returns a tuple with the CostUSD field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderTransactionResponse) GetCostUSDOk() (*float32, bool) {
	if o == nil || IsNil(o.CostUSD) {
		return nil, false
	}
	return o.CostUSD, true
}

// HasCostUSD returns a boolean if a field has been set.
func (o *OrderTransactionResponse) HasCostUSD() bool {
	if o != nil && !IsNil(o.CostUSD) {
		return true
	}

	return false
}

// SetCostUSD gets a reference to the given float32 and assigns it to the CostUSD field.
func (o *OrderTransactionResponse) SetCostUSD(v float32) {
	o.CostUSD = &v
}

func (o OrderTransactionResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OrderTransactionResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Commission) {
		toSerialize["commission"] = o.Commission
	}
	if !IsNil(o.CommissionUSD) {
		toSerialize["commissionUSD"] = o.CommissionUSD
	}
	if !IsNil(o.TotalCost) {
		toSerialize["totalCost"] = o.TotalCost
	}
	if !IsNil(o.TotalCostUSD) {
		toSerialize["totalCostUSD"] = o.TotalCostUSD
	}
	if !IsNil(o.Cost) {
		toSerialize["cost"] = o.Cost
	}
	if !IsNil(o.CostUSD) {
		toSerialize["costUSD"] = o.CostUSD
	}
	return toSerialize, nil
}

type NullableOrderTransactionResponse struct {
	value *OrderTransactionResponse
	isSet bool
}

func (v NullableOrderTransactionResponse) Get() *OrderTransactionResponse {
	return v.value
}

func (v *NullableOrderTransactionResponse) Set(val *OrderTransactionResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableOrderTransactionResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableOrderTransactionResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOrderTransactionResponse(val *OrderTransactionResponse) *NullableOrderTransactionResponse {
	return &NullableOrderTransactionResponse{value: val, isSet: true}
}

func (v NullableOrderTransactionResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOrderTransactionResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
