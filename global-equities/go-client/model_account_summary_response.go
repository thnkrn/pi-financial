/*
Pi.GlobalEquities.API, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package go_client

import (
	"encoding/json"
)

// checks if the AccountSummaryResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AccountSummaryResponse{}

// AccountSummaryResponse struct for AccountSummaryResponse
type AccountSummaryResponse struct {
	// CustCode-2
	TradingAccountNo        NullableString                `json:"tradingAccountNo,omitempty"`
	TradingAccountNoDisplay NullableString                `json:"tradingAccountNoDisplay,omitempty"`
	UpnlPercentage          *float32                      `json:"upnlPercentage,omitempty"`
	ExchangeRate            *ExchangeRate                 `json:"exchangeRate,omitempty"`
	Values                  []AccountSummaryValueResponse `json:"values,omitempty"`
	Positions               []PositionResponse            `json:"positions,omitempty"`
}

// NewAccountSummaryResponse instantiates a new AccountSummaryResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAccountSummaryResponse() *AccountSummaryResponse {
	this := AccountSummaryResponse{}
	return &this
}

// NewAccountSummaryResponseWithDefaults instantiates a new AccountSummaryResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAccountSummaryResponseWithDefaults() *AccountSummaryResponse {
	this := AccountSummaryResponse{}
	return &this
}

// GetTradingAccountNo returns the TradingAccountNo field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AccountSummaryResponse) GetTradingAccountNo() string {
	if o == nil || IsNil(o.TradingAccountNo.Get()) {
		var ret string
		return ret
	}
	return *o.TradingAccountNo.Get()
}

// GetTradingAccountNoOk returns a tuple with the TradingAccountNo field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AccountSummaryResponse) GetTradingAccountNoOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TradingAccountNo.Get(), o.TradingAccountNo.IsSet()
}

// HasTradingAccountNo returns a boolean if a field has been set.
func (o *AccountSummaryResponse) HasTradingAccountNo() bool {
	if o != nil && o.TradingAccountNo.IsSet() {
		return true
	}

	return false
}

// SetTradingAccountNo gets a reference to the given NullableString and assigns it to the TradingAccountNo field.
func (o *AccountSummaryResponse) SetTradingAccountNo(v string) {
	o.TradingAccountNo.Set(&v)
}

// SetTradingAccountNoNil sets the value for TradingAccountNo to be an explicit nil
func (o *AccountSummaryResponse) SetTradingAccountNoNil() {
	o.TradingAccountNo.Set(nil)
}

// UnsetTradingAccountNo ensures that no value is present for TradingAccountNo, not even an explicit nil
func (o *AccountSummaryResponse) UnsetTradingAccountNo() {
	o.TradingAccountNo.Unset()
}

// GetTradingAccountNoDisplay returns the TradingAccountNoDisplay field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AccountSummaryResponse) GetTradingAccountNoDisplay() string {
	if o == nil || IsNil(o.TradingAccountNoDisplay.Get()) {
		var ret string
		return ret
	}
	return *o.TradingAccountNoDisplay.Get()
}

// GetTradingAccountNoDisplayOk returns a tuple with the TradingAccountNoDisplay field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AccountSummaryResponse) GetTradingAccountNoDisplayOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TradingAccountNoDisplay.Get(), o.TradingAccountNoDisplay.IsSet()
}

// HasTradingAccountNoDisplay returns a boolean if a field has been set.
func (o *AccountSummaryResponse) HasTradingAccountNoDisplay() bool {
	if o != nil && o.TradingAccountNoDisplay.IsSet() {
		return true
	}

	return false
}

// SetTradingAccountNoDisplay gets a reference to the given NullableString and assigns it to the TradingAccountNoDisplay field.
func (o *AccountSummaryResponse) SetTradingAccountNoDisplay(v string) {
	o.TradingAccountNoDisplay.Set(&v)
}

// SetTradingAccountNoDisplayNil sets the value for TradingAccountNoDisplay to be an explicit nil
func (o *AccountSummaryResponse) SetTradingAccountNoDisplayNil() {
	o.TradingAccountNoDisplay.Set(nil)
}

// UnsetTradingAccountNoDisplay ensures that no value is present for TradingAccountNoDisplay, not even an explicit nil
func (o *AccountSummaryResponse) UnsetTradingAccountNoDisplay() {
	o.TradingAccountNoDisplay.Unset()
}

// GetUpnlPercentage returns the UpnlPercentage field value if set, zero value otherwise.
func (o *AccountSummaryResponse) GetUpnlPercentage() float32 {
	if o == nil || IsNil(o.UpnlPercentage) {
		var ret float32
		return ret
	}
	return *o.UpnlPercentage
}

// GetUpnlPercentageOk returns a tuple with the UpnlPercentage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSummaryResponse) GetUpnlPercentageOk() (*float32, bool) {
	if o == nil || IsNil(o.UpnlPercentage) {
		return nil, false
	}
	return o.UpnlPercentage, true
}

// HasUpnlPercentage returns a boolean if a field has been set.
func (o *AccountSummaryResponse) HasUpnlPercentage() bool {
	if o != nil && !IsNil(o.UpnlPercentage) {
		return true
	}

	return false
}

// SetUpnlPercentage gets a reference to the given float32 and assigns it to the UpnlPercentage field.
func (o *AccountSummaryResponse) SetUpnlPercentage(v float32) {
	o.UpnlPercentage = &v
}

// GetExchangeRate returns the ExchangeRate field value if set, zero value otherwise.
func (o *AccountSummaryResponse) GetExchangeRate() ExchangeRate {
	if o == nil || IsNil(o.ExchangeRate) {
		var ret ExchangeRate
		return ret
	}
	return *o.ExchangeRate
}

// GetExchangeRateOk returns a tuple with the ExchangeRate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSummaryResponse) GetExchangeRateOk() (*ExchangeRate, bool) {
	if o == nil || IsNil(o.ExchangeRate) {
		return nil, false
	}
	return o.ExchangeRate, true
}

// HasExchangeRate returns a boolean if a field has been set.
func (o *AccountSummaryResponse) HasExchangeRate() bool {
	if o != nil && !IsNil(o.ExchangeRate) {
		return true
	}

	return false
}

// SetExchangeRate gets a reference to the given ExchangeRate and assigns it to the ExchangeRate field.
func (o *AccountSummaryResponse) SetExchangeRate(v ExchangeRate) {
	o.ExchangeRate = &v
}

// GetValues returns the Values field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AccountSummaryResponse) GetValues() []AccountSummaryValueResponse {
	if o == nil {
		var ret []AccountSummaryValueResponse
		return ret
	}
	return o.Values
}

// GetValuesOk returns a tuple with the Values field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AccountSummaryResponse) GetValuesOk() ([]AccountSummaryValueResponse, bool) {
	if o == nil || IsNil(o.Values) {
		return nil, false
	}
	return o.Values, true
}

// HasValues returns a boolean if a field has been set.
func (o *AccountSummaryResponse) HasValues() bool {
	if o != nil && !IsNil(o.Values) {
		return true
	}

	return false
}

// SetValues gets a reference to the given []AccountSummaryValueResponse and assigns it to the Values field.
func (o *AccountSummaryResponse) SetValues(v []AccountSummaryValueResponse) {
	o.Values = v
}

// GetPositions returns the Positions field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AccountSummaryResponse) GetPositions() []PositionResponse {
	if o == nil {
		var ret []PositionResponse
		return ret
	}
	return o.Positions
}

// GetPositionsOk returns a tuple with the Positions field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AccountSummaryResponse) GetPositionsOk() ([]PositionResponse, bool) {
	if o == nil || IsNil(o.Positions) {
		return nil, false
	}
	return o.Positions, true
}

// HasPositions returns a boolean if a field has been set.
func (o *AccountSummaryResponse) HasPositions() bool {
	if o != nil && !IsNil(o.Positions) {
		return true
	}

	return false
}

// SetPositions gets a reference to the given []PositionResponse and assigns it to the Positions field.
func (o *AccountSummaryResponse) SetPositions(v []PositionResponse) {
	o.Positions = v
}

func (o AccountSummaryResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AccountSummaryResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.TradingAccountNo.IsSet() {
		toSerialize["tradingAccountNo"] = o.TradingAccountNo.Get()
	}
	if o.TradingAccountNoDisplay.IsSet() {
		toSerialize["tradingAccountNoDisplay"] = o.TradingAccountNoDisplay.Get()
	}
	if !IsNil(o.UpnlPercentage) {
		toSerialize["upnlPercentage"] = o.UpnlPercentage
	}
	if !IsNil(o.ExchangeRate) {
		toSerialize["exchangeRate"] = o.ExchangeRate
	}
	if o.Values != nil {
		toSerialize["values"] = o.Values
	}
	if o.Positions != nil {
		toSerialize["positions"] = o.Positions
	}
	return toSerialize, nil
}

type NullableAccountSummaryResponse struct {
	value *AccountSummaryResponse
	isSet bool
}

func (v NullableAccountSummaryResponse) Get() *AccountSummaryResponse {
	return v.value
}

func (v *NullableAccountSummaryResponse) Set(val *AccountSummaryResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableAccountSummaryResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableAccountSummaryResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAccountSummaryResponse(val *AccountSummaryResponse) *NullableAccountSummaryResponse {
	return &NullableAccountSummaryResponse{value: val, isSet: true}
}

func (v NullableAccountSummaryResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAccountSummaryResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
