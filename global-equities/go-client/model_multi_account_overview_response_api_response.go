/*
Pi.GlobalEquities.API, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package go_client

import (
	"encoding/json"
)

// checks if the MultiAccountOverviewResponseApiResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MultiAccountOverviewResponseApiResponse{}

// MultiAccountOverviewResponseApiResponse struct for MultiAccountOverviewResponseApiResponse
type MultiAccountOverviewResponseApiResponse struct {
	Data *MultiAccountOverviewResponse `json:"data,omitempty"`
}

// NewMultiAccountOverviewResponseApiResponse instantiates a new MultiAccountOverviewResponseApiResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMultiAccountOverviewResponseApiResponse() *MultiAccountOverviewResponseApiResponse {
	this := MultiAccountOverviewResponseApiResponse{}
	return &this
}

// NewMultiAccountOverviewResponseApiResponseWithDefaults instantiates a new MultiAccountOverviewResponseApiResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMultiAccountOverviewResponseApiResponseWithDefaults() *MultiAccountOverviewResponseApiResponse {
	this := MultiAccountOverviewResponseApiResponse{}
	return &this
}

// GetData returns the Data field value if set, zero value otherwise.
func (o *MultiAccountOverviewResponseApiResponse) GetData() MultiAccountOverviewResponse {
	if o == nil || IsNil(o.Data) {
		var ret MultiAccountOverviewResponse
		return ret
	}
	return *o.Data
}

// GetDataOk returns a tuple with the Data field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MultiAccountOverviewResponseApiResponse) GetDataOk() (*MultiAccountOverviewResponse, bool) {
	if o == nil || IsNil(o.Data) {
		return nil, false
	}
	return o.Data, true
}

// HasData returns a boolean if a field has been set.
func (o *MultiAccountOverviewResponseApiResponse) HasData() bool {
	if o != nil && !IsNil(o.Data) {
		return true
	}

	return false
}

// SetData gets a reference to the given MultiAccountOverviewResponse and assigns it to the Data field.
func (o *MultiAccountOverviewResponseApiResponse) SetData(v MultiAccountOverviewResponse) {
	o.Data = &v
}

func (o MultiAccountOverviewResponseApiResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MultiAccountOverviewResponseApiResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Data) {
		toSerialize["data"] = o.Data
	}
	return toSerialize, nil
}

type NullableMultiAccountOverviewResponseApiResponse struct {
	value *MultiAccountOverviewResponseApiResponse
	isSet bool
}

func (v NullableMultiAccountOverviewResponseApiResponse) Get() *MultiAccountOverviewResponseApiResponse {
	return v.value
}

func (v *NullableMultiAccountOverviewResponseApiResponse) Set(val *MultiAccountOverviewResponseApiResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableMultiAccountOverviewResponseApiResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableMultiAccountOverviewResponseApiResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMultiAccountOverviewResponseApiResponse(val *MultiAccountOverviewResponseApiResponse) *NullableMultiAccountOverviewResponseApiResponse {
	return &NullableMultiAccountOverviewResponseApiResponse{value: val, isSet: true}
}

func (v NullableMultiAccountOverviewResponseApiResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMultiAccountOverviewResponseApiResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
