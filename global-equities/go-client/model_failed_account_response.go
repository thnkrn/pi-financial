/*
Pi.GlobalEquities.API, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package go_client

import (
	"encoding/json"
)

// checks if the FailedAccountResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FailedAccountResponse{}

// FailedAccountResponse struct for FailedAccountResponse
type FailedAccountResponse struct {
	AccountId               NullableString `json:"accountId,omitempty"`
	TradingAccountNoDisplay NullableString `json:"tradingAccountNoDisplay,omitempty"`
	TradingAccountNo        NullableString `json:"tradingAccountNo,omitempty"`
	CustCode                NullableString `json:"custCode,omitempty"`
	Error                   NullableString `json:"error,omitempty"`
}

// NewFailedAccountResponse instantiates a new FailedAccountResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFailedAccountResponse() *FailedAccountResponse {
	this := FailedAccountResponse{}
	return &this
}

// NewFailedAccountResponseWithDefaults instantiates a new FailedAccountResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFailedAccountResponseWithDefaults() *FailedAccountResponse {
	this := FailedAccountResponse{}
	return &this
}

// GetAccountId returns the AccountId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *FailedAccountResponse) GetAccountId() string {
	if o == nil || IsNil(o.AccountId.Get()) {
		var ret string
		return ret
	}
	return *o.AccountId.Get()
}

// GetAccountIdOk returns a tuple with the AccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *FailedAccountResponse) GetAccountIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AccountId.Get(), o.AccountId.IsSet()
}

// HasAccountId returns a boolean if a field has been set.
func (o *FailedAccountResponse) HasAccountId() bool {
	if o != nil && o.AccountId.IsSet() {
		return true
	}

	return false
}

// SetAccountId gets a reference to the given NullableString and assigns it to the AccountId field.
func (o *FailedAccountResponse) SetAccountId(v string) {
	o.AccountId.Set(&v)
}

// SetAccountIdNil sets the value for AccountId to be an explicit nil
func (o *FailedAccountResponse) SetAccountIdNil() {
	o.AccountId.Set(nil)
}

// UnsetAccountId ensures that no value is present for AccountId, not even an explicit nil
func (o *FailedAccountResponse) UnsetAccountId() {
	o.AccountId.Unset()
}

// GetTradingAccountNoDisplay returns the TradingAccountNoDisplay field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *FailedAccountResponse) GetTradingAccountNoDisplay() string {
	if o == nil || IsNil(o.TradingAccountNoDisplay.Get()) {
		var ret string
		return ret
	}
	return *o.TradingAccountNoDisplay.Get()
}

// GetTradingAccountNoDisplayOk returns a tuple with the TradingAccountNoDisplay field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *FailedAccountResponse) GetTradingAccountNoDisplayOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TradingAccountNoDisplay.Get(), o.TradingAccountNoDisplay.IsSet()
}

// HasTradingAccountNoDisplay returns a boolean if a field has been set.
func (o *FailedAccountResponse) HasTradingAccountNoDisplay() bool {
	if o != nil && o.TradingAccountNoDisplay.IsSet() {
		return true
	}

	return false
}

// SetTradingAccountNoDisplay gets a reference to the given NullableString and assigns it to the TradingAccountNoDisplay field.
func (o *FailedAccountResponse) SetTradingAccountNoDisplay(v string) {
	o.TradingAccountNoDisplay.Set(&v)
}

// SetTradingAccountNoDisplayNil sets the value for TradingAccountNoDisplay to be an explicit nil
func (o *FailedAccountResponse) SetTradingAccountNoDisplayNil() {
	o.TradingAccountNoDisplay.Set(nil)
}

// UnsetTradingAccountNoDisplay ensures that no value is present for TradingAccountNoDisplay, not even an explicit nil
func (o *FailedAccountResponse) UnsetTradingAccountNoDisplay() {
	o.TradingAccountNoDisplay.Unset()
}

// GetTradingAccountNo returns the TradingAccountNo field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *FailedAccountResponse) GetTradingAccountNo() string {
	if o == nil || IsNil(o.TradingAccountNo.Get()) {
		var ret string
		return ret
	}
	return *o.TradingAccountNo.Get()
}

// GetTradingAccountNoOk returns a tuple with the TradingAccountNo field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *FailedAccountResponse) GetTradingAccountNoOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TradingAccountNo.Get(), o.TradingAccountNo.IsSet()
}

// HasTradingAccountNo returns a boolean if a field has been set.
func (o *FailedAccountResponse) HasTradingAccountNo() bool {
	if o != nil && o.TradingAccountNo.IsSet() {
		return true
	}

	return false
}

// SetTradingAccountNo gets a reference to the given NullableString and assigns it to the TradingAccountNo field.
func (o *FailedAccountResponse) SetTradingAccountNo(v string) {
	o.TradingAccountNo.Set(&v)
}

// SetTradingAccountNoNil sets the value for TradingAccountNo to be an explicit nil
func (o *FailedAccountResponse) SetTradingAccountNoNil() {
	o.TradingAccountNo.Set(nil)
}

// UnsetTradingAccountNo ensures that no value is present for TradingAccountNo, not even an explicit nil
func (o *FailedAccountResponse) UnsetTradingAccountNo() {
	o.TradingAccountNo.Unset()
}

// GetCustCode returns the CustCode field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *FailedAccountResponse) GetCustCode() string {
	if o == nil || IsNil(o.CustCode.Get()) {
		var ret string
		return ret
	}
	return *o.CustCode.Get()
}

// GetCustCodeOk returns a tuple with the CustCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *FailedAccountResponse) GetCustCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CustCode.Get(), o.CustCode.IsSet()
}

// HasCustCode returns a boolean if a field has been set.
func (o *FailedAccountResponse) HasCustCode() bool {
	if o != nil && o.CustCode.IsSet() {
		return true
	}

	return false
}

// SetCustCode gets a reference to the given NullableString and assigns it to the CustCode field.
func (o *FailedAccountResponse) SetCustCode(v string) {
	o.CustCode.Set(&v)
}

// SetCustCodeNil sets the value for CustCode to be an explicit nil
func (o *FailedAccountResponse) SetCustCodeNil() {
	o.CustCode.Set(nil)
}

// UnsetCustCode ensures that no value is present for CustCode, not even an explicit nil
func (o *FailedAccountResponse) UnsetCustCode() {
	o.CustCode.Unset()
}

// GetError returns the Error field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *FailedAccountResponse) GetError() string {
	if o == nil || IsNil(o.Error.Get()) {
		var ret string
		return ret
	}
	return *o.Error.Get()
}

// GetErrorOk returns a tuple with the Error field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *FailedAccountResponse) GetErrorOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Error.Get(), o.Error.IsSet()
}

// HasError returns a boolean if a field has been set.
func (o *FailedAccountResponse) HasError() bool {
	if o != nil && o.Error.IsSet() {
		return true
	}

	return false
}

// SetError gets a reference to the given NullableString and assigns it to the Error field.
func (o *FailedAccountResponse) SetError(v string) {
	o.Error.Set(&v)
}

// SetErrorNil sets the value for Error to be an explicit nil
func (o *FailedAccountResponse) SetErrorNil() {
	o.Error.Set(nil)
}

// UnsetError ensures that no value is present for Error, not even an explicit nil
func (o *FailedAccountResponse) UnsetError() {
	o.Error.Unset()
}

func (o FailedAccountResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FailedAccountResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.AccountId.IsSet() {
		toSerialize["accountId"] = o.AccountId.Get()
	}
	if o.TradingAccountNoDisplay.IsSet() {
		toSerialize["tradingAccountNoDisplay"] = o.TradingAccountNoDisplay.Get()
	}
	if o.TradingAccountNo.IsSet() {
		toSerialize["tradingAccountNo"] = o.TradingAccountNo.Get()
	}
	if o.CustCode.IsSet() {
		toSerialize["custCode"] = o.CustCode.Get()
	}
	if o.Error.IsSet() {
		toSerialize["error"] = o.Error.Get()
	}
	return toSerialize, nil
}

type NullableFailedAccountResponse struct {
	value *FailedAccountResponse
	isSet bool
}

func (v NullableFailedAccountResponse) Get() *FailedAccountResponse {
	return v.value
}

func (v *NullableFailedAccountResponse) Set(val *FailedAccountResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableFailedAccountResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableFailedAccountResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFailedAccountResponse(val *FailedAccountResponse) *NullableFailedAccountResponse {
	return &NullableFailedAccountResponse{value: val, isSet: true}
}

func (v NullableFailedAccountResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFailedAccountResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
