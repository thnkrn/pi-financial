/*
Pi.GlobalEquities.API, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package go_client

import (
	"encoding/json"
)

// checks if the AccountSummaryValueResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AccountSummaryValueResponse{}

// AccountSummaryValueResponse struct for AccountSummaryValueResponse
type AccountSummaryValueResponse struct {
	Currency      *Currency `json:"currency,omitempty"`
	NetAssetValue *float32  `json:"netAssetValue,omitempty"`
	MarketValue   *float32  `json:"marketValue,omitempty"`
	Cost          *float32  `json:"cost,omitempty"`
	Upnl          *float32  `json:"upnl,omitempty"`
	UnusedCash    *float32  `json:"unusedCash,omitempty"`
	AccountLimit  *float32  `json:"accountLimit,omitempty"`
	LineAvailable *float32  `json:"lineAvailable,omitempty"`
}

// NewAccountSummaryValueResponse instantiates a new AccountSummaryValueResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAccountSummaryValueResponse() *AccountSummaryValueResponse {
	this := AccountSummaryValueResponse{}
	return &this
}

// NewAccountSummaryValueResponseWithDefaults instantiates a new AccountSummaryValueResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAccountSummaryValueResponseWithDefaults() *AccountSummaryValueResponse {
	this := AccountSummaryValueResponse{}
	return &this
}

// GetCurrency returns the Currency field value if set, zero value otherwise.
func (o *AccountSummaryValueResponse) GetCurrency() Currency {
	if o == nil || IsNil(o.Currency) {
		var ret Currency
		return ret
	}
	return *o.Currency
}

// GetCurrencyOk returns a tuple with the Currency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSummaryValueResponse) GetCurrencyOk() (*Currency, bool) {
	if o == nil || IsNil(o.Currency) {
		return nil, false
	}
	return o.Currency, true
}

// HasCurrency returns a boolean if a field has been set.
func (o *AccountSummaryValueResponse) HasCurrency() bool {
	if o != nil && !IsNil(o.Currency) {
		return true
	}

	return false
}

// SetCurrency gets a reference to the given Currency and assigns it to the Currency field.
func (o *AccountSummaryValueResponse) SetCurrency(v Currency) {
	o.Currency = &v
}

// GetNetAssetValue returns the NetAssetValue field value if set, zero value otherwise.
func (o *AccountSummaryValueResponse) GetNetAssetValue() float32 {
	if o == nil || IsNil(o.NetAssetValue) {
		var ret float32
		return ret
	}
	return *o.NetAssetValue
}

// GetNetAssetValueOk returns a tuple with the NetAssetValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSummaryValueResponse) GetNetAssetValueOk() (*float32, bool) {
	if o == nil || IsNil(o.NetAssetValue) {
		return nil, false
	}
	return o.NetAssetValue, true
}

// HasNetAssetValue returns a boolean if a field has been set.
func (o *AccountSummaryValueResponse) HasNetAssetValue() bool {
	if o != nil && !IsNil(o.NetAssetValue) {
		return true
	}

	return false
}

// SetNetAssetValue gets a reference to the given float32 and assigns it to the NetAssetValue field.
func (o *AccountSummaryValueResponse) SetNetAssetValue(v float32) {
	o.NetAssetValue = &v
}

// GetMarketValue returns the MarketValue field value if set, zero value otherwise.
func (o *AccountSummaryValueResponse) GetMarketValue() float32 {
	if o == nil || IsNil(o.MarketValue) {
		var ret float32
		return ret
	}
	return *o.MarketValue
}

// GetMarketValueOk returns a tuple with the MarketValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSummaryValueResponse) GetMarketValueOk() (*float32, bool) {
	if o == nil || IsNil(o.MarketValue) {
		return nil, false
	}
	return o.MarketValue, true
}

// HasMarketValue returns a boolean if a field has been set.
func (o *AccountSummaryValueResponse) HasMarketValue() bool {
	if o != nil && !IsNil(o.MarketValue) {
		return true
	}

	return false
}

// SetMarketValue gets a reference to the given float32 and assigns it to the MarketValue field.
func (o *AccountSummaryValueResponse) SetMarketValue(v float32) {
	o.MarketValue = &v
}

// GetCost returns the Cost field value if set, zero value otherwise.
func (o *AccountSummaryValueResponse) GetCost() float32 {
	if o == nil || IsNil(o.Cost) {
		var ret float32
		return ret
	}
	return *o.Cost
}

// GetCostOk returns a tuple with the Cost field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSummaryValueResponse) GetCostOk() (*float32, bool) {
	if o == nil || IsNil(o.Cost) {
		return nil, false
	}
	return o.Cost, true
}

// HasCost returns a boolean if a field has been set.
func (o *AccountSummaryValueResponse) HasCost() bool {
	if o != nil && !IsNil(o.Cost) {
		return true
	}

	return false
}

// SetCost gets a reference to the given float32 and assigns it to the Cost field.
func (o *AccountSummaryValueResponse) SetCost(v float32) {
	o.Cost = &v
}

// GetUpnl returns the Upnl field value if set, zero value otherwise.
func (o *AccountSummaryValueResponse) GetUpnl() float32 {
	if o == nil || IsNil(o.Upnl) {
		var ret float32
		return ret
	}
	return *o.Upnl
}

// GetUpnlOk returns a tuple with the Upnl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSummaryValueResponse) GetUpnlOk() (*float32, bool) {
	if o == nil || IsNil(o.Upnl) {
		return nil, false
	}
	return o.Upnl, true
}

// HasUpnl returns a boolean if a field has been set.
func (o *AccountSummaryValueResponse) HasUpnl() bool {
	if o != nil && !IsNil(o.Upnl) {
		return true
	}

	return false
}

// SetUpnl gets a reference to the given float32 and assigns it to the Upnl field.
func (o *AccountSummaryValueResponse) SetUpnl(v float32) {
	o.Upnl = &v
}

// GetUnusedCash returns the UnusedCash field value if set, zero value otherwise.
func (o *AccountSummaryValueResponse) GetUnusedCash() float32 {
	if o == nil || IsNil(o.UnusedCash) {
		var ret float32
		return ret
	}
	return *o.UnusedCash
}

// GetUnusedCashOk returns a tuple with the UnusedCash field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSummaryValueResponse) GetUnusedCashOk() (*float32, bool) {
	if o == nil || IsNil(o.UnusedCash) {
		return nil, false
	}
	return o.UnusedCash, true
}

// HasUnusedCash returns a boolean if a field has been set.
func (o *AccountSummaryValueResponse) HasUnusedCash() bool {
	if o != nil && !IsNil(o.UnusedCash) {
		return true
	}

	return false
}

// SetUnusedCash gets a reference to the given float32 and assigns it to the UnusedCash field.
func (o *AccountSummaryValueResponse) SetUnusedCash(v float32) {
	o.UnusedCash = &v
}

// GetAccountLimit returns the AccountLimit field value if set, zero value otherwise.
func (o *AccountSummaryValueResponse) GetAccountLimit() float32 {
	if o == nil || IsNil(o.AccountLimit) {
		var ret float32
		return ret
	}
	return *o.AccountLimit
}

// GetAccountLimitOk returns a tuple with the AccountLimit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSummaryValueResponse) GetAccountLimitOk() (*float32, bool) {
	if o == nil || IsNil(o.AccountLimit) {
		return nil, false
	}
	return o.AccountLimit, true
}

// HasAccountLimit returns a boolean if a field has been set.
func (o *AccountSummaryValueResponse) HasAccountLimit() bool {
	if o != nil && !IsNil(o.AccountLimit) {
		return true
	}

	return false
}

// SetAccountLimit gets a reference to the given float32 and assigns it to the AccountLimit field.
func (o *AccountSummaryValueResponse) SetAccountLimit(v float32) {
	o.AccountLimit = &v
}

// GetLineAvailable returns the LineAvailable field value if set, zero value otherwise.
func (o *AccountSummaryValueResponse) GetLineAvailable() float32 {
	if o == nil || IsNil(o.LineAvailable) {
		var ret float32
		return ret
	}
	return *o.LineAvailable
}

// GetLineAvailableOk returns a tuple with the LineAvailable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSummaryValueResponse) GetLineAvailableOk() (*float32, bool) {
	if o == nil || IsNil(o.LineAvailable) {
		return nil, false
	}
	return o.LineAvailable, true
}

// HasLineAvailable returns a boolean if a field has been set.
func (o *AccountSummaryValueResponse) HasLineAvailable() bool {
	if o != nil && !IsNil(o.LineAvailable) {
		return true
	}

	return false
}

// SetLineAvailable gets a reference to the given float32 and assigns it to the LineAvailable field.
func (o *AccountSummaryValueResponse) SetLineAvailable(v float32) {
	o.LineAvailable = &v
}

func (o AccountSummaryValueResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AccountSummaryValueResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Currency) {
		toSerialize["currency"] = o.Currency
	}
	if !IsNil(o.NetAssetValue) {
		toSerialize["netAssetValue"] = o.NetAssetValue
	}
	if !IsNil(o.MarketValue) {
		toSerialize["marketValue"] = o.MarketValue
	}
	if !IsNil(o.Cost) {
		toSerialize["cost"] = o.Cost
	}
	if !IsNil(o.Upnl) {
		toSerialize["upnl"] = o.Upnl
	}
	if !IsNil(o.UnusedCash) {
		toSerialize["unusedCash"] = o.UnusedCash
	}
	if !IsNil(o.AccountLimit) {
		toSerialize["accountLimit"] = o.AccountLimit
	}
	if !IsNil(o.LineAvailable) {
		toSerialize["lineAvailable"] = o.LineAvailable
	}
	return toSerialize, nil
}

type NullableAccountSummaryValueResponse struct {
	value *AccountSummaryValueResponse
	isSet bool
}

func (v NullableAccountSummaryValueResponse) Get() *AccountSummaryValueResponse {
	return v.value
}

func (v *NullableAccountSummaryValueResponse) Set(val *AccountSummaryValueResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableAccountSummaryValueResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableAccountSummaryValueResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAccountSummaryValueResponse(val *AccountSummaryValueResponse) *NullableAccountSummaryValueResponse {
	return &NullableAccountSummaryValueResponse{value: val, isSet: true}
}

func (v NullableAccountSummaryValueResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAccountSummaryValueResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
