/*
Pi.GlobalEquities.API, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package go_client

import (
	"encoding/json"
)

// checks if the AccountOverviewResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AccountOverviewResponse{}

// AccountOverviewResponse struct for AccountOverviewResponse
type AccountOverviewResponse struct {
	AccountId               NullableString `json:"accountId,omitempty"`
	TradingAccountNoDisplay NullableString `json:"tradingAccountNoDisplay,omitempty"`
	// Format as {CustCode}-2
	TradingAccountNo NullableString `json:"tradingAccountNo,omitempty"`
	Currency         *Currency      `json:"currency,omitempty"`
	ExchangeRate     *ExchangeRate  `json:"exchangeRate,omitempty"`
	NetAssetValue    *float32       `json:"netAssetValue,omitempty"`
	MarketValue      *float32       `json:"marketValue,omitempty"`
	Cost             *float32       `json:"cost,omitempty"`
	Upnl             *float32       `json:"upnl,omitempty"`
	UpnlPercentage   *float32       `json:"upnlPercentage,omitempty"`
	AccountLimit     *float32       `json:"accountLimit,omitempty"`
	CashBalance      *float32       `json:"cashBalance,omitempty"`
	LineAvailable    *float32       `json:"lineAvailable,omitempty"`
}

// NewAccountOverviewResponse instantiates a new AccountOverviewResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAccountOverviewResponse() *AccountOverviewResponse {
	this := AccountOverviewResponse{}
	return &this
}

// NewAccountOverviewResponseWithDefaults instantiates a new AccountOverviewResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAccountOverviewResponseWithDefaults() *AccountOverviewResponse {
	this := AccountOverviewResponse{}
	return &this
}

// GetAccountId returns the AccountId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AccountOverviewResponse) GetAccountId() string {
	if o == nil || IsNil(o.AccountId.Get()) {
		var ret string
		return ret
	}
	return *o.AccountId.Get()
}

// GetAccountIdOk returns a tuple with the AccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AccountOverviewResponse) GetAccountIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AccountId.Get(), o.AccountId.IsSet()
}

// HasAccountId returns a boolean if a field has been set.
func (o *AccountOverviewResponse) HasAccountId() bool {
	if o != nil && o.AccountId.IsSet() {
		return true
	}

	return false
}

// SetAccountId gets a reference to the given NullableString and assigns it to the AccountId field.
func (o *AccountOverviewResponse) SetAccountId(v string) {
	o.AccountId.Set(&v)
}

// SetAccountIdNil sets the value for AccountId to be an explicit nil
func (o *AccountOverviewResponse) SetAccountIdNil() {
	o.AccountId.Set(nil)
}

// UnsetAccountId ensures that no value is present for AccountId, not even an explicit nil
func (o *AccountOverviewResponse) UnsetAccountId() {
	o.AccountId.Unset()
}

// GetTradingAccountNoDisplay returns the TradingAccountNoDisplay field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AccountOverviewResponse) GetTradingAccountNoDisplay() string {
	if o == nil || IsNil(o.TradingAccountNoDisplay.Get()) {
		var ret string
		return ret
	}
	return *o.TradingAccountNoDisplay.Get()
}

// GetTradingAccountNoDisplayOk returns a tuple with the TradingAccountNoDisplay field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AccountOverviewResponse) GetTradingAccountNoDisplayOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TradingAccountNoDisplay.Get(), o.TradingAccountNoDisplay.IsSet()
}

// HasTradingAccountNoDisplay returns a boolean if a field has been set.
func (o *AccountOverviewResponse) HasTradingAccountNoDisplay() bool {
	if o != nil && o.TradingAccountNoDisplay.IsSet() {
		return true
	}

	return false
}

// SetTradingAccountNoDisplay gets a reference to the given NullableString and assigns it to the TradingAccountNoDisplay field.
func (o *AccountOverviewResponse) SetTradingAccountNoDisplay(v string) {
	o.TradingAccountNoDisplay.Set(&v)
}

// SetTradingAccountNoDisplayNil sets the value for TradingAccountNoDisplay to be an explicit nil
func (o *AccountOverviewResponse) SetTradingAccountNoDisplayNil() {
	o.TradingAccountNoDisplay.Set(nil)
}

// UnsetTradingAccountNoDisplay ensures that no value is present for TradingAccountNoDisplay, not even an explicit nil
func (o *AccountOverviewResponse) UnsetTradingAccountNoDisplay() {
	o.TradingAccountNoDisplay.Unset()
}

// GetTradingAccountNo returns the TradingAccountNo field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AccountOverviewResponse) GetTradingAccountNo() string {
	if o == nil || IsNil(o.TradingAccountNo.Get()) {
		var ret string
		return ret
	}
	return *o.TradingAccountNo.Get()
}

// GetTradingAccountNoOk returns a tuple with the TradingAccountNo field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AccountOverviewResponse) GetTradingAccountNoOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TradingAccountNo.Get(), o.TradingAccountNo.IsSet()
}

// HasTradingAccountNo returns a boolean if a field has been set.
func (o *AccountOverviewResponse) HasTradingAccountNo() bool {
	if o != nil && o.TradingAccountNo.IsSet() {
		return true
	}

	return false
}

// SetTradingAccountNo gets a reference to the given NullableString and assigns it to the TradingAccountNo field.
func (o *AccountOverviewResponse) SetTradingAccountNo(v string) {
	o.TradingAccountNo.Set(&v)
}

// SetTradingAccountNoNil sets the value for TradingAccountNo to be an explicit nil
func (o *AccountOverviewResponse) SetTradingAccountNoNil() {
	o.TradingAccountNo.Set(nil)
}

// UnsetTradingAccountNo ensures that no value is present for TradingAccountNo, not even an explicit nil
func (o *AccountOverviewResponse) UnsetTradingAccountNo() {
	o.TradingAccountNo.Unset()
}

// GetCurrency returns the Currency field value if set, zero value otherwise.
func (o *AccountOverviewResponse) GetCurrency() Currency {
	if o == nil || IsNil(o.Currency) {
		var ret Currency
		return ret
	}
	return *o.Currency
}

// GetCurrencyOk returns a tuple with the Currency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountOverviewResponse) GetCurrencyOk() (*Currency, bool) {
	if o == nil || IsNil(o.Currency) {
		return nil, false
	}
	return o.Currency, true
}

// HasCurrency returns a boolean if a field has been set.
func (o *AccountOverviewResponse) HasCurrency() bool {
	if o != nil && !IsNil(o.Currency) {
		return true
	}

	return false
}

// SetCurrency gets a reference to the given Currency and assigns it to the Currency field.
func (o *AccountOverviewResponse) SetCurrency(v Currency) {
	o.Currency = &v
}

// GetExchangeRate returns the ExchangeRate field value if set, zero value otherwise.
func (o *AccountOverviewResponse) GetExchangeRate() ExchangeRate {
	if o == nil || IsNil(o.ExchangeRate) {
		var ret ExchangeRate
		return ret
	}
	return *o.ExchangeRate
}

// GetExchangeRateOk returns a tuple with the ExchangeRate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountOverviewResponse) GetExchangeRateOk() (*ExchangeRate, bool) {
	if o == nil || IsNil(o.ExchangeRate) {
		return nil, false
	}
	return o.ExchangeRate, true
}

// HasExchangeRate returns a boolean if a field has been set.
func (o *AccountOverviewResponse) HasExchangeRate() bool {
	if o != nil && !IsNil(o.ExchangeRate) {
		return true
	}

	return false
}

// SetExchangeRate gets a reference to the given ExchangeRate and assigns it to the ExchangeRate field.
func (o *AccountOverviewResponse) SetExchangeRate(v ExchangeRate) {
	o.ExchangeRate = &v
}

// GetNetAssetValue returns the NetAssetValue field value if set, zero value otherwise.
func (o *AccountOverviewResponse) GetNetAssetValue() float32 {
	if o == nil || IsNil(o.NetAssetValue) {
		var ret float32
		return ret
	}
	return *o.NetAssetValue
}

// GetNetAssetValueOk returns a tuple with the NetAssetValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountOverviewResponse) GetNetAssetValueOk() (*float32, bool) {
	if o == nil || IsNil(o.NetAssetValue) {
		return nil, false
	}
	return o.NetAssetValue, true
}

// HasNetAssetValue returns a boolean if a field has been set.
func (o *AccountOverviewResponse) HasNetAssetValue() bool {
	if o != nil && !IsNil(o.NetAssetValue) {
		return true
	}

	return false
}

// SetNetAssetValue gets a reference to the given float32 and assigns it to the NetAssetValue field.
func (o *AccountOverviewResponse) SetNetAssetValue(v float32) {
	o.NetAssetValue = &v
}

// GetMarketValue returns the MarketValue field value if set, zero value otherwise.
func (o *AccountOverviewResponse) GetMarketValue() float32 {
	if o == nil || IsNil(o.MarketValue) {
		var ret float32
		return ret
	}
	return *o.MarketValue
}

// GetMarketValueOk returns a tuple with the MarketValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountOverviewResponse) GetMarketValueOk() (*float32, bool) {
	if o == nil || IsNil(o.MarketValue) {
		return nil, false
	}
	return o.MarketValue, true
}

// HasMarketValue returns a boolean if a field has been set.
func (o *AccountOverviewResponse) HasMarketValue() bool {
	if o != nil && !IsNil(o.MarketValue) {
		return true
	}

	return false
}

// SetMarketValue gets a reference to the given float32 and assigns it to the MarketValue field.
func (o *AccountOverviewResponse) SetMarketValue(v float32) {
	o.MarketValue = &v
}

// GetCost returns the Cost field value if set, zero value otherwise.
func (o *AccountOverviewResponse) GetCost() float32 {
	if o == nil || IsNil(o.Cost) {
		var ret float32
		return ret
	}
	return *o.Cost
}

// GetCostOk returns a tuple with the Cost field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountOverviewResponse) GetCostOk() (*float32, bool) {
	if o == nil || IsNil(o.Cost) {
		return nil, false
	}
	return o.Cost, true
}

// HasCost returns a boolean if a field has been set.
func (o *AccountOverviewResponse) HasCost() bool {
	if o != nil && !IsNil(o.Cost) {
		return true
	}

	return false
}

// SetCost gets a reference to the given float32 and assigns it to the Cost field.
func (o *AccountOverviewResponse) SetCost(v float32) {
	o.Cost = &v
}

// GetUpnl returns the Upnl field value if set, zero value otherwise.
func (o *AccountOverviewResponse) GetUpnl() float32 {
	if o == nil || IsNil(o.Upnl) {
		var ret float32
		return ret
	}
	return *o.Upnl
}

// GetUpnlOk returns a tuple with the Upnl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountOverviewResponse) GetUpnlOk() (*float32, bool) {
	if o == nil || IsNil(o.Upnl) {
		return nil, false
	}
	return o.Upnl, true
}

// HasUpnl returns a boolean if a field has been set.
func (o *AccountOverviewResponse) HasUpnl() bool {
	if o != nil && !IsNil(o.Upnl) {
		return true
	}

	return false
}

// SetUpnl gets a reference to the given float32 and assigns it to the Upnl field.
func (o *AccountOverviewResponse) SetUpnl(v float32) {
	o.Upnl = &v
}

// GetUpnlPercentage returns the UpnlPercentage field value if set, zero value otherwise.
func (o *AccountOverviewResponse) GetUpnlPercentage() float32 {
	if o == nil || IsNil(o.UpnlPercentage) {
		var ret float32
		return ret
	}
	return *o.UpnlPercentage
}

// GetUpnlPercentageOk returns a tuple with the UpnlPercentage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountOverviewResponse) GetUpnlPercentageOk() (*float32, bool) {
	if o == nil || IsNil(o.UpnlPercentage) {
		return nil, false
	}
	return o.UpnlPercentage, true
}

// HasUpnlPercentage returns a boolean if a field has been set.
func (o *AccountOverviewResponse) HasUpnlPercentage() bool {
	if o != nil && !IsNil(o.UpnlPercentage) {
		return true
	}

	return false
}

// SetUpnlPercentage gets a reference to the given float32 and assigns it to the UpnlPercentage field.
func (o *AccountOverviewResponse) SetUpnlPercentage(v float32) {
	o.UpnlPercentage = &v
}

// GetAccountLimit returns the AccountLimit field value if set, zero value otherwise.
func (o *AccountOverviewResponse) GetAccountLimit() float32 {
	if o == nil || IsNil(o.AccountLimit) {
		var ret float32
		return ret
	}
	return *o.AccountLimit
}

// GetAccountLimitOk returns a tuple with the AccountLimit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountOverviewResponse) GetAccountLimitOk() (*float32, bool) {
	if o == nil || IsNil(o.AccountLimit) {
		return nil, false
	}
	return o.AccountLimit, true
}

// HasAccountLimit returns a boolean if a field has been set.
func (o *AccountOverviewResponse) HasAccountLimit() bool {
	if o != nil && !IsNil(o.AccountLimit) {
		return true
	}

	return false
}

// SetAccountLimit gets a reference to the given float32 and assigns it to the AccountLimit field.
func (o *AccountOverviewResponse) SetAccountLimit(v float32) {
	o.AccountLimit = &v
}

// GetCashBalance returns the CashBalance field value if set, zero value otherwise.
func (o *AccountOverviewResponse) GetCashBalance() float32 {
	if o == nil || IsNil(o.CashBalance) {
		var ret float32
		return ret
	}
	return *o.CashBalance
}

// GetCashBalanceOk returns a tuple with the CashBalance field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountOverviewResponse) GetCashBalanceOk() (*float32, bool) {
	if o == nil || IsNil(o.CashBalance) {
		return nil, false
	}
	return o.CashBalance, true
}

// HasCashBalance returns a boolean if a field has been set.
func (o *AccountOverviewResponse) HasCashBalance() bool {
	if o != nil && !IsNil(o.CashBalance) {
		return true
	}

	return false
}

// SetCashBalance gets a reference to the given float32 and assigns it to the CashBalance field.
func (o *AccountOverviewResponse) SetCashBalance(v float32) {
	o.CashBalance = &v
}

// GetLineAvailable returns the LineAvailable field value if set, zero value otherwise.
func (o *AccountOverviewResponse) GetLineAvailable() float32 {
	if o == nil || IsNil(o.LineAvailable) {
		var ret float32
		return ret
	}
	return *o.LineAvailable
}

// GetLineAvailableOk returns a tuple with the LineAvailable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountOverviewResponse) GetLineAvailableOk() (*float32, bool) {
	if o == nil || IsNil(o.LineAvailable) {
		return nil, false
	}
	return o.LineAvailable, true
}

// HasLineAvailable returns a boolean if a field has been set.
func (o *AccountOverviewResponse) HasLineAvailable() bool {
	if o != nil && !IsNil(o.LineAvailable) {
		return true
	}

	return false
}

// SetLineAvailable gets a reference to the given float32 and assigns it to the LineAvailable field.
func (o *AccountOverviewResponse) SetLineAvailable(v float32) {
	o.LineAvailable = &v
}

func (o AccountOverviewResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AccountOverviewResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.AccountId.IsSet() {
		toSerialize["accountId"] = o.AccountId.Get()
	}
	if o.TradingAccountNoDisplay.IsSet() {
		toSerialize["tradingAccountNoDisplay"] = o.TradingAccountNoDisplay.Get()
	}
	if o.TradingAccountNo.IsSet() {
		toSerialize["tradingAccountNo"] = o.TradingAccountNo.Get()
	}
	if !IsNil(o.Currency) {
		toSerialize["currency"] = o.Currency
	}
	if !IsNil(o.ExchangeRate) {
		toSerialize["exchangeRate"] = o.ExchangeRate
	}
	if !IsNil(o.NetAssetValue) {
		toSerialize["netAssetValue"] = o.NetAssetValue
	}
	if !IsNil(o.MarketValue) {
		toSerialize["marketValue"] = o.MarketValue
	}
	if !IsNil(o.Cost) {
		toSerialize["cost"] = o.Cost
	}
	if !IsNil(o.Upnl) {
		toSerialize["upnl"] = o.Upnl
	}
	if !IsNil(o.UpnlPercentage) {
		toSerialize["upnlPercentage"] = o.UpnlPercentage
	}
	if !IsNil(o.AccountLimit) {
		toSerialize["accountLimit"] = o.AccountLimit
	}
	if !IsNil(o.CashBalance) {
		toSerialize["cashBalance"] = o.CashBalance
	}
	if !IsNil(o.LineAvailable) {
		toSerialize["lineAvailable"] = o.LineAvailable
	}
	return toSerialize, nil
}

type NullableAccountOverviewResponse struct {
	value *AccountOverviewResponse
	isSet bool
}

func (v NullableAccountOverviewResponse) Get() *AccountOverviewResponse {
	return v.value
}

func (v *NullableAccountOverviewResponse) Set(val *AccountOverviewResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableAccountOverviewResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableAccountOverviewResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAccountOverviewResponse(val *AccountOverviewResponse) *NullableAccountOverviewResponse {
	return &NullableAccountOverviewResponse{value: val, isSet: true}
}

func (v NullableAccountOverviewResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAccountOverviewResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
