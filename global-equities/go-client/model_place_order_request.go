/*
Pi.GlobalEquities.API, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package go_client

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the PlaceOrderRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PlaceOrderRequest{}

// PlaceOrderRequest struct for PlaceOrderRequest
type PlaceOrderRequest struct {
	AccountId  string          `json:"accountId"`
	Venue      string          `json:"venue"`
	Symbol     string          `json:"symbol"`
	OrderType  OrderType       `json:"orderType"`
	Side       OrderSide       `json:"side"`
	Quantity   float32         `json:"quantity"`
	LimitPrice NullableFloat32 `json:"limitPrice,omitempty"`
	StopPrice  NullableFloat32 `json:"stopPrice,omitempty"`
}

type _PlaceOrderRequest PlaceOrderRequest

// NewPlaceOrderRequest instantiates a new PlaceOrderRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPlaceOrderRequest(accountId string, venue string, symbol string, orderType OrderType, side OrderSide, quantity float32) *PlaceOrderRequest {
	this := PlaceOrderRequest{}
	this.AccountId = accountId
	this.Venue = venue
	this.Symbol = symbol
	this.OrderType = orderType
	this.Side = side
	this.Quantity = quantity
	return &this
}

// NewPlaceOrderRequestWithDefaults instantiates a new PlaceOrderRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPlaceOrderRequestWithDefaults() *PlaceOrderRequest {
	this := PlaceOrderRequest{}
	return &this
}

// GetAccountId returns the AccountId field value
func (o *PlaceOrderRequest) GetAccountId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AccountId
}

// GetAccountIdOk returns a tuple with the AccountId field value
// and a boolean to check if the value has been set.
func (o *PlaceOrderRequest) GetAccountIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AccountId, true
}

// SetAccountId sets field value
func (o *PlaceOrderRequest) SetAccountId(v string) {
	o.AccountId = v
}

// GetVenue returns the Venue field value
func (o *PlaceOrderRequest) GetVenue() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Venue
}

// GetVenueOk returns a tuple with the Venue field value
// and a boolean to check if the value has been set.
func (o *PlaceOrderRequest) GetVenueOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Venue, true
}

// SetVenue sets field value
func (o *PlaceOrderRequest) SetVenue(v string) {
	o.Venue = v
}

// GetSymbol returns the Symbol field value
func (o *PlaceOrderRequest) GetSymbol() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Symbol
}

// GetSymbolOk returns a tuple with the Symbol field value
// and a boolean to check if the value has been set.
func (o *PlaceOrderRequest) GetSymbolOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Symbol, true
}

// SetSymbol sets field value
func (o *PlaceOrderRequest) SetSymbol(v string) {
	o.Symbol = v
}

// GetOrderType returns the OrderType field value
func (o *PlaceOrderRequest) GetOrderType() OrderType {
	if o == nil {
		var ret OrderType
		return ret
	}

	return o.OrderType
}

// GetOrderTypeOk returns a tuple with the OrderType field value
// and a boolean to check if the value has been set.
func (o *PlaceOrderRequest) GetOrderTypeOk() (*OrderType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OrderType, true
}

// SetOrderType sets field value
func (o *PlaceOrderRequest) SetOrderType(v OrderType) {
	o.OrderType = v
}

// GetSide returns the Side field value
func (o *PlaceOrderRequest) GetSide() OrderSide {
	if o == nil {
		var ret OrderSide
		return ret
	}

	return o.Side
}

// GetSideOk returns a tuple with the Side field value
// and a boolean to check if the value has been set.
func (o *PlaceOrderRequest) GetSideOk() (*OrderSide, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Side, true
}

// SetSide sets field value
func (o *PlaceOrderRequest) SetSide(v OrderSide) {
	o.Side = v
}

// GetQuantity returns the Quantity field value
func (o *PlaceOrderRequest) GetQuantity() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Quantity
}

// GetQuantityOk returns a tuple with the Quantity field value
// and a boolean to check if the value has been set.
func (o *PlaceOrderRequest) GetQuantityOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Quantity, true
}

// SetQuantity sets field value
func (o *PlaceOrderRequest) SetQuantity(v float32) {
	o.Quantity = v
}

// GetLimitPrice returns the LimitPrice field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PlaceOrderRequest) GetLimitPrice() float32 {
	if o == nil || IsNil(o.LimitPrice.Get()) {
		var ret float32
		return ret
	}
	return *o.LimitPrice.Get()
}

// GetLimitPriceOk returns a tuple with the LimitPrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PlaceOrderRequest) GetLimitPriceOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return o.LimitPrice.Get(), o.LimitPrice.IsSet()
}

// HasLimitPrice returns a boolean if a field has been set.
func (o *PlaceOrderRequest) HasLimitPrice() bool {
	if o != nil && o.LimitPrice.IsSet() {
		return true
	}

	return false
}

// SetLimitPrice gets a reference to the given NullableFloat32 and assigns it to the LimitPrice field.
func (o *PlaceOrderRequest) SetLimitPrice(v float32) {
	o.LimitPrice.Set(&v)
}

// SetLimitPriceNil sets the value for LimitPrice to be an explicit nil
func (o *PlaceOrderRequest) SetLimitPriceNil() {
	o.LimitPrice.Set(nil)
}

// UnsetLimitPrice ensures that no value is present for LimitPrice, not even an explicit nil
func (o *PlaceOrderRequest) UnsetLimitPrice() {
	o.LimitPrice.Unset()
}

// GetStopPrice returns the StopPrice field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PlaceOrderRequest) GetStopPrice() float32 {
	if o == nil || IsNil(o.StopPrice.Get()) {
		var ret float32
		return ret
	}
	return *o.StopPrice.Get()
}

// GetStopPriceOk returns a tuple with the StopPrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PlaceOrderRequest) GetStopPriceOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return o.StopPrice.Get(), o.StopPrice.IsSet()
}

// HasStopPrice returns a boolean if a field has been set.
func (o *PlaceOrderRequest) HasStopPrice() bool {
	if o != nil && o.StopPrice.IsSet() {
		return true
	}

	return false
}

// SetStopPrice gets a reference to the given NullableFloat32 and assigns it to the StopPrice field.
func (o *PlaceOrderRequest) SetStopPrice(v float32) {
	o.StopPrice.Set(&v)
}

// SetStopPriceNil sets the value for StopPrice to be an explicit nil
func (o *PlaceOrderRequest) SetStopPriceNil() {
	o.StopPrice.Set(nil)
}

// UnsetStopPrice ensures that no value is present for StopPrice, not even an explicit nil
func (o *PlaceOrderRequest) UnsetStopPrice() {
	o.StopPrice.Unset()
}

func (o PlaceOrderRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PlaceOrderRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["accountId"] = o.AccountId
	toSerialize["venue"] = o.Venue
	toSerialize["symbol"] = o.Symbol
	toSerialize["orderType"] = o.OrderType
	toSerialize["side"] = o.Side
	toSerialize["quantity"] = o.Quantity
	if o.LimitPrice.IsSet() {
		toSerialize["limitPrice"] = o.LimitPrice.Get()
	}
	if o.StopPrice.IsSet() {
		toSerialize["stopPrice"] = o.StopPrice.Get()
	}
	return toSerialize, nil
}

func (o *PlaceOrderRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"accountId",
		"venue",
		"symbol",
		"orderType",
		"side",
		"quantity",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varPlaceOrderRequest := _PlaceOrderRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varPlaceOrderRequest)

	if err != nil {
		return err
	}

	*o = PlaceOrderRequest(varPlaceOrderRequest)

	return err
}

type NullablePlaceOrderRequest struct {
	value *PlaceOrderRequest
	isSet bool
}

func (v NullablePlaceOrderRequest) Get() *PlaceOrderRequest {
	return v.value
}

func (v *NullablePlaceOrderRequest) Set(val *PlaceOrderRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePlaceOrderRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePlaceOrderRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePlaceOrderRequest(val *PlaceOrderRequest) *NullablePlaceOrderRequest {
	return &NullablePlaceOrderRequest{value: val, isSet: true}
}

func (v NullablePlaceOrderRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePlaceOrderRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
