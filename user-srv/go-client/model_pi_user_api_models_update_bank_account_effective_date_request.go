/*
Pi.User.API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package go_client

import (
	"encoding/json"
	"time"
)

// checks if the PiUserAPIModelsUpdateBankAccountEffectiveDateRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PiUserAPIModelsUpdateBankAccountEffectiveDateRequest{}

// PiUserAPIModelsUpdateBankAccountEffectiveDateRequest struct for PiUserAPIModelsUpdateBankAccountEffectiveDateRequest
type PiUserAPIModelsUpdateBankAccountEffectiveDateRequest struct {
	UserId         *string        `json:"userId,omitempty"`
	CustomerCode   NullableString `json:"customerCode,omitempty"`
	BankAccountNo  NullableString `json:"bankAccountNo,omitempty"`
	BankCode       NullableString `json:"bankCode,omitempty"`
	BankBranchCode NullableString `json:"bankBranchCode,omitempty"`
	EffectiveDate  *time.Time     `json:"effectiveDate,omitempty"`
	EndDate        *time.Time     `json:"endDate,omitempty"`
}

// NewPiUserAPIModelsUpdateBankAccountEffectiveDateRequest instantiates a new PiUserAPIModelsUpdateBankAccountEffectiveDateRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPiUserAPIModelsUpdateBankAccountEffectiveDateRequest() *PiUserAPIModelsUpdateBankAccountEffectiveDateRequest {
	this := PiUserAPIModelsUpdateBankAccountEffectiveDateRequest{}
	return &this
}

// NewPiUserAPIModelsUpdateBankAccountEffectiveDateRequestWithDefaults instantiates a new PiUserAPIModelsUpdateBankAccountEffectiveDateRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPiUserAPIModelsUpdateBankAccountEffectiveDateRequestWithDefaults() *PiUserAPIModelsUpdateBankAccountEffectiveDateRequest {
	this := PiUserAPIModelsUpdateBankAccountEffectiveDateRequest{}
	return &this
}

// GetUserId returns the UserId field value if set, zero value otherwise.
func (o *PiUserAPIModelsUpdateBankAccountEffectiveDateRequest) GetUserId() string {
	if o == nil || IsNil(o.UserId) {
		var ret string
		return ret
	}
	return *o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PiUserAPIModelsUpdateBankAccountEffectiveDateRequest) GetUserIdOk() (*string, bool) {
	if o == nil || IsNil(o.UserId) {
		return nil, false
	}
	return o.UserId, true
}

// HasUserId returns a boolean if a field has been set.
func (o *PiUserAPIModelsUpdateBankAccountEffectiveDateRequest) HasUserId() bool {
	if o != nil && !IsNil(o.UserId) {
		return true
	}

	return false
}

// SetUserId gets a reference to the given string and assigns it to the UserId field.
func (o *PiUserAPIModelsUpdateBankAccountEffectiveDateRequest) SetUserId(v string) {
	o.UserId = &v
}

// GetCustomerCode returns the CustomerCode field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiUserAPIModelsUpdateBankAccountEffectiveDateRequest) GetCustomerCode() string {
	if o == nil || IsNil(o.CustomerCode.Get()) {
		var ret string
		return ret
	}
	return *o.CustomerCode.Get()
}

// GetCustomerCodeOk returns a tuple with the CustomerCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiUserAPIModelsUpdateBankAccountEffectiveDateRequest) GetCustomerCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CustomerCode.Get(), o.CustomerCode.IsSet()
}

// HasCustomerCode returns a boolean if a field has been set.
func (o *PiUserAPIModelsUpdateBankAccountEffectiveDateRequest) HasCustomerCode() bool {
	if o != nil && o.CustomerCode.IsSet() {
		return true
	}

	return false
}

// SetCustomerCode gets a reference to the given NullableString and assigns it to the CustomerCode field.
func (o *PiUserAPIModelsUpdateBankAccountEffectiveDateRequest) SetCustomerCode(v string) {
	o.CustomerCode.Set(&v)
}

// SetCustomerCodeNil sets the value for CustomerCode to be an explicit nil
func (o *PiUserAPIModelsUpdateBankAccountEffectiveDateRequest) SetCustomerCodeNil() {
	o.CustomerCode.Set(nil)
}

// UnsetCustomerCode ensures that no value is present for CustomerCode, not even an explicit nil
func (o *PiUserAPIModelsUpdateBankAccountEffectiveDateRequest) UnsetCustomerCode() {
	o.CustomerCode.Unset()
}

// GetBankAccountNo returns the BankAccountNo field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiUserAPIModelsUpdateBankAccountEffectiveDateRequest) GetBankAccountNo() string {
	if o == nil || IsNil(o.BankAccountNo.Get()) {
		var ret string
		return ret
	}
	return *o.BankAccountNo.Get()
}

// GetBankAccountNoOk returns a tuple with the BankAccountNo field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiUserAPIModelsUpdateBankAccountEffectiveDateRequest) GetBankAccountNoOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.BankAccountNo.Get(), o.BankAccountNo.IsSet()
}

// HasBankAccountNo returns a boolean if a field has been set.
func (o *PiUserAPIModelsUpdateBankAccountEffectiveDateRequest) HasBankAccountNo() bool {
	if o != nil && o.BankAccountNo.IsSet() {
		return true
	}

	return false
}

// SetBankAccountNo gets a reference to the given NullableString and assigns it to the BankAccountNo field.
func (o *PiUserAPIModelsUpdateBankAccountEffectiveDateRequest) SetBankAccountNo(v string) {
	o.BankAccountNo.Set(&v)
}

// SetBankAccountNoNil sets the value for BankAccountNo to be an explicit nil
func (o *PiUserAPIModelsUpdateBankAccountEffectiveDateRequest) SetBankAccountNoNil() {
	o.BankAccountNo.Set(nil)
}

// UnsetBankAccountNo ensures that no value is present for BankAccountNo, not even an explicit nil
func (o *PiUserAPIModelsUpdateBankAccountEffectiveDateRequest) UnsetBankAccountNo() {
	o.BankAccountNo.Unset()
}

// GetBankCode returns the BankCode field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiUserAPIModelsUpdateBankAccountEffectiveDateRequest) GetBankCode() string {
	if o == nil || IsNil(o.BankCode.Get()) {
		var ret string
		return ret
	}
	return *o.BankCode.Get()
}

// GetBankCodeOk returns a tuple with the BankCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiUserAPIModelsUpdateBankAccountEffectiveDateRequest) GetBankCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.BankCode.Get(), o.BankCode.IsSet()
}

// HasBankCode returns a boolean if a field has been set.
func (o *PiUserAPIModelsUpdateBankAccountEffectiveDateRequest) HasBankCode() bool {
	if o != nil && o.BankCode.IsSet() {
		return true
	}

	return false
}

// SetBankCode gets a reference to the given NullableString and assigns it to the BankCode field.
func (o *PiUserAPIModelsUpdateBankAccountEffectiveDateRequest) SetBankCode(v string) {
	o.BankCode.Set(&v)
}

// SetBankCodeNil sets the value for BankCode to be an explicit nil
func (o *PiUserAPIModelsUpdateBankAccountEffectiveDateRequest) SetBankCodeNil() {
	o.BankCode.Set(nil)
}

// UnsetBankCode ensures that no value is present for BankCode, not even an explicit nil
func (o *PiUserAPIModelsUpdateBankAccountEffectiveDateRequest) UnsetBankCode() {
	o.BankCode.Unset()
}

// GetBankBranchCode returns the BankBranchCode field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiUserAPIModelsUpdateBankAccountEffectiveDateRequest) GetBankBranchCode() string {
	if o == nil || IsNil(o.BankBranchCode.Get()) {
		var ret string
		return ret
	}
	return *o.BankBranchCode.Get()
}

// GetBankBranchCodeOk returns a tuple with the BankBranchCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiUserAPIModelsUpdateBankAccountEffectiveDateRequest) GetBankBranchCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.BankBranchCode.Get(), o.BankBranchCode.IsSet()
}

// HasBankBranchCode returns a boolean if a field has been set.
func (o *PiUserAPIModelsUpdateBankAccountEffectiveDateRequest) HasBankBranchCode() bool {
	if o != nil && o.BankBranchCode.IsSet() {
		return true
	}

	return false
}

// SetBankBranchCode gets a reference to the given NullableString and assigns it to the BankBranchCode field.
func (o *PiUserAPIModelsUpdateBankAccountEffectiveDateRequest) SetBankBranchCode(v string) {
	o.BankBranchCode.Set(&v)
}

// SetBankBranchCodeNil sets the value for BankBranchCode to be an explicit nil
func (o *PiUserAPIModelsUpdateBankAccountEffectiveDateRequest) SetBankBranchCodeNil() {
	o.BankBranchCode.Set(nil)
}

// UnsetBankBranchCode ensures that no value is present for BankBranchCode, not even an explicit nil
func (o *PiUserAPIModelsUpdateBankAccountEffectiveDateRequest) UnsetBankBranchCode() {
	o.BankBranchCode.Unset()
}

// GetEffectiveDate returns the EffectiveDate field value if set, zero value otherwise.
func (o *PiUserAPIModelsUpdateBankAccountEffectiveDateRequest) GetEffectiveDate() time.Time {
	if o == nil || IsNil(o.EffectiveDate) {
		var ret time.Time
		return ret
	}
	return *o.EffectiveDate
}

// GetEffectiveDateOk returns a tuple with the EffectiveDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PiUserAPIModelsUpdateBankAccountEffectiveDateRequest) GetEffectiveDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.EffectiveDate) {
		return nil, false
	}
	return o.EffectiveDate, true
}

// HasEffectiveDate returns a boolean if a field has been set.
func (o *PiUserAPIModelsUpdateBankAccountEffectiveDateRequest) HasEffectiveDate() bool {
	if o != nil && !IsNil(o.EffectiveDate) {
		return true
	}

	return false
}

// SetEffectiveDate gets a reference to the given time.Time and assigns it to the EffectiveDate field.
func (o *PiUserAPIModelsUpdateBankAccountEffectiveDateRequest) SetEffectiveDate(v time.Time) {
	o.EffectiveDate = &v
}

// GetEndDate returns the EndDate field value if set, zero value otherwise.
func (o *PiUserAPIModelsUpdateBankAccountEffectiveDateRequest) GetEndDate() time.Time {
	if o == nil || IsNil(o.EndDate) {
		var ret time.Time
		return ret
	}
	return *o.EndDate
}

// GetEndDateOk returns a tuple with the EndDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PiUserAPIModelsUpdateBankAccountEffectiveDateRequest) GetEndDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.EndDate) {
		return nil, false
	}
	return o.EndDate, true
}

// HasEndDate returns a boolean if a field has been set.
func (o *PiUserAPIModelsUpdateBankAccountEffectiveDateRequest) HasEndDate() bool {
	if o != nil && !IsNil(o.EndDate) {
		return true
	}

	return false
}

// SetEndDate gets a reference to the given time.Time and assigns it to the EndDate field.
func (o *PiUserAPIModelsUpdateBankAccountEffectiveDateRequest) SetEndDate(v time.Time) {
	o.EndDate = &v
}

func (o PiUserAPIModelsUpdateBankAccountEffectiveDateRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PiUserAPIModelsUpdateBankAccountEffectiveDateRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.UserId) {
		toSerialize["userId"] = o.UserId
	}
	if o.CustomerCode.IsSet() {
		toSerialize["customerCode"] = o.CustomerCode.Get()
	}
	if o.BankAccountNo.IsSet() {
		toSerialize["bankAccountNo"] = o.BankAccountNo.Get()
	}
	if o.BankCode.IsSet() {
		toSerialize["bankCode"] = o.BankCode.Get()
	}
	if o.BankBranchCode.IsSet() {
		toSerialize["bankBranchCode"] = o.BankBranchCode.Get()
	}
	if !IsNil(o.EffectiveDate) {
		toSerialize["effectiveDate"] = o.EffectiveDate
	}
	if !IsNil(o.EndDate) {
		toSerialize["endDate"] = o.EndDate
	}
	return toSerialize, nil
}

type NullablePiUserAPIModelsUpdateBankAccountEffectiveDateRequest struct {
	value *PiUserAPIModelsUpdateBankAccountEffectiveDateRequest
	isSet bool
}

func (v NullablePiUserAPIModelsUpdateBankAccountEffectiveDateRequest) Get() *PiUserAPIModelsUpdateBankAccountEffectiveDateRequest {
	return v.value
}

func (v *NullablePiUserAPIModelsUpdateBankAccountEffectiveDateRequest) Set(val *PiUserAPIModelsUpdateBankAccountEffectiveDateRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePiUserAPIModelsUpdateBankAccountEffectiveDateRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePiUserAPIModelsUpdateBankAccountEffectiveDateRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePiUserAPIModelsUpdateBankAccountEffectiveDateRequest(val *PiUserAPIModelsUpdateBankAccountEffectiveDateRequest) *NullablePiUserAPIModelsUpdateBankAccountEffectiveDateRequest {
	return &NullablePiUserAPIModelsUpdateBankAccountEffectiveDateRequest{value: val, isSet: true}
}

func (v NullablePiUserAPIModelsUpdateBankAccountEffectiveDateRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePiUserAPIModelsUpdateBankAccountEffectiveDateRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
