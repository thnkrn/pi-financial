/*
Pi.User.API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package go_client

import (
	"bytes"
	"encoding/json"
	"fmt"
	"time"
)

// checks if the PiUserDomainAggregatesModelUserInfoAggregateTradingAccount type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PiUserDomainAggregatesModelUserInfoAggregateTradingAccount{}

// PiUserDomainAggregatesModelUserInfoAggregateTradingAccount struct for PiUserDomainAggregatesModelUserInfoAggregateTradingAccount
type PiUserDomainAggregatesModelUserInfoAggregateTradingAccount struct {
	RowVersion       string                                                `json:"rowVersion"`
	Id               *string                                               `json:"id,omitempty"`
	TradingAccountId NullableString                                        `json:"tradingAccountId,omitempty"`
	AcctCode         NullableString                                        `json:"acctCode,omitempty"`
	UserInfoId       NullableString                                        `json:"userInfoId,omitempty"`
	UserInfo         *PiUserDomainAggregatesModelUserInfoAggregateUserInfo `json:"userInfo,omitempty"`
	CreatedAt        *time.Time                                            `json:"createdAt,omitempty"`
	UpdatedAt        NullableTime                                          `json:"updatedAt,omitempty"`
}

type _PiUserDomainAggregatesModelUserInfoAggregateTradingAccount PiUserDomainAggregatesModelUserInfoAggregateTradingAccount

// NewPiUserDomainAggregatesModelUserInfoAggregateTradingAccount instantiates a new PiUserDomainAggregatesModelUserInfoAggregateTradingAccount object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPiUserDomainAggregatesModelUserInfoAggregateTradingAccount(rowVersion string) *PiUserDomainAggregatesModelUserInfoAggregateTradingAccount {
	this := PiUserDomainAggregatesModelUserInfoAggregateTradingAccount{}
	this.RowVersion = rowVersion
	return &this
}

// NewPiUserDomainAggregatesModelUserInfoAggregateTradingAccountWithDefaults instantiates a new PiUserDomainAggregatesModelUserInfoAggregateTradingAccount object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPiUserDomainAggregatesModelUserInfoAggregateTradingAccountWithDefaults() *PiUserDomainAggregatesModelUserInfoAggregateTradingAccount {
	this := PiUserDomainAggregatesModelUserInfoAggregateTradingAccount{}
	return &this
}

// GetRowVersion returns the RowVersion field value
func (o *PiUserDomainAggregatesModelUserInfoAggregateTradingAccount) GetRowVersion() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RowVersion
}

// GetRowVersionOk returns a tuple with the RowVersion field value
// and a boolean to check if the value has been set.
func (o *PiUserDomainAggregatesModelUserInfoAggregateTradingAccount) GetRowVersionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RowVersion, true
}

// SetRowVersion sets field value
func (o *PiUserDomainAggregatesModelUserInfoAggregateTradingAccount) SetRowVersion(v string) {
	o.RowVersion = v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *PiUserDomainAggregatesModelUserInfoAggregateTradingAccount) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PiUserDomainAggregatesModelUserInfoAggregateTradingAccount) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *PiUserDomainAggregatesModelUserInfoAggregateTradingAccount) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *PiUserDomainAggregatesModelUserInfoAggregateTradingAccount) SetId(v string) {
	o.Id = &v
}

// GetTradingAccountId returns the TradingAccountId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiUserDomainAggregatesModelUserInfoAggregateTradingAccount) GetTradingAccountId() string {
	if o == nil || IsNil(o.TradingAccountId.Get()) {
		var ret string
		return ret
	}
	return *o.TradingAccountId.Get()
}

// GetTradingAccountIdOk returns a tuple with the TradingAccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiUserDomainAggregatesModelUserInfoAggregateTradingAccount) GetTradingAccountIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TradingAccountId.Get(), o.TradingAccountId.IsSet()
}

// HasTradingAccountId returns a boolean if a field has been set.
func (o *PiUserDomainAggregatesModelUserInfoAggregateTradingAccount) HasTradingAccountId() bool {
	if o != nil && o.TradingAccountId.IsSet() {
		return true
	}

	return false
}

// SetTradingAccountId gets a reference to the given NullableString and assigns it to the TradingAccountId field.
func (o *PiUserDomainAggregatesModelUserInfoAggregateTradingAccount) SetTradingAccountId(v string) {
	o.TradingAccountId.Set(&v)
}

// SetTradingAccountIdNil sets the value for TradingAccountId to be an explicit nil
func (o *PiUserDomainAggregatesModelUserInfoAggregateTradingAccount) SetTradingAccountIdNil() {
	o.TradingAccountId.Set(nil)
}

// UnsetTradingAccountId ensures that no value is present for TradingAccountId, not even an explicit nil
func (o *PiUserDomainAggregatesModelUserInfoAggregateTradingAccount) UnsetTradingAccountId() {
	o.TradingAccountId.Unset()
}

// GetAcctCode returns the AcctCode field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiUserDomainAggregatesModelUserInfoAggregateTradingAccount) GetAcctCode() string {
	if o == nil || IsNil(o.AcctCode.Get()) {
		var ret string
		return ret
	}
	return *o.AcctCode.Get()
}

// GetAcctCodeOk returns a tuple with the AcctCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiUserDomainAggregatesModelUserInfoAggregateTradingAccount) GetAcctCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AcctCode.Get(), o.AcctCode.IsSet()
}

// HasAcctCode returns a boolean if a field has been set.
func (o *PiUserDomainAggregatesModelUserInfoAggregateTradingAccount) HasAcctCode() bool {
	if o != nil && o.AcctCode.IsSet() {
		return true
	}

	return false
}

// SetAcctCode gets a reference to the given NullableString and assigns it to the AcctCode field.
func (o *PiUserDomainAggregatesModelUserInfoAggregateTradingAccount) SetAcctCode(v string) {
	o.AcctCode.Set(&v)
}

// SetAcctCodeNil sets the value for AcctCode to be an explicit nil
func (o *PiUserDomainAggregatesModelUserInfoAggregateTradingAccount) SetAcctCodeNil() {
	o.AcctCode.Set(nil)
}

// UnsetAcctCode ensures that no value is present for AcctCode, not even an explicit nil
func (o *PiUserDomainAggregatesModelUserInfoAggregateTradingAccount) UnsetAcctCode() {
	o.AcctCode.Unset()
}

// GetUserInfoId returns the UserInfoId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiUserDomainAggregatesModelUserInfoAggregateTradingAccount) GetUserInfoId() string {
	if o == nil || IsNil(o.UserInfoId.Get()) {
		var ret string
		return ret
	}
	return *o.UserInfoId.Get()
}

// GetUserInfoIdOk returns a tuple with the UserInfoId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiUserDomainAggregatesModelUserInfoAggregateTradingAccount) GetUserInfoIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.UserInfoId.Get(), o.UserInfoId.IsSet()
}

// HasUserInfoId returns a boolean if a field has been set.
func (o *PiUserDomainAggregatesModelUserInfoAggregateTradingAccount) HasUserInfoId() bool {
	if o != nil && o.UserInfoId.IsSet() {
		return true
	}

	return false
}

// SetUserInfoId gets a reference to the given NullableString and assigns it to the UserInfoId field.
func (o *PiUserDomainAggregatesModelUserInfoAggregateTradingAccount) SetUserInfoId(v string) {
	o.UserInfoId.Set(&v)
}

// SetUserInfoIdNil sets the value for UserInfoId to be an explicit nil
func (o *PiUserDomainAggregatesModelUserInfoAggregateTradingAccount) SetUserInfoIdNil() {
	o.UserInfoId.Set(nil)
}

// UnsetUserInfoId ensures that no value is present for UserInfoId, not even an explicit nil
func (o *PiUserDomainAggregatesModelUserInfoAggregateTradingAccount) UnsetUserInfoId() {
	o.UserInfoId.Unset()
}

// GetUserInfo returns the UserInfo field value if set, zero value otherwise.
func (o *PiUserDomainAggregatesModelUserInfoAggregateTradingAccount) GetUserInfo() PiUserDomainAggregatesModelUserInfoAggregateUserInfo {
	if o == nil || IsNil(o.UserInfo) {
		var ret PiUserDomainAggregatesModelUserInfoAggregateUserInfo
		return ret
	}
	return *o.UserInfo
}

// GetUserInfoOk returns a tuple with the UserInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PiUserDomainAggregatesModelUserInfoAggregateTradingAccount) GetUserInfoOk() (*PiUserDomainAggregatesModelUserInfoAggregateUserInfo, bool) {
	if o == nil || IsNil(o.UserInfo) {
		return nil, false
	}
	return o.UserInfo, true
}

// HasUserInfo returns a boolean if a field has been set.
func (o *PiUserDomainAggregatesModelUserInfoAggregateTradingAccount) HasUserInfo() bool {
	if o != nil && !IsNil(o.UserInfo) {
		return true
	}

	return false
}

// SetUserInfo gets a reference to the given PiUserDomainAggregatesModelUserInfoAggregateUserInfo and assigns it to the UserInfo field.
func (o *PiUserDomainAggregatesModelUserInfoAggregateTradingAccount) SetUserInfo(v PiUserDomainAggregatesModelUserInfoAggregateUserInfo) {
	o.UserInfo = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *PiUserDomainAggregatesModelUserInfoAggregateTradingAccount) GetCreatedAt() time.Time {
	if o == nil || IsNil(o.CreatedAt) {
		var ret time.Time
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PiUserDomainAggregatesModelUserInfoAggregateTradingAccount) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *PiUserDomainAggregatesModelUserInfoAggregateTradingAccount) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given time.Time and assigns it to the CreatedAt field.
func (o *PiUserDomainAggregatesModelUserInfoAggregateTradingAccount) SetCreatedAt(v time.Time) {
	o.CreatedAt = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiUserDomainAggregatesModelUserInfoAggregateTradingAccount) GetUpdatedAt() time.Time {
	if o == nil || IsNil(o.UpdatedAt.Get()) {
		var ret time.Time
		return ret
	}
	return *o.UpdatedAt.Get()
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiUserDomainAggregatesModelUserInfoAggregateTradingAccount) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.UpdatedAt.Get(), o.UpdatedAt.IsSet()
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *PiUserDomainAggregatesModelUserInfoAggregateTradingAccount) HasUpdatedAt() bool {
	if o != nil && o.UpdatedAt.IsSet() {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given NullableTime and assigns it to the UpdatedAt field.
func (o *PiUserDomainAggregatesModelUserInfoAggregateTradingAccount) SetUpdatedAt(v time.Time) {
	o.UpdatedAt.Set(&v)
}

// SetUpdatedAtNil sets the value for UpdatedAt to be an explicit nil
func (o *PiUserDomainAggregatesModelUserInfoAggregateTradingAccount) SetUpdatedAtNil() {
	o.UpdatedAt.Set(nil)
}

// UnsetUpdatedAt ensures that no value is present for UpdatedAt, not even an explicit nil
func (o *PiUserDomainAggregatesModelUserInfoAggregateTradingAccount) UnsetUpdatedAt() {
	o.UpdatedAt.Unset()
}

func (o PiUserDomainAggregatesModelUserInfoAggregateTradingAccount) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PiUserDomainAggregatesModelUserInfoAggregateTradingAccount) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["rowVersion"] = o.RowVersion
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if o.TradingAccountId.IsSet() {
		toSerialize["tradingAccountId"] = o.TradingAccountId.Get()
	}
	if o.AcctCode.IsSet() {
		toSerialize["acctCode"] = o.AcctCode.Get()
	}
	if o.UserInfoId.IsSet() {
		toSerialize["userInfoId"] = o.UserInfoId.Get()
	}
	if !IsNil(o.UserInfo) {
		toSerialize["userInfo"] = o.UserInfo
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["createdAt"] = o.CreatedAt
	}
	if o.UpdatedAt.IsSet() {
		toSerialize["updatedAt"] = o.UpdatedAt.Get()
	}
	return toSerialize, nil
}

func (o *PiUserDomainAggregatesModelUserInfoAggregateTradingAccount) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"rowVersion",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varPiUserDomainAggregatesModelUserInfoAggregateTradingAccount := _PiUserDomainAggregatesModelUserInfoAggregateTradingAccount{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varPiUserDomainAggregatesModelUserInfoAggregateTradingAccount)

	if err != nil {
		return err
	}

	*o = PiUserDomainAggregatesModelUserInfoAggregateTradingAccount(varPiUserDomainAggregatesModelUserInfoAggregateTradingAccount)

	return err
}

type NullablePiUserDomainAggregatesModelUserInfoAggregateTradingAccount struct {
	value *PiUserDomainAggregatesModelUserInfoAggregateTradingAccount
	isSet bool
}

func (v NullablePiUserDomainAggregatesModelUserInfoAggregateTradingAccount) Get() *PiUserDomainAggregatesModelUserInfoAggregateTradingAccount {
	return v.value
}

func (v *NullablePiUserDomainAggregatesModelUserInfoAggregateTradingAccount) Set(val *PiUserDomainAggregatesModelUserInfoAggregateTradingAccount) {
	v.value = val
	v.isSet = true
}

func (v NullablePiUserDomainAggregatesModelUserInfoAggregateTradingAccount) IsSet() bool {
	return v.isSet
}

func (v *NullablePiUserDomainAggregatesModelUserInfoAggregateTradingAccount) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePiUserDomainAggregatesModelUserInfoAggregateTradingAccount(val *PiUserDomainAggregatesModelUserInfoAggregateTradingAccount) *NullablePiUserDomainAggregatesModelUserInfoAggregateTradingAccount {
	return &NullablePiUserDomainAggregatesModelUserInfoAggregateTradingAccount{value: val, isSet: true}
}

func (v NullablePiUserDomainAggregatesModelUserInfoAggregateTradingAccount) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePiUserDomainAggregatesModelUserInfoAggregateTradingAccount) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
