/*
Pi.User.API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package go_client

import (
	"encoding/json"
)

// checks if the PiUserApplicationCommandsUploadDocumentRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PiUserApplicationCommandsUploadDocumentRequest{}

// PiUserApplicationCommandsUploadDocumentRequest struct for PiUserApplicationCommandsUploadDocumentRequest
type PiUserApplicationCommandsUploadDocumentRequest struct {
	Image   NullableString `json:"image,omitempty"`
	DocType *string        `json:"docType,omitempty"`
}

// NewPiUserApplicationCommandsUploadDocumentRequest instantiates a new PiUserApplicationCommandsUploadDocumentRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPiUserApplicationCommandsUploadDocumentRequest() *PiUserApplicationCommandsUploadDocumentRequest {
	this := PiUserApplicationCommandsUploadDocumentRequest{}
	return &this
}

// NewPiUserApplicationCommandsUploadDocumentRequestWithDefaults instantiates a new PiUserApplicationCommandsUploadDocumentRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPiUserApplicationCommandsUploadDocumentRequestWithDefaults() *PiUserApplicationCommandsUploadDocumentRequest {
	this := PiUserApplicationCommandsUploadDocumentRequest{}
	return &this
}

// GetImage returns the Image field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiUserApplicationCommandsUploadDocumentRequest) GetImage() string {
	if o == nil || IsNil(o.Image.Get()) {
		var ret string
		return ret
	}
	return *o.Image.Get()
}

// GetImageOk returns a tuple with the Image field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiUserApplicationCommandsUploadDocumentRequest) GetImageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Image.Get(), o.Image.IsSet()
}

// HasImage returns a boolean if a field has been set.
func (o *PiUserApplicationCommandsUploadDocumentRequest) HasImage() bool {
	if o != nil && o.Image.IsSet() {
		return true
	}

	return false
}

// SetImage gets a reference to the given NullableString and assigns it to the Image field.
func (o *PiUserApplicationCommandsUploadDocumentRequest) SetImage(v string) {
	o.Image.Set(&v)
}

// SetImageNil sets the value for Image to be an explicit nil
func (o *PiUserApplicationCommandsUploadDocumentRequest) SetImageNil() {
	o.Image.Set(nil)
}

// UnsetImage ensures that no value is present for Image, not even an explicit nil
func (o *PiUserApplicationCommandsUploadDocumentRequest) UnsetImage() {
	o.Image.Unset()
}

// GetDocType returns the DocType field value if set, zero value otherwise.
func (o *PiUserApplicationCommandsUploadDocumentRequest) GetDocType() string {
	if o == nil || IsNil(o.DocType) {
		var ret string
		return ret
	}
	return *o.DocType
}

// GetDocTypeOk returns a tuple with the DocType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PiUserApplicationCommandsUploadDocumentRequest) GetDocTypeOk() (*string, bool) {
	if o == nil || IsNil(o.DocType) {
		return nil, false
	}
	return o.DocType, true
}

// HasDocType returns a boolean if a field has been set.
func (o *PiUserApplicationCommandsUploadDocumentRequest) HasDocType() bool {
	if o != nil && !IsNil(o.DocType) {
		return true
	}

	return false
}

// SetDocType gets a reference to the given string and assigns it to the DocType field.
func (o *PiUserApplicationCommandsUploadDocumentRequest) SetDocType(v string) {
	o.DocType = &v
}

func (o PiUserApplicationCommandsUploadDocumentRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PiUserApplicationCommandsUploadDocumentRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Image.IsSet() {
		toSerialize["image"] = o.Image.Get()
	}
	if !IsNil(o.DocType) {
		toSerialize["docType"] = o.DocType
	}
	return toSerialize, nil
}

type NullablePiUserApplicationCommandsUploadDocumentRequest struct {
	value *PiUserApplicationCommandsUploadDocumentRequest
	isSet bool
}

func (v NullablePiUserApplicationCommandsUploadDocumentRequest) Get() *PiUserApplicationCommandsUploadDocumentRequest {
	return v.value
}

func (v *NullablePiUserApplicationCommandsUploadDocumentRequest) Set(val *PiUserApplicationCommandsUploadDocumentRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePiUserApplicationCommandsUploadDocumentRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePiUserApplicationCommandsUploadDocumentRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePiUserApplicationCommandsUploadDocumentRequest(val *PiUserApplicationCommandsUploadDocumentRequest) *NullablePiUserApplicationCommandsUploadDocumentRequest {
	return &NullablePiUserApplicationCommandsUploadDocumentRequest{value: val, isSet: true}
}

func (v NullablePiUserApplicationCommandsUploadDocumentRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePiUserApplicationCommandsUploadDocumentRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
