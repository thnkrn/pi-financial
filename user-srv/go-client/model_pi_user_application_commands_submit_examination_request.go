/*
Pi.User.API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package go_client

import (
	"encoding/json"
	"time"
)

// checks if the PiUserApplicationCommandsSubmitExaminationRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PiUserApplicationCommandsSubmitExaminationRequest{}

// PiUserApplicationCommandsSubmitExaminationRequest struct for PiUserApplicationCommandsSubmitExaminationRequest
type PiUserApplicationCommandsSubmitExaminationRequest struct {
	UserId    *string        `json:"userId,omitempty"`
	ExamId    *string        `json:"examId,omitempty"`
	ExamName  NullableString `json:"examName,omitempty"`
	Score     *int32         `json:"score,omitempty"`
	ExpiredAt *time.Time     `json:"expiredAt,omitempty"`
}

// NewPiUserApplicationCommandsSubmitExaminationRequest instantiates a new PiUserApplicationCommandsSubmitExaminationRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPiUserApplicationCommandsSubmitExaminationRequest() *PiUserApplicationCommandsSubmitExaminationRequest {
	this := PiUserApplicationCommandsSubmitExaminationRequest{}
	return &this
}

// NewPiUserApplicationCommandsSubmitExaminationRequestWithDefaults instantiates a new PiUserApplicationCommandsSubmitExaminationRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPiUserApplicationCommandsSubmitExaminationRequestWithDefaults() *PiUserApplicationCommandsSubmitExaminationRequest {
	this := PiUserApplicationCommandsSubmitExaminationRequest{}
	return &this
}

// GetUserId returns the UserId field value if set, zero value otherwise.
func (o *PiUserApplicationCommandsSubmitExaminationRequest) GetUserId() string {
	if o == nil || IsNil(o.UserId) {
		var ret string
		return ret
	}
	return *o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PiUserApplicationCommandsSubmitExaminationRequest) GetUserIdOk() (*string, bool) {
	if o == nil || IsNil(o.UserId) {
		return nil, false
	}
	return o.UserId, true
}

// HasUserId returns a boolean if a field has been set.
func (o *PiUserApplicationCommandsSubmitExaminationRequest) HasUserId() bool {
	if o != nil && !IsNil(o.UserId) {
		return true
	}

	return false
}

// SetUserId gets a reference to the given string and assigns it to the UserId field.
func (o *PiUserApplicationCommandsSubmitExaminationRequest) SetUserId(v string) {
	o.UserId = &v
}

// GetExamId returns the ExamId field value if set, zero value otherwise.
func (o *PiUserApplicationCommandsSubmitExaminationRequest) GetExamId() string {
	if o == nil || IsNil(o.ExamId) {
		var ret string
		return ret
	}
	return *o.ExamId
}

// GetExamIdOk returns a tuple with the ExamId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PiUserApplicationCommandsSubmitExaminationRequest) GetExamIdOk() (*string, bool) {
	if o == nil || IsNil(o.ExamId) {
		return nil, false
	}
	return o.ExamId, true
}

// HasExamId returns a boolean if a field has been set.
func (o *PiUserApplicationCommandsSubmitExaminationRequest) HasExamId() bool {
	if o != nil && !IsNil(o.ExamId) {
		return true
	}

	return false
}

// SetExamId gets a reference to the given string and assigns it to the ExamId field.
func (o *PiUserApplicationCommandsSubmitExaminationRequest) SetExamId(v string) {
	o.ExamId = &v
}

// GetExamName returns the ExamName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiUserApplicationCommandsSubmitExaminationRequest) GetExamName() string {
	if o == nil || IsNil(o.ExamName.Get()) {
		var ret string
		return ret
	}
	return *o.ExamName.Get()
}

// GetExamNameOk returns a tuple with the ExamName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiUserApplicationCommandsSubmitExaminationRequest) GetExamNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ExamName.Get(), o.ExamName.IsSet()
}

// HasExamName returns a boolean if a field has been set.
func (o *PiUserApplicationCommandsSubmitExaminationRequest) HasExamName() bool {
	if o != nil && o.ExamName.IsSet() {
		return true
	}

	return false
}

// SetExamName gets a reference to the given NullableString and assigns it to the ExamName field.
func (o *PiUserApplicationCommandsSubmitExaminationRequest) SetExamName(v string) {
	o.ExamName.Set(&v)
}

// SetExamNameNil sets the value for ExamName to be an explicit nil
func (o *PiUserApplicationCommandsSubmitExaminationRequest) SetExamNameNil() {
	o.ExamName.Set(nil)
}

// UnsetExamName ensures that no value is present for ExamName, not even an explicit nil
func (o *PiUserApplicationCommandsSubmitExaminationRequest) UnsetExamName() {
	o.ExamName.Unset()
}

// GetScore returns the Score field value if set, zero value otherwise.
func (o *PiUserApplicationCommandsSubmitExaminationRequest) GetScore() int32 {
	if o == nil || IsNil(o.Score) {
		var ret int32
		return ret
	}
	return *o.Score
}

// GetScoreOk returns a tuple with the Score field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PiUserApplicationCommandsSubmitExaminationRequest) GetScoreOk() (*int32, bool) {
	if o == nil || IsNil(o.Score) {
		return nil, false
	}
	return o.Score, true
}

// HasScore returns a boolean if a field has been set.
func (o *PiUserApplicationCommandsSubmitExaminationRequest) HasScore() bool {
	if o != nil && !IsNil(o.Score) {
		return true
	}

	return false
}

// SetScore gets a reference to the given int32 and assigns it to the Score field.
func (o *PiUserApplicationCommandsSubmitExaminationRequest) SetScore(v int32) {
	o.Score = &v
}

// GetExpiredAt returns the ExpiredAt field value if set, zero value otherwise.
func (o *PiUserApplicationCommandsSubmitExaminationRequest) GetExpiredAt() time.Time {
	if o == nil || IsNil(o.ExpiredAt) {
		var ret time.Time
		return ret
	}
	return *o.ExpiredAt
}

// GetExpiredAtOk returns a tuple with the ExpiredAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PiUserApplicationCommandsSubmitExaminationRequest) GetExpiredAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.ExpiredAt) {
		return nil, false
	}
	return o.ExpiredAt, true
}

// HasExpiredAt returns a boolean if a field has been set.
func (o *PiUserApplicationCommandsSubmitExaminationRequest) HasExpiredAt() bool {
	if o != nil && !IsNil(o.ExpiredAt) {
		return true
	}

	return false
}

// SetExpiredAt gets a reference to the given time.Time and assigns it to the ExpiredAt field.
func (o *PiUserApplicationCommandsSubmitExaminationRequest) SetExpiredAt(v time.Time) {
	o.ExpiredAt = &v
}

func (o PiUserApplicationCommandsSubmitExaminationRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PiUserApplicationCommandsSubmitExaminationRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.UserId) {
		toSerialize["userId"] = o.UserId
	}
	if !IsNil(o.ExamId) {
		toSerialize["examId"] = o.ExamId
	}
	if o.ExamName.IsSet() {
		toSerialize["examName"] = o.ExamName.Get()
	}
	if !IsNil(o.Score) {
		toSerialize["score"] = o.Score
	}
	if !IsNil(o.ExpiredAt) {
		toSerialize["expiredAt"] = o.ExpiredAt
	}
	return toSerialize, nil
}

type NullablePiUserApplicationCommandsSubmitExaminationRequest struct {
	value *PiUserApplicationCommandsSubmitExaminationRequest
	isSet bool
}

func (v NullablePiUserApplicationCommandsSubmitExaminationRequest) Get() *PiUserApplicationCommandsSubmitExaminationRequest {
	return v.value
}

func (v *NullablePiUserApplicationCommandsSubmitExaminationRequest) Set(val *PiUserApplicationCommandsSubmitExaminationRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePiUserApplicationCommandsSubmitExaminationRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePiUserApplicationCommandsSubmitExaminationRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePiUserApplicationCommandsSubmitExaminationRequest(val *PiUserApplicationCommandsSubmitExaminationRequest) *NullablePiUserApplicationCommandsSubmitExaminationRequest {
	return &NullablePiUserApplicationCommandsSubmitExaminationRequest{value: val, isSet: true}
}

func (v NullablePiUserApplicationCommandsSubmitExaminationRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePiUserApplicationCommandsSubmitExaminationRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
