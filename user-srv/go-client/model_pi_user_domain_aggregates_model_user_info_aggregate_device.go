/*
Pi.User.API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package go_client

import (
	"bytes"
	"encoding/json"
	"fmt"
	"time"
)

// checks if the PiUserDomainAggregatesModelUserInfoAggregateDevice type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PiUserDomainAggregatesModelUserInfoAggregateDevice{}

// PiUserDomainAggregatesModelUserInfoAggregateDevice struct for PiUserDomainAggregatesModelUserInfoAggregateDevice
type PiUserDomainAggregatesModelUserInfoAggregateDevice struct {
	RowVersion             string                                                              `json:"rowVersion"`
	Id                     *string                                                             `json:"id,omitempty"`
	DeviceId               *string                                                             `json:"deviceId,omitempty"`
	DeviceToken            NullableString                                                      `json:"deviceToken,omitempty"`
	DeviceIdentifier       NullableString                                                      `json:"deviceIdentifier,omitempty"`
	Language               NullableString                                                      `json:"language,omitempty"`
	Platform               NullableString                                                      `json:"platform,omitempty"`
	IsActive               *bool                                                               `json:"isActive,omitempty"`
	SubscriptionIdentifier NullableString                                                      `json:"subscriptionIdentifier,omitempty"`
	NotificationPreference *PiUserDomainAggregatesModelUserInfoAggregateNotificationPreference `json:"notificationPreference,omitempty"`
	UserInfoId             NullableString                                                      `json:"userInfoId,omitempty"`
	UserInfo               *PiUserDomainAggregatesModelUserInfoAggregateUserInfo               `json:"userInfo,omitempty"`
	CreatedAt              *time.Time                                                          `json:"createdAt,omitempty"`
	UpdatedAt              NullableTime                                                        `json:"updatedAt,omitempty"`
}

type _PiUserDomainAggregatesModelUserInfoAggregateDevice PiUserDomainAggregatesModelUserInfoAggregateDevice

// NewPiUserDomainAggregatesModelUserInfoAggregateDevice instantiates a new PiUserDomainAggregatesModelUserInfoAggregateDevice object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPiUserDomainAggregatesModelUserInfoAggregateDevice(rowVersion string) *PiUserDomainAggregatesModelUserInfoAggregateDevice {
	this := PiUserDomainAggregatesModelUserInfoAggregateDevice{}
	this.RowVersion = rowVersion
	return &this
}

// NewPiUserDomainAggregatesModelUserInfoAggregateDeviceWithDefaults instantiates a new PiUserDomainAggregatesModelUserInfoAggregateDevice object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPiUserDomainAggregatesModelUserInfoAggregateDeviceWithDefaults() *PiUserDomainAggregatesModelUserInfoAggregateDevice {
	this := PiUserDomainAggregatesModelUserInfoAggregateDevice{}
	return &this
}

// GetRowVersion returns the RowVersion field value
func (o *PiUserDomainAggregatesModelUserInfoAggregateDevice) GetRowVersion() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RowVersion
}

// GetRowVersionOk returns a tuple with the RowVersion field value
// and a boolean to check if the value has been set.
func (o *PiUserDomainAggregatesModelUserInfoAggregateDevice) GetRowVersionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RowVersion, true
}

// SetRowVersion sets field value
func (o *PiUserDomainAggregatesModelUserInfoAggregateDevice) SetRowVersion(v string) {
	o.RowVersion = v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *PiUserDomainAggregatesModelUserInfoAggregateDevice) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PiUserDomainAggregatesModelUserInfoAggregateDevice) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *PiUserDomainAggregatesModelUserInfoAggregateDevice) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *PiUserDomainAggregatesModelUserInfoAggregateDevice) SetId(v string) {
	o.Id = &v
}

// GetDeviceId returns the DeviceId field value if set, zero value otherwise.
func (o *PiUserDomainAggregatesModelUserInfoAggregateDevice) GetDeviceId() string {
	if o == nil || IsNil(o.DeviceId) {
		var ret string
		return ret
	}
	return *o.DeviceId
}

// GetDeviceIdOk returns a tuple with the DeviceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PiUserDomainAggregatesModelUserInfoAggregateDevice) GetDeviceIdOk() (*string, bool) {
	if o == nil || IsNil(o.DeviceId) {
		return nil, false
	}
	return o.DeviceId, true
}

// HasDeviceId returns a boolean if a field has been set.
func (o *PiUserDomainAggregatesModelUserInfoAggregateDevice) HasDeviceId() bool {
	if o != nil && !IsNil(o.DeviceId) {
		return true
	}

	return false
}

// SetDeviceId gets a reference to the given string and assigns it to the DeviceId field.
func (o *PiUserDomainAggregatesModelUserInfoAggregateDevice) SetDeviceId(v string) {
	o.DeviceId = &v
}

// GetDeviceToken returns the DeviceToken field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiUserDomainAggregatesModelUserInfoAggregateDevice) GetDeviceToken() string {
	if o == nil || IsNil(o.DeviceToken.Get()) {
		var ret string
		return ret
	}
	return *o.DeviceToken.Get()
}

// GetDeviceTokenOk returns a tuple with the DeviceToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiUserDomainAggregatesModelUserInfoAggregateDevice) GetDeviceTokenOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.DeviceToken.Get(), o.DeviceToken.IsSet()
}

// HasDeviceToken returns a boolean if a field has been set.
func (o *PiUserDomainAggregatesModelUserInfoAggregateDevice) HasDeviceToken() bool {
	if o != nil && o.DeviceToken.IsSet() {
		return true
	}

	return false
}

// SetDeviceToken gets a reference to the given NullableString and assigns it to the DeviceToken field.
func (o *PiUserDomainAggregatesModelUserInfoAggregateDevice) SetDeviceToken(v string) {
	o.DeviceToken.Set(&v)
}

// SetDeviceTokenNil sets the value for DeviceToken to be an explicit nil
func (o *PiUserDomainAggregatesModelUserInfoAggregateDevice) SetDeviceTokenNil() {
	o.DeviceToken.Set(nil)
}

// UnsetDeviceToken ensures that no value is present for DeviceToken, not even an explicit nil
func (o *PiUserDomainAggregatesModelUserInfoAggregateDevice) UnsetDeviceToken() {
	o.DeviceToken.Unset()
}

// GetDeviceIdentifier returns the DeviceIdentifier field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiUserDomainAggregatesModelUserInfoAggregateDevice) GetDeviceIdentifier() string {
	if o == nil || IsNil(o.DeviceIdentifier.Get()) {
		var ret string
		return ret
	}
	return *o.DeviceIdentifier.Get()
}

// GetDeviceIdentifierOk returns a tuple with the DeviceIdentifier field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiUserDomainAggregatesModelUserInfoAggregateDevice) GetDeviceIdentifierOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.DeviceIdentifier.Get(), o.DeviceIdentifier.IsSet()
}

// HasDeviceIdentifier returns a boolean if a field has been set.
func (o *PiUserDomainAggregatesModelUserInfoAggregateDevice) HasDeviceIdentifier() bool {
	if o != nil && o.DeviceIdentifier.IsSet() {
		return true
	}

	return false
}

// SetDeviceIdentifier gets a reference to the given NullableString and assigns it to the DeviceIdentifier field.
func (o *PiUserDomainAggregatesModelUserInfoAggregateDevice) SetDeviceIdentifier(v string) {
	o.DeviceIdentifier.Set(&v)
}

// SetDeviceIdentifierNil sets the value for DeviceIdentifier to be an explicit nil
func (o *PiUserDomainAggregatesModelUserInfoAggregateDevice) SetDeviceIdentifierNil() {
	o.DeviceIdentifier.Set(nil)
}

// UnsetDeviceIdentifier ensures that no value is present for DeviceIdentifier, not even an explicit nil
func (o *PiUserDomainAggregatesModelUserInfoAggregateDevice) UnsetDeviceIdentifier() {
	o.DeviceIdentifier.Unset()
}

// GetLanguage returns the Language field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiUserDomainAggregatesModelUserInfoAggregateDevice) GetLanguage() string {
	if o == nil || IsNil(o.Language.Get()) {
		var ret string
		return ret
	}
	return *o.Language.Get()
}

// GetLanguageOk returns a tuple with the Language field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiUserDomainAggregatesModelUserInfoAggregateDevice) GetLanguageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Language.Get(), o.Language.IsSet()
}

// HasLanguage returns a boolean if a field has been set.
func (o *PiUserDomainAggregatesModelUserInfoAggregateDevice) HasLanguage() bool {
	if o != nil && o.Language.IsSet() {
		return true
	}

	return false
}

// SetLanguage gets a reference to the given NullableString and assigns it to the Language field.
func (o *PiUserDomainAggregatesModelUserInfoAggregateDevice) SetLanguage(v string) {
	o.Language.Set(&v)
}

// SetLanguageNil sets the value for Language to be an explicit nil
func (o *PiUserDomainAggregatesModelUserInfoAggregateDevice) SetLanguageNil() {
	o.Language.Set(nil)
}

// UnsetLanguage ensures that no value is present for Language, not even an explicit nil
func (o *PiUserDomainAggregatesModelUserInfoAggregateDevice) UnsetLanguage() {
	o.Language.Unset()
}

// GetPlatform returns the Platform field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiUserDomainAggregatesModelUserInfoAggregateDevice) GetPlatform() string {
	if o == nil || IsNil(o.Platform.Get()) {
		var ret string
		return ret
	}
	return *o.Platform.Get()
}

// GetPlatformOk returns a tuple with the Platform field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiUserDomainAggregatesModelUserInfoAggregateDevice) GetPlatformOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Platform.Get(), o.Platform.IsSet()
}

// HasPlatform returns a boolean if a field has been set.
func (o *PiUserDomainAggregatesModelUserInfoAggregateDevice) HasPlatform() bool {
	if o != nil && o.Platform.IsSet() {
		return true
	}

	return false
}

// SetPlatform gets a reference to the given NullableString and assigns it to the Platform field.
func (o *PiUserDomainAggregatesModelUserInfoAggregateDevice) SetPlatform(v string) {
	o.Platform.Set(&v)
}

// SetPlatformNil sets the value for Platform to be an explicit nil
func (o *PiUserDomainAggregatesModelUserInfoAggregateDevice) SetPlatformNil() {
	o.Platform.Set(nil)
}

// UnsetPlatform ensures that no value is present for Platform, not even an explicit nil
func (o *PiUserDomainAggregatesModelUserInfoAggregateDevice) UnsetPlatform() {
	o.Platform.Unset()
}

// GetIsActive returns the IsActive field value if set, zero value otherwise.
func (o *PiUserDomainAggregatesModelUserInfoAggregateDevice) GetIsActive() bool {
	if o == nil || IsNil(o.IsActive) {
		var ret bool
		return ret
	}
	return *o.IsActive
}

// GetIsActiveOk returns a tuple with the IsActive field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PiUserDomainAggregatesModelUserInfoAggregateDevice) GetIsActiveOk() (*bool, bool) {
	if o == nil || IsNil(o.IsActive) {
		return nil, false
	}
	return o.IsActive, true
}

// HasIsActive returns a boolean if a field has been set.
func (o *PiUserDomainAggregatesModelUserInfoAggregateDevice) HasIsActive() bool {
	if o != nil && !IsNil(o.IsActive) {
		return true
	}

	return false
}

// SetIsActive gets a reference to the given bool and assigns it to the IsActive field.
func (o *PiUserDomainAggregatesModelUserInfoAggregateDevice) SetIsActive(v bool) {
	o.IsActive = &v
}

// GetSubscriptionIdentifier returns the SubscriptionIdentifier field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiUserDomainAggregatesModelUserInfoAggregateDevice) GetSubscriptionIdentifier() string {
	if o == nil || IsNil(o.SubscriptionIdentifier.Get()) {
		var ret string
		return ret
	}
	return *o.SubscriptionIdentifier.Get()
}

// GetSubscriptionIdentifierOk returns a tuple with the SubscriptionIdentifier field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiUserDomainAggregatesModelUserInfoAggregateDevice) GetSubscriptionIdentifierOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SubscriptionIdentifier.Get(), o.SubscriptionIdentifier.IsSet()
}

// HasSubscriptionIdentifier returns a boolean if a field has been set.
func (o *PiUserDomainAggregatesModelUserInfoAggregateDevice) HasSubscriptionIdentifier() bool {
	if o != nil && o.SubscriptionIdentifier.IsSet() {
		return true
	}

	return false
}

// SetSubscriptionIdentifier gets a reference to the given NullableString and assigns it to the SubscriptionIdentifier field.
func (o *PiUserDomainAggregatesModelUserInfoAggregateDevice) SetSubscriptionIdentifier(v string) {
	o.SubscriptionIdentifier.Set(&v)
}

// SetSubscriptionIdentifierNil sets the value for SubscriptionIdentifier to be an explicit nil
func (o *PiUserDomainAggregatesModelUserInfoAggregateDevice) SetSubscriptionIdentifierNil() {
	o.SubscriptionIdentifier.Set(nil)
}

// UnsetSubscriptionIdentifier ensures that no value is present for SubscriptionIdentifier, not even an explicit nil
func (o *PiUserDomainAggregatesModelUserInfoAggregateDevice) UnsetSubscriptionIdentifier() {
	o.SubscriptionIdentifier.Unset()
}

// GetNotificationPreference returns the NotificationPreference field value if set, zero value otherwise.
func (o *PiUserDomainAggregatesModelUserInfoAggregateDevice) GetNotificationPreference() PiUserDomainAggregatesModelUserInfoAggregateNotificationPreference {
	if o == nil || IsNil(o.NotificationPreference) {
		var ret PiUserDomainAggregatesModelUserInfoAggregateNotificationPreference
		return ret
	}
	return *o.NotificationPreference
}

// GetNotificationPreferenceOk returns a tuple with the NotificationPreference field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PiUserDomainAggregatesModelUserInfoAggregateDevice) GetNotificationPreferenceOk() (*PiUserDomainAggregatesModelUserInfoAggregateNotificationPreference, bool) {
	if o == nil || IsNil(o.NotificationPreference) {
		return nil, false
	}
	return o.NotificationPreference, true
}

// HasNotificationPreference returns a boolean if a field has been set.
func (o *PiUserDomainAggregatesModelUserInfoAggregateDevice) HasNotificationPreference() bool {
	if o != nil && !IsNil(o.NotificationPreference) {
		return true
	}

	return false
}

// SetNotificationPreference gets a reference to the given PiUserDomainAggregatesModelUserInfoAggregateNotificationPreference and assigns it to the NotificationPreference field.
func (o *PiUserDomainAggregatesModelUserInfoAggregateDevice) SetNotificationPreference(v PiUserDomainAggregatesModelUserInfoAggregateNotificationPreference) {
	o.NotificationPreference = &v
}

// GetUserInfoId returns the UserInfoId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiUserDomainAggregatesModelUserInfoAggregateDevice) GetUserInfoId() string {
	if o == nil || IsNil(o.UserInfoId.Get()) {
		var ret string
		return ret
	}
	return *o.UserInfoId.Get()
}

// GetUserInfoIdOk returns a tuple with the UserInfoId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiUserDomainAggregatesModelUserInfoAggregateDevice) GetUserInfoIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.UserInfoId.Get(), o.UserInfoId.IsSet()
}

// HasUserInfoId returns a boolean if a field has been set.
func (o *PiUserDomainAggregatesModelUserInfoAggregateDevice) HasUserInfoId() bool {
	if o != nil && o.UserInfoId.IsSet() {
		return true
	}

	return false
}

// SetUserInfoId gets a reference to the given NullableString and assigns it to the UserInfoId field.
func (o *PiUserDomainAggregatesModelUserInfoAggregateDevice) SetUserInfoId(v string) {
	o.UserInfoId.Set(&v)
}

// SetUserInfoIdNil sets the value for UserInfoId to be an explicit nil
func (o *PiUserDomainAggregatesModelUserInfoAggregateDevice) SetUserInfoIdNil() {
	o.UserInfoId.Set(nil)
}

// UnsetUserInfoId ensures that no value is present for UserInfoId, not even an explicit nil
func (o *PiUserDomainAggregatesModelUserInfoAggregateDevice) UnsetUserInfoId() {
	o.UserInfoId.Unset()
}

// GetUserInfo returns the UserInfo field value if set, zero value otherwise.
func (o *PiUserDomainAggregatesModelUserInfoAggregateDevice) GetUserInfo() PiUserDomainAggregatesModelUserInfoAggregateUserInfo {
	if o == nil || IsNil(o.UserInfo) {
		var ret PiUserDomainAggregatesModelUserInfoAggregateUserInfo
		return ret
	}
	return *o.UserInfo
}

// GetUserInfoOk returns a tuple with the UserInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PiUserDomainAggregatesModelUserInfoAggregateDevice) GetUserInfoOk() (*PiUserDomainAggregatesModelUserInfoAggregateUserInfo, bool) {
	if o == nil || IsNil(o.UserInfo) {
		return nil, false
	}
	return o.UserInfo, true
}

// HasUserInfo returns a boolean if a field has been set.
func (o *PiUserDomainAggregatesModelUserInfoAggregateDevice) HasUserInfo() bool {
	if o != nil && !IsNil(o.UserInfo) {
		return true
	}

	return false
}

// SetUserInfo gets a reference to the given PiUserDomainAggregatesModelUserInfoAggregateUserInfo and assigns it to the UserInfo field.
func (o *PiUserDomainAggregatesModelUserInfoAggregateDevice) SetUserInfo(v PiUserDomainAggregatesModelUserInfoAggregateUserInfo) {
	o.UserInfo = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *PiUserDomainAggregatesModelUserInfoAggregateDevice) GetCreatedAt() time.Time {
	if o == nil || IsNil(o.CreatedAt) {
		var ret time.Time
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PiUserDomainAggregatesModelUserInfoAggregateDevice) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *PiUserDomainAggregatesModelUserInfoAggregateDevice) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given time.Time and assigns it to the CreatedAt field.
func (o *PiUserDomainAggregatesModelUserInfoAggregateDevice) SetCreatedAt(v time.Time) {
	o.CreatedAt = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiUserDomainAggregatesModelUserInfoAggregateDevice) GetUpdatedAt() time.Time {
	if o == nil || IsNil(o.UpdatedAt.Get()) {
		var ret time.Time
		return ret
	}
	return *o.UpdatedAt.Get()
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiUserDomainAggregatesModelUserInfoAggregateDevice) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.UpdatedAt.Get(), o.UpdatedAt.IsSet()
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *PiUserDomainAggregatesModelUserInfoAggregateDevice) HasUpdatedAt() bool {
	if o != nil && o.UpdatedAt.IsSet() {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given NullableTime and assigns it to the UpdatedAt field.
func (o *PiUserDomainAggregatesModelUserInfoAggregateDevice) SetUpdatedAt(v time.Time) {
	o.UpdatedAt.Set(&v)
}

// SetUpdatedAtNil sets the value for UpdatedAt to be an explicit nil
func (o *PiUserDomainAggregatesModelUserInfoAggregateDevice) SetUpdatedAtNil() {
	o.UpdatedAt.Set(nil)
}

// UnsetUpdatedAt ensures that no value is present for UpdatedAt, not even an explicit nil
func (o *PiUserDomainAggregatesModelUserInfoAggregateDevice) UnsetUpdatedAt() {
	o.UpdatedAt.Unset()
}

func (o PiUserDomainAggregatesModelUserInfoAggregateDevice) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PiUserDomainAggregatesModelUserInfoAggregateDevice) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["rowVersion"] = o.RowVersion
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.DeviceId) {
		toSerialize["deviceId"] = o.DeviceId
	}
	if o.DeviceToken.IsSet() {
		toSerialize["deviceToken"] = o.DeviceToken.Get()
	}
	if o.DeviceIdentifier.IsSet() {
		toSerialize["deviceIdentifier"] = o.DeviceIdentifier.Get()
	}
	if o.Language.IsSet() {
		toSerialize["language"] = o.Language.Get()
	}
	if o.Platform.IsSet() {
		toSerialize["platform"] = o.Platform.Get()
	}
	if !IsNil(o.IsActive) {
		toSerialize["isActive"] = o.IsActive
	}
	if o.SubscriptionIdentifier.IsSet() {
		toSerialize["subscriptionIdentifier"] = o.SubscriptionIdentifier.Get()
	}
	if !IsNil(o.NotificationPreference) {
		toSerialize["notificationPreference"] = o.NotificationPreference
	}
	if o.UserInfoId.IsSet() {
		toSerialize["userInfoId"] = o.UserInfoId.Get()
	}
	if !IsNil(o.UserInfo) {
		toSerialize["userInfo"] = o.UserInfo
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["createdAt"] = o.CreatedAt
	}
	if o.UpdatedAt.IsSet() {
		toSerialize["updatedAt"] = o.UpdatedAt.Get()
	}
	return toSerialize, nil
}

func (o *PiUserDomainAggregatesModelUserInfoAggregateDevice) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"rowVersion",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varPiUserDomainAggregatesModelUserInfoAggregateDevice := _PiUserDomainAggregatesModelUserInfoAggregateDevice{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varPiUserDomainAggregatesModelUserInfoAggregateDevice)

	if err != nil {
		return err
	}

	*o = PiUserDomainAggregatesModelUserInfoAggregateDevice(varPiUserDomainAggregatesModelUserInfoAggregateDevice)

	return err
}

type NullablePiUserDomainAggregatesModelUserInfoAggregateDevice struct {
	value *PiUserDomainAggregatesModelUserInfoAggregateDevice
	isSet bool
}

func (v NullablePiUserDomainAggregatesModelUserInfoAggregateDevice) Get() *PiUserDomainAggregatesModelUserInfoAggregateDevice {
	return v.value
}

func (v *NullablePiUserDomainAggregatesModelUserInfoAggregateDevice) Set(val *PiUserDomainAggregatesModelUserInfoAggregateDevice) {
	v.value = val
	v.isSet = true
}

func (v NullablePiUserDomainAggregatesModelUserInfoAggregateDevice) IsSet() bool {
	return v.isSet
}

func (v *NullablePiUserDomainAggregatesModelUserInfoAggregateDevice) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePiUserDomainAggregatesModelUserInfoAggregateDevice(val *PiUserDomainAggregatesModelUserInfoAggregateDevice) *NullablePiUserDomainAggregatesModelUserInfoAggregateDevice {
	return &NullablePiUserDomainAggregatesModelUserInfoAggregateDevice{value: val, isSet: true}
}

func (v NullablePiUserDomainAggregatesModelUserInfoAggregateDevice) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePiUserDomainAggregatesModelUserInfoAggregateDevice) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
