/*
Pi.User.API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package go_client

import (
	"bytes"
	"encoding/json"
	"fmt"
	"time"
)

// checks if the PiUserDomainAggregatesModelSuitabilityTestAggregateSuitabilityTest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PiUserDomainAggregatesModelSuitabilityTestAggregateSuitabilityTest{}

// PiUserDomainAggregatesModelSuitabilityTestAggregateSuitabilityTest struct for PiUserDomainAggregatesModelSuitabilityTestAggregateSuitabilityTest
type PiUserDomainAggregatesModelSuitabilityTestAggregateSuitabilityTest struct {
	RowVersion  string         `json:"rowVersion"`
	Id          *string        `json:"id,omitempty"`
	Grade       NullableString `json:"grade,omitempty"`
	Score       *int32         `json:"score,omitempty"`
	Version     NullableString `json:"version,omitempty"`
	ReviewDate  *time.Time     `json:"reviewDate,omitempty"`
	ExpiredDate *time.Time     `json:"expiredDate,omitempty"`
	UserId      *string        `json:"userId,omitempty"`
}

type _PiUserDomainAggregatesModelSuitabilityTestAggregateSuitabilityTest PiUserDomainAggregatesModelSuitabilityTestAggregateSuitabilityTest

// NewPiUserDomainAggregatesModelSuitabilityTestAggregateSuitabilityTest instantiates a new PiUserDomainAggregatesModelSuitabilityTestAggregateSuitabilityTest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPiUserDomainAggregatesModelSuitabilityTestAggregateSuitabilityTest(rowVersion string) *PiUserDomainAggregatesModelSuitabilityTestAggregateSuitabilityTest {
	this := PiUserDomainAggregatesModelSuitabilityTestAggregateSuitabilityTest{}
	this.RowVersion = rowVersion
	return &this
}

// NewPiUserDomainAggregatesModelSuitabilityTestAggregateSuitabilityTestWithDefaults instantiates a new PiUserDomainAggregatesModelSuitabilityTestAggregateSuitabilityTest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPiUserDomainAggregatesModelSuitabilityTestAggregateSuitabilityTestWithDefaults() *PiUserDomainAggregatesModelSuitabilityTestAggregateSuitabilityTest {
	this := PiUserDomainAggregatesModelSuitabilityTestAggregateSuitabilityTest{}
	return &this
}

// GetRowVersion returns the RowVersion field value
func (o *PiUserDomainAggregatesModelSuitabilityTestAggregateSuitabilityTest) GetRowVersion() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RowVersion
}

// GetRowVersionOk returns a tuple with the RowVersion field value
// and a boolean to check if the value has been set.
func (o *PiUserDomainAggregatesModelSuitabilityTestAggregateSuitabilityTest) GetRowVersionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RowVersion, true
}

// SetRowVersion sets field value
func (o *PiUserDomainAggregatesModelSuitabilityTestAggregateSuitabilityTest) SetRowVersion(v string) {
	o.RowVersion = v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *PiUserDomainAggregatesModelSuitabilityTestAggregateSuitabilityTest) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PiUserDomainAggregatesModelSuitabilityTestAggregateSuitabilityTest) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *PiUserDomainAggregatesModelSuitabilityTestAggregateSuitabilityTest) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *PiUserDomainAggregatesModelSuitabilityTestAggregateSuitabilityTest) SetId(v string) {
	o.Id = &v
}

// GetGrade returns the Grade field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiUserDomainAggregatesModelSuitabilityTestAggregateSuitabilityTest) GetGrade() string {
	if o == nil || IsNil(o.Grade.Get()) {
		var ret string
		return ret
	}
	return *o.Grade.Get()
}

// GetGradeOk returns a tuple with the Grade field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiUserDomainAggregatesModelSuitabilityTestAggregateSuitabilityTest) GetGradeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Grade.Get(), o.Grade.IsSet()
}

// HasGrade returns a boolean if a field has been set.
func (o *PiUserDomainAggregatesModelSuitabilityTestAggregateSuitabilityTest) HasGrade() bool {
	if o != nil && o.Grade.IsSet() {
		return true
	}

	return false
}

// SetGrade gets a reference to the given NullableString and assigns it to the Grade field.
func (o *PiUserDomainAggregatesModelSuitabilityTestAggregateSuitabilityTest) SetGrade(v string) {
	o.Grade.Set(&v)
}

// SetGradeNil sets the value for Grade to be an explicit nil
func (o *PiUserDomainAggregatesModelSuitabilityTestAggregateSuitabilityTest) SetGradeNil() {
	o.Grade.Set(nil)
}

// UnsetGrade ensures that no value is present for Grade, not even an explicit nil
func (o *PiUserDomainAggregatesModelSuitabilityTestAggregateSuitabilityTest) UnsetGrade() {
	o.Grade.Unset()
}

// GetScore returns the Score field value if set, zero value otherwise.
func (o *PiUserDomainAggregatesModelSuitabilityTestAggregateSuitabilityTest) GetScore() int32 {
	if o == nil || IsNil(o.Score) {
		var ret int32
		return ret
	}
	return *o.Score
}

// GetScoreOk returns a tuple with the Score field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PiUserDomainAggregatesModelSuitabilityTestAggregateSuitabilityTest) GetScoreOk() (*int32, bool) {
	if o == nil || IsNil(o.Score) {
		return nil, false
	}
	return o.Score, true
}

// HasScore returns a boolean if a field has been set.
func (o *PiUserDomainAggregatesModelSuitabilityTestAggregateSuitabilityTest) HasScore() bool {
	if o != nil && !IsNil(o.Score) {
		return true
	}

	return false
}

// SetScore gets a reference to the given int32 and assigns it to the Score field.
func (o *PiUserDomainAggregatesModelSuitabilityTestAggregateSuitabilityTest) SetScore(v int32) {
	o.Score = &v
}

// GetVersion returns the Version field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiUserDomainAggregatesModelSuitabilityTestAggregateSuitabilityTest) GetVersion() string {
	if o == nil || IsNil(o.Version.Get()) {
		var ret string
		return ret
	}
	return *o.Version.Get()
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiUserDomainAggregatesModelSuitabilityTestAggregateSuitabilityTest) GetVersionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Version.Get(), o.Version.IsSet()
}

// HasVersion returns a boolean if a field has been set.
func (o *PiUserDomainAggregatesModelSuitabilityTestAggregateSuitabilityTest) HasVersion() bool {
	if o != nil && o.Version.IsSet() {
		return true
	}

	return false
}

// SetVersion gets a reference to the given NullableString and assigns it to the Version field.
func (o *PiUserDomainAggregatesModelSuitabilityTestAggregateSuitabilityTest) SetVersion(v string) {
	o.Version.Set(&v)
}

// SetVersionNil sets the value for Version to be an explicit nil
func (o *PiUserDomainAggregatesModelSuitabilityTestAggregateSuitabilityTest) SetVersionNil() {
	o.Version.Set(nil)
}

// UnsetVersion ensures that no value is present for Version, not even an explicit nil
func (o *PiUserDomainAggregatesModelSuitabilityTestAggregateSuitabilityTest) UnsetVersion() {
	o.Version.Unset()
}

// GetReviewDate returns the ReviewDate field value if set, zero value otherwise.
func (o *PiUserDomainAggregatesModelSuitabilityTestAggregateSuitabilityTest) GetReviewDate() time.Time {
	if o == nil || IsNil(o.ReviewDate) {
		var ret time.Time
		return ret
	}
	return *o.ReviewDate
}

// GetReviewDateOk returns a tuple with the ReviewDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PiUserDomainAggregatesModelSuitabilityTestAggregateSuitabilityTest) GetReviewDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.ReviewDate) {
		return nil, false
	}
	return o.ReviewDate, true
}

// HasReviewDate returns a boolean if a field has been set.
func (o *PiUserDomainAggregatesModelSuitabilityTestAggregateSuitabilityTest) HasReviewDate() bool {
	if o != nil && !IsNil(o.ReviewDate) {
		return true
	}

	return false
}

// SetReviewDate gets a reference to the given time.Time and assigns it to the ReviewDate field.
func (o *PiUserDomainAggregatesModelSuitabilityTestAggregateSuitabilityTest) SetReviewDate(v time.Time) {
	o.ReviewDate = &v
}

// GetExpiredDate returns the ExpiredDate field value if set, zero value otherwise.
func (o *PiUserDomainAggregatesModelSuitabilityTestAggregateSuitabilityTest) GetExpiredDate() time.Time {
	if o == nil || IsNil(o.ExpiredDate) {
		var ret time.Time
		return ret
	}
	return *o.ExpiredDate
}

// GetExpiredDateOk returns a tuple with the ExpiredDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PiUserDomainAggregatesModelSuitabilityTestAggregateSuitabilityTest) GetExpiredDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.ExpiredDate) {
		return nil, false
	}
	return o.ExpiredDate, true
}

// HasExpiredDate returns a boolean if a field has been set.
func (o *PiUserDomainAggregatesModelSuitabilityTestAggregateSuitabilityTest) HasExpiredDate() bool {
	if o != nil && !IsNil(o.ExpiredDate) {
		return true
	}

	return false
}

// SetExpiredDate gets a reference to the given time.Time and assigns it to the ExpiredDate field.
func (o *PiUserDomainAggregatesModelSuitabilityTestAggregateSuitabilityTest) SetExpiredDate(v time.Time) {
	o.ExpiredDate = &v
}

// GetUserId returns the UserId field value if set, zero value otherwise.
func (o *PiUserDomainAggregatesModelSuitabilityTestAggregateSuitabilityTest) GetUserId() string {
	if o == nil || IsNil(o.UserId) {
		var ret string
		return ret
	}
	return *o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PiUserDomainAggregatesModelSuitabilityTestAggregateSuitabilityTest) GetUserIdOk() (*string, bool) {
	if o == nil || IsNil(o.UserId) {
		return nil, false
	}
	return o.UserId, true
}

// HasUserId returns a boolean if a field has been set.
func (o *PiUserDomainAggregatesModelSuitabilityTestAggregateSuitabilityTest) HasUserId() bool {
	if o != nil && !IsNil(o.UserId) {
		return true
	}

	return false
}

// SetUserId gets a reference to the given string and assigns it to the UserId field.
func (o *PiUserDomainAggregatesModelSuitabilityTestAggregateSuitabilityTest) SetUserId(v string) {
	o.UserId = &v
}

func (o PiUserDomainAggregatesModelSuitabilityTestAggregateSuitabilityTest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PiUserDomainAggregatesModelSuitabilityTestAggregateSuitabilityTest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["rowVersion"] = o.RowVersion
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if o.Grade.IsSet() {
		toSerialize["grade"] = o.Grade.Get()
	}
	if !IsNil(o.Score) {
		toSerialize["score"] = o.Score
	}
	if o.Version.IsSet() {
		toSerialize["version"] = o.Version.Get()
	}
	if !IsNil(o.ReviewDate) {
		toSerialize["reviewDate"] = o.ReviewDate
	}
	if !IsNil(o.ExpiredDate) {
		toSerialize["expiredDate"] = o.ExpiredDate
	}
	if !IsNil(o.UserId) {
		toSerialize["userId"] = o.UserId
	}
	return toSerialize, nil
}

func (o *PiUserDomainAggregatesModelSuitabilityTestAggregateSuitabilityTest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"rowVersion",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varPiUserDomainAggregatesModelSuitabilityTestAggregateSuitabilityTest := _PiUserDomainAggregatesModelSuitabilityTestAggregateSuitabilityTest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varPiUserDomainAggregatesModelSuitabilityTestAggregateSuitabilityTest)

	if err != nil {
		return err
	}

	*o = PiUserDomainAggregatesModelSuitabilityTestAggregateSuitabilityTest(varPiUserDomainAggregatesModelSuitabilityTestAggregateSuitabilityTest)

	return err
}

type NullablePiUserDomainAggregatesModelSuitabilityTestAggregateSuitabilityTest struct {
	value *PiUserDomainAggregatesModelSuitabilityTestAggregateSuitabilityTest
	isSet bool
}

func (v NullablePiUserDomainAggregatesModelSuitabilityTestAggregateSuitabilityTest) Get() *PiUserDomainAggregatesModelSuitabilityTestAggregateSuitabilityTest {
	return v.value
}

func (v *NullablePiUserDomainAggregatesModelSuitabilityTestAggregateSuitabilityTest) Set(val *PiUserDomainAggregatesModelSuitabilityTestAggregateSuitabilityTest) {
	v.value = val
	v.isSet = true
}

func (v NullablePiUserDomainAggregatesModelSuitabilityTestAggregateSuitabilityTest) IsSet() bool {
	return v.isSet
}

func (v *NullablePiUserDomainAggregatesModelSuitabilityTestAggregateSuitabilityTest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePiUserDomainAggregatesModelSuitabilityTestAggregateSuitabilityTest(val *PiUserDomainAggregatesModelSuitabilityTestAggregateSuitabilityTest) *NullablePiUserDomainAggregatesModelSuitabilityTestAggregateSuitabilityTest {
	return &NullablePiUserDomainAggregatesModelSuitabilityTestAggregateSuitabilityTest{value: val, isSet: true}
}

func (v NullablePiUserDomainAggregatesModelSuitabilityTestAggregateSuitabilityTest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePiUserDomainAggregatesModelSuitabilityTestAggregateSuitabilityTest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
