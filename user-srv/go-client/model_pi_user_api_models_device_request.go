/*
Pi.User.API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package go_client

import (
	"encoding/json"
)

// checks if the PiUserAPIModelsDeviceRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PiUserAPIModelsDeviceRequest{}

// PiUserAPIModelsDeviceRequest struct for PiUserAPIModelsDeviceRequest
type PiUserAPIModelsDeviceRequest struct {
	DeviceId               NullableString                                `json:"deviceId,omitempty"`
	DeviceToken            NullableString                                `json:"deviceToken,omitempty"`
	Language               NullableString                                `json:"language,omitempty"`
	DeviceIdentifier       NullableString                                `json:"deviceIdentifier,omitempty"`
	NotificationPreference *PiUserAPIModelsNotificationPreferenceRequest `json:"notificationPreference,omitempty"`
}

// NewPiUserAPIModelsDeviceRequest instantiates a new PiUserAPIModelsDeviceRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPiUserAPIModelsDeviceRequest() *PiUserAPIModelsDeviceRequest {
	this := PiUserAPIModelsDeviceRequest{}
	return &this
}

// NewPiUserAPIModelsDeviceRequestWithDefaults instantiates a new PiUserAPIModelsDeviceRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPiUserAPIModelsDeviceRequestWithDefaults() *PiUserAPIModelsDeviceRequest {
	this := PiUserAPIModelsDeviceRequest{}
	return &this
}

// GetDeviceId returns the DeviceId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiUserAPIModelsDeviceRequest) GetDeviceId() string {
	if o == nil || IsNil(o.DeviceId.Get()) {
		var ret string
		return ret
	}
	return *o.DeviceId.Get()
}

// GetDeviceIdOk returns a tuple with the DeviceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiUserAPIModelsDeviceRequest) GetDeviceIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.DeviceId.Get(), o.DeviceId.IsSet()
}

// HasDeviceId returns a boolean if a field has been set.
func (o *PiUserAPIModelsDeviceRequest) HasDeviceId() bool {
	if o != nil && o.DeviceId.IsSet() {
		return true
	}

	return false
}

// SetDeviceId gets a reference to the given NullableString and assigns it to the DeviceId field.
func (o *PiUserAPIModelsDeviceRequest) SetDeviceId(v string) {
	o.DeviceId.Set(&v)
}

// SetDeviceIdNil sets the value for DeviceId to be an explicit nil
func (o *PiUserAPIModelsDeviceRequest) SetDeviceIdNil() {
	o.DeviceId.Set(nil)
}

// UnsetDeviceId ensures that no value is present for DeviceId, not even an explicit nil
func (o *PiUserAPIModelsDeviceRequest) UnsetDeviceId() {
	o.DeviceId.Unset()
}

// GetDeviceToken returns the DeviceToken field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiUserAPIModelsDeviceRequest) GetDeviceToken() string {
	if o == nil || IsNil(o.DeviceToken.Get()) {
		var ret string
		return ret
	}
	return *o.DeviceToken.Get()
}

// GetDeviceTokenOk returns a tuple with the DeviceToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiUserAPIModelsDeviceRequest) GetDeviceTokenOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.DeviceToken.Get(), o.DeviceToken.IsSet()
}

// HasDeviceToken returns a boolean if a field has been set.
func (o *PiUserAPIModelsDeviceRequest) HasDeviceToken() bool {
	if o != nil && o.DeviceToken.IsSet() {
		return true
	}

	return false
}

// SetDeviceToken gets a reference to the given NullableString and assigns it to the DeviceToken field.
func (o *PiUserAPIModelsDeviceRequest) SetDeviceToken(v string) {
	o.DeviceToken.Set(&v)
}

// SetDeviceTokenNil sets the value for DeviceToken to be an explicit nil
func (o *PiUserAPIModelsDeviceRequest) SetDeviceTokenNil() {
	o.DeviceToken.Set(nil)
}

// UnsetDeviceToken ensures that no value is present for DeviceToken, not even an explicit nil
func (o *PiUserAPIModelsDeviceRequest) UnsetDeviceToken() {
	o.DeviceToken.Unset()
}

// GetLanguage returns the Language field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiUserAPIModelsDeviceRequest) GetLanguage() string {
	if o == nil || IsNil(o.Language.Get()) {
		var ret string
		return ret
	}
	return *o.Language.Get()
}

// GetLanguageOk returns a tuple with the Language field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiUserAPIModelsDeviceRequest) GetLanguageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Language.Get(), o.Language.IsSet()
}

// HasLanguage returns a boolean if a field has been set.
func (o *PiUserAPIModelsDeviceRequest) HasLanguage() bool {
	if o != nil && o.Language.IsSet() {
		return true
	}

	return false
}

// SetLanguage gets a reference to the given NullableString and assigns it to the Language field.
func (o *PiUserAPIModelsDeviceRequest) SetLanguage(v string) {
	o.Language.Set(&v)
}

// SetLanguageNil sets the value for Language to be an explicit nil
func (o *PiUserAPIModelsDeviceRequest) SetLanguageNil() {
	o.Language.Set(nil)
}

// UnsetLanguage ensures that no value is present for Language, not even an explicit nil
func (o *PiUserAPIModelsDeviceRequest) UnsetLanguage() {
	o.Language.Unset()
}

// GetDeviceIdentifier returns the DeviceIdentifier field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiUserAPIModelsDeviceRequest) GetDeviceIdentifier() string {
	if o == nil || IsNil(o.DeviceIdentifier.Get()) {
		var ret string
		return ret
	}
	return *o.DeviceIdentifier.Get()
}

// GetDeviceIdentifierOk returns a tuple with the DeviceIdentifier field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiUserAPIModelsDeviceRequest) GetDeviceIdentifierOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.DeviceIdentifier.Get(), o.DeviceIdentifier.IsSet()
}

// HasDeviceIdentifier returns a boolean if a field has been set.
func (o *PiUserAPIModelsDeviceRequest) HasDeviceIdentifier() bool {
	if o != nil && o.DeviceIdentifier.IsSet() {
		return true
	}

	return false
}

// SetDeviceIdentifier gets a reference to the given NullableString and assigns it to the DeviceIdentifier field.
func (o *PiUserAPIModelsDeviceRequest) SetDeviceIdentifier(v string) {
	o.DeviceIdentifier.Set(&v)
}

// SetDeviceIdentifierNil sets the value for DeviceIdentifier to be an explicit nil
func (o *PiUserAPIModelsDeviceRequest) SetDeviceIdentifierNil() {
	o.DeviceIdentifier.Set(nil)
}

// UnsetDeviceIdentifier ensures that no value is present for DeviceIdentifier, not even an explicit nil
func (o *PiUserAPIModelsDeviceRequest) UnsetDeviceIdentifier() {
	o.DeviceIdentifier.Unset()
}

// GetNotificationPreference returns the NotificationPreference field value if set, zero value otherwise.
func (o *PiUserAPIModelsDeviceRequest) GetNotificationPreference() PiUserAPIModelsNotificationPreferenceRequest {
	if o == nil || IsNil(o.NotificationPreference) {
		var ret PiUserAPIModelsNotificationPreferenceRequest
		return ret
	}
	return *o.NotificationPreference
}

// GetNotificationPreferenceOk returns a tuple with the NotificationPreference field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PiUserAPIModelsDeviceRequest) GetNotificationPreferenceOk() (*PiUserAPIModelsNotificationPreferenceRequest, bool) {
	if o == nil || IsNil(o.NotificationPreference) {
		return nil, false
	}
	return o.NotificationPreference, true
}

// HasNotificationPreference returns a boolean if a field has been set.
func (o *PiUserAPIModelsDeviceRequest) HasNotificationPreference() bool {
	if o != nil && !IsNil(o.NotificationPreference) {
		return true
	}

	return false
}

// SetNotificationPreference gets a reference to the given PiUserAPIModelsNotificationPreferenceRequest and assigns it to the NotificationPreference field.
func (o *PiUserAPIModelsDeviceRequest) SetNotificationPreference(v PiUserAPIModelsNotificationPreferenceRequest) {
	o.NotificationPreference = &v
}

func (o PiUserAPIModelsDeviceRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PiUserAPIModelsDeviceRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.DeviceId.IsSet() {
		toSerialize["deviceId"] = o.DeviceId.Get()
	}
	if o.DeviceToken.IsSet() {
		toSerialize["deviceToken"] = o.DeviceToken.Get()
	}
	if o.Language.IsSet() {
		toSerialize["language"] = o.Language.Get()
	}
	if o.DeviceIdentifier.IsSet() {
		toSerialize["deviceIdentifier"] = o.DeviceIdentifier.Get()
	}
	if !IsNil(o.NotificationPreference) {
		toSerialize["notificationPreference"] = o.NotificationPreference
	}
	return toSerialize, nil
}

type NullablePiUserAPIModelsDeviceRequest struct {
	value *PiUserAPIModelsDeviceRequest
	isSet bool
}

func (v NullablePiUserAPIModelsDeviceRequest) Get() *PiUserAPIModelsDeviceRequest {
	return v.value
}

func (v *NullablePiUserAPIModelsDeviceRequest) Set(val *PiUserAPIModelsDeviceRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePiUserAPIModelsDeviceRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePiUserAPIModelsDeviceRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePiUserAPIModelsDeviceRequest(val *PiUserAPIModelsDeviceRequest) *NullablePiUserAPIModelsDeviceRequest {
	return &NullablePiUserAPIModelsDeviceRequest{value: val, isSet: true}
}

func (v NullablePiUserAPIModelsDeviceRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePiUserAPIModelsDeviceRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
