/*
Pi.User.API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package go_client

import (
	"encoding/json"
)

// checks if the PiUserAPIModelsDeviceResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PiUserAPIModelsDeviceResponse{}

// PiUserAPIModelsDeviceResponse struct for PiUserAPIModelsDeviceResponse
type PiUserAPIModelsDeviceResponse struct {
	DeviceId               *string                                       `json:"deviceId,omitempty"`
	DeviceToken            NullableString                                `json:"deviceToken,omitempty"`
	DeviceIdentifier       NullableString                                `json:"deviceIdentifier,omitempty"`
	Language               NullableString                                `json:"language,omitempty"`
	Platform               NullableString                                `json:"platform,omitempty"`
	NotificationPreference *PiUserAPIModelsNotificatonPreferenceResponse `json:"notificationPreference,omitempty"`
}

// NewPiUserAPIModelsDeviceResponse instantiates a new PiUserAPIModelsDeviceResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPiUserAPIModelsDeviceResponse() *PiUserAPIModelsDeviceResponse {
	this := PiUserAPIModelsDeviceResponse{}
	return &this
}

// NewPiUserAPIModelsDeviceResponseWithDefaults instantiates a new PiUserAPIModelsDeviceResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPiUserAPIModelsDeviceResponseWithDefaults() *PiUserAPIModelsDeviceResponse {
	this := PiUserAPIModelsDeviceResponse{}
	return &this
}

// GetDeviceId returns the DeviceId field value if set, zero value otherwise.
func (o *PiUserAPIModelsDeviceResponse) GetDeviceId() string {
	if o == nil || IsNil(o.DeviceId) {
		var ret string
		return ret
	}
	return *o.DeviceId
}

// GetDeviceIdOk returns a tuple with the DeviceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PiUserAPIModelsDeviceResponse) GetDeviceIdOk() (*string, bool) {
	if o == nil || IsNil(o.DeviceId) {
		return nil, false
	}
	return o.DeviceId, true
}

// HasDeviceId returns a boolean if a field has been set.
func (o *PiUserAPIModelsDeviceResponse) HasDeviceId() bool {
	if o != nil && !IsNil(o.DeviceId) {
		return true
	}

	return false
}

// SetDeviceId gets a reference to the given string and assigns it to the DeviceId field.
func (o *PiUserAPIModelsDeviceResponse) SetDeviceId(v string) {
	o.DeviceId = &v
}

// GetDeviceToken returns the DeviceToken field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiUserAPIModelsDeviceResponse) GetDeviceToken() string {
	if o == nil || IsNil(o.DeviceToken.Get()) {
		var ret string
		return ret
	}
	return *o.DeviceToken.Get()
}

// GetDeviceTokenOk returns a tuple with the DeviceToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiUserAPIModelsDeviceResponse) GetDeviceTokenOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.DeviceToken.Get(), o.DeviceToken.IsSet()
}

// HasDeviceToken returns a boolean if a field has been set.
func (o *PiUserAPIModelsDeviceResponse) HasDeviceToken() bool {
	if o != nil && o.DeviceToken.IsSet() {
		return true
	}

	return false
}

// SetDeviceToken gets a reference to the given NullableString and assigns it to the DeviceToken field.
func (o *PiUserAPIModelsDeviceResponse) SetDeviceToken(v string) {
	o.DeviceToken.Set(&v)
}

// SetDeviceTokenNil sets the value for DeviceToken to be an explicit nil
func (o *PiUserAPIModelsDeviceResponse) SetDeviceTokenNil() {
	o.DeviceToken.Set(nil)
}

// UnsetDeviceToken ensures that no value is present for DeviceToken, not even an explicit nil
func (o *PiUserAPIModelsDeviceResponse) UnsetDeviceToken() {
	o.DeviceToken.Unset()
}

// GetDeviceIdentifier returns the DeviceIdentifier field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiUserAPIModelsDeviceResponse) GetDeviceIdentifier() string {
	if o == nil || IsNil(o.DeviceIdentifier.Get()) {
		var ret string
		return ret
	}
	return *o.DeviceIdentifier.Get()
}

// GetDeviceIdentifierOk returns a tuple with the DeviceIdentifier field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiUserAPIModelsDeviceResponse) GetDeviceIdentifierOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.DeviceIdentifier.Get(), o.DeviceIdentifier.IsSet()
}

// HasDeviceIdentifier returns a boolean if a field has been set.
func (o *PiUserAPIModelsDeviceResponse) HasDeviceIdentifier() bool {
	if o != nil && o.DeviceIdentifier.IsSet() {
		return true
	}

	return false
}

// SetDeviceIdentifier gets a reference to the given NullableString and assigns it to the DeviceIdentifier field.
func (o *PiUserAPIModelsDeviceResponse) SetDeviceIdentifier(v string) {
	o.DeviceIdentifier.Set(&v)
}

// SetDeviceIdentifierNil sets the value for DeviceIdentifier to be an explicit nil
func (o *PiUserAPIModelsDeviceResponse) SetDeviceIdentifierNil() {
	o.DeviceIdentifier.Set(nil)
}

// UnsetDeviceIdentifier ensures that no value is present for DeviceIdentifier, not even an explicit nil
func (o *PiUserAPIModelsDeviceResponse) UnsetDeviceIdentifier() {
	o.DeviceIdentifier.Unset()
}

// GetLanguage returns the Language field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiUserAPIModelsDeviceResponse) GetLanguage() string {
	if o == nil || IsNil(o.Language.Get()) {
		var ret string
		return ret
	}
	return *o.Language.Get()
}

// GetLanguageOk returns a tuple with the Language field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiUserAPIModelsDeviceResponse) GetLanguageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Language.Get(), o.Language.IsSet()
}

// HasLanguage returns a boolean if a field has been set.
func (o *PiUserAPIModelsDeviceResponse) HasLanguage() bool {
	if o != nil && o.Language.IsSet() {
		return true
	}

	return false
}

// SetLanguage gets a reference to the given NullableString and assigns it to the Language field.
func (o *PiUserAPIModelsDeviceResponse) SetLanguage(v string) {
	o.Language.Set(&v)
}

// SetLanguageNil sets the value for Language to be an explicit nil
func (o *PiUserAPIModelsDeviceResponse) SetLanguageNil() {
	o.Language.Set(nil)
}

// UnsetLanguage ensures that no value is present for Language, not even an explicit nil
func (o *PiUserAPIModelsDeviceResponse) UnsetLanguage() {
	o.Language.Unset()
}

// GetPlatform returns the Platform field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiUserAPIModelsDeviceResponse) GetPlatform() string {
	if o == nil || IsNil(o.Platform.Get()) {
		var ret string
		return ret
	}
	return *o.Platform.Get()
}

// GetPlatformOk returns a tuple with the Platform field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiUserAPIModelsDeviceResponse) GetPlatformOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Platform.Get(), o.Platform.IsSet()
}

// HasPlatform returns a boolean if a field has been set.
func (o *PiUserAPIModelsDeviceResponse) HasPlatform() bool {
	if o != nil && o.Platform.IsSet() {
		return true
	}

	return false
}

// SetPlatform gets a reference to the given NullableString and assigns it to the Platform field.
func (o *PiUserAPIModelsDeviceResponse) SetPlatform(v string) {
	o.Platform.Set(&v)
}

// SetPlatformNil sets the value for Platform to be an explicit nil
func (o *PiUserAPIModelsDeviceResponse) SetPlatformNil() {
	o.Platform.Set(nil)
}

// UnsetPlatform ensures that no value is present for Platform, not even an explicit nil
func (o *PiUserAPIModelsDeviceResponse) UnsetPlatform() {
	o.Platform.Unset()
}

// GetNotificationPreference returns the NotificationPreference field value if set, zero value otherwise.
func (o *PiUserAPIModelsDeviceResponse) GetNotificationPreference() PiUserAPIModelsNotificatonPreferenceResponse {
	if o == nil || IsNil(o.NotificationPreference) {
		var ret PiUserAPIModelsNotificatonPreferenceResponse
		return ret
	}
	return *o.NotificationPreference
}

// GetNotificationPreferenceOk returns a tuple with the NotificationPreference field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PiUserAPIModelsDeviceResponse) GetNotificationPreferenceOk() (*PiUserAPIModelsNotificatonPreferenceResponse, bool) {
	if o == nil || IsNil(o.NotificationPreference) {
		return nil, false
	}
	return o.NotificationPreference, true
}

// HasNotificationPreference returns a boolean if a field has been set.
func (o *PiUserAPIModelsDeviceResponse) HasNotificationPreference() bool {
	if o != nil && !IsNil(o.NotificationPreference) {
		return true
	}

	return false
}

// SetNotificationPreference gets a reference to the given PiUserAPIModelsNotificatonPreferenceResponse and assigns it to the NotificationPreference field.
func (o *PiUserAPIModelsDeviceResponse) SetNotificationPreference(v PiUserAPIModelsNotificatonPreferenceResponse) {
	o.NotificationPreference = &v
}

func (o PiUserAPIModelsDeviceResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PiUserAPIModelsDeviceResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DeviceId) {
		toSerialize["deviceId"] = o.DeviceId
	}
	if o.DeviceToken.IsSet() {
		toSerialize["deviceToken"] = o.DeviceToken.Get()
	}
	if o.DeviceIdentifier.IsSet() {
		toSerialize["deviceIdentifier"] = o.DeviceIdentifier.Get()
	}
	if o.Language.IsSet() {
		toSerialize["language"] = o.Language.Get()
	}
	if o.Platform.IsSet() {
		toSerialize["platform"] = o.Platform.Get()
	}
	if !IsNil(o.NotificationPreference) {
		toSerialize["notificationPreference"] = o.NotificationPreference
	}
	return toSerialize, nil
}

type NullablePiUserAPIModelsDeviceResponse struct {
	value *PiUserAPIModelsDeviceResponse
	isSet bool
}

func (v NullablePiUserAPIModelsDeviceResponse) Get() *PiUserAPIModelsDeviceResponse {
	return v.value
}

func (v *NullablePiUserAPIModelsDeviceResponse) Set(val *PiUserAPIModelsDeviceResponse) {
	v.value = val
	v.isSet = true
}

func (v NullablePiUserAPIModelsDeviceResponse) IsSet() bool {
	return v.isSet
}

func (v *NullablePiUserAPIModelsDeviceResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePiUserAPIModelsDeviceResponse(val *PiUserAPIModelsDeviceResponse) *NullablePiUserAPIModelsDeviceResponse {
	return &NullablePiUserAPIModelsDeviceResponse{value: val, isSet: true}
}

func (v NullablePiUserAPIModelsDeviceResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePiUserAPIModelsDeviceResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
