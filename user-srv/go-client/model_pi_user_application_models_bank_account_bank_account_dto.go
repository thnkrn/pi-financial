/*
Pi.User.API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package go_client

import (
	"encoding/json"
)

// checks if the PiUserApplicationModelsBankAccountBankAccountDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PiUserApplicationModelsBankAccountBankAccountDto{}

// PiUserApplicationModelsBankAccountBankAccountDto struct for PiUserApplicationModelsBankAccountBankAccountDto
type PiUserApplicationModelsBankAccountBankAccountDto struct {
	AccountNo      NullableString `json:"accountNo,omitempty"`
	AccountName    NullableString `json:"accountName,omitempty"`
	BankCode       NullableString `json:"bankCode,omitempty"`
	BankBranchCode NullableString `json:"bankBranchCode,omitempty"`
}

// NewPiUserApplicationModelsBankAccountBankAccountDto instantiates a new PiUserApplicationModelsBankAccountBankAccountDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPiUserApplicationModelsBankAccountBankAccountDto() *PiUserApplicationModelsBankAccountBankAccountDto {
	this := PiUserApplicationModelsBankAccountBankAccountDto{}
	return &this
}

// NewPiUserApplicationModelsBankAccountBankAccountDtoWithDefaults instantiates a new PiUserApplicationModelsBankAccountBankAccountDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPiUserApplicationModelsBankAccountBankAccountDtoWithDefaults() *PiUserApplicationModelsBankAccountBankAccountDto {
	this := PiUserApplicationModelsBankAccountBankAccountDto{}
	return &this
}

// GetAccountNo returns the AccountNo field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiUserApplicationModelsBankAccountBankAccountDto) GetAccountNo() string {
	if o == nil || IsNil(o.AccountNo.Get()) {
		var ret string
		return ret
	}
	return *o.AccountNo.Get()
}

// GetAccountNoOk returns a tuple with the AccountNo field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiUserApplicationModelsBankAccountBankAccountDto) GetAccountNoOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AccountNo.Get(), o.AccountNo.IsSet()
}

// HasAccountNo returns a boolean if a field has been set.
func (o *PiUserApplicationModelsBankAccountBankAccountDto) HasAccountNo() bool {
	if o != nil && o.AccountNo.IsSet() {
		return true
	}

	return false
}

// SetAccountNo gets a reference to the given NullableString and assigns it to the AccountNo field.
func (o *PiUserApplicationModelsBankAccountBankAccountDto) SetAccountNo(v string) {
	o.AccountNo.Set(&v)
}

// SetAccountNoNil sets the value for AccountNo to be an explicit nil
func (o *PiUserApplicationModelsBankAccountBankAccountDto) SetAccountNoNil() {
	o.AccountNo.Set(nil)
}

// UnsetAccountNo ensures that no value is present for AccountNo, not even an explicit nil
func (o *PiUserApplicationModelsBankAccountBankAccountDto) UnsetAccountNo() {
	o.AccountNo.Unset()
}

// GetAccountName returns the AccountName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiUserApplicationModelsBankAccountBankAccountDto) GetAccountName() string {
	if o == nil || IsNil(o.AccountName.Get()) {
		var ret string
		return ret
	}
	return *o.AccountName.Get()
}

// GetAccountNameOk returns a tuple with the AccountName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiUserApplicationModelsBankAccountBankAccountDto) GetAccountNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AccountName.Get(), o.AccountName.IsSet()
}

// HasAccountName returns a boolean if a field has been set.
func (o *PiUserApplicationModelsBankAccountBankAccountDto) HasAccountName() bool {
	if o != nil && o.AccountName.IsSet() {
		return true
	}

	return false
}

// SetAccountName gets a reference to the given NullableString and assigns it to the AccountName field.
func (o *PiUserApplicationModelsBankAccountBankAccountDto) SetAccountName(v string) {
	o.AccountName.Set(&v)
}

// SetAccountNameNil sets the value for AccountName to be an explicit nil
func (o *PiUserApplicationModelsBankAccountBankAccountDto) SetAccountNameNil() {
	o.AccountName.Set(nil)
}

// UnsetAccountName ensures that no value is present for AccountName, not even an explicit nil
func (o *PiUserApplicationModelsBankAccountBankAccountDto) UnsetAccountName() {
	o.AccountName.Unset()
}

// GetBankCode returns the BankCode field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiUserApplicationModelsBankAccountBankAccountDto) GetBankCode() string {
	if o == nil || IsNil(o.BankCode.Get()) {
		var ret string
		return ret
	}
	return *o.BankCode.Get()
}

// GetBankCodeOk returns a tuple with the BankCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiUserApplicationModelsBankAccountBankAccountDto) GetBankCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.BankCode.Get(), o.BankCode.IsSet()
}

// HasBankCode returns a boolean if a field has been set.
func (o *PiUserApplicationModelsBankAccountBankAccountDto) HasBankCode() bool {
	if o != nil && o.BankCode.IsSet() {
		return true
	}

	return false
}

// SetBankCode gets a reference to the given NullableString and assigns it to the BankCode field.
func (o *PiUserApplicationModelsBankAccountBankAccountDto) SetBankCode(v string) {
	o.BankCode.Set(&v)
}

// SetBankCodeNil sets the value for BankCode to be an explicit nil
func (o *PiUserApplicationModelsBankAccountBankAccountDto) SetBankCodeNil() {
	o.BankCode.Set(nil)
}

// UnsetBankCode ensures that no value is present for BankCode, not even an explicit nil
func (o *PiUserApplicationModelsBankAccountBankAccountDto) UnsetBankCode() {
	o.BankCode.Unset()
}

// GetBankBranchCode returns the BankBranchCode field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiUserApplicationModelsBankAccountBankAccountDto) GetBankBranchCode() string {
	if o == nil || IsNil(o.BankBranchCode.Get()) {
		var ret string
		return ret
	}
	return *o.BankBranchCode.Get()
}

// GetBankBranchCodeOk returns a tuple with the BankBranchCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiUserApplicationModelsBankAccountBankAccountDto) GetBankBranchCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.BankBranchCode.Get(), o.BankBranchCode.IsSet()
}

// HasBankBranchCode returns a boolean if a field has been set.
func (o *PiUserApplicationModelsBankAccountBankAccountDto) HasBankBranchCode() bool {
	if o != nil && o.BankBranchCode.IsSet() {
		return true
	}

	return false
}

// SetBankBranchCode gets a reference to the given NullableString and assigns it to the BankBranchCode field.
func (o *PiUserApplicationModelsBankAccountBankAccountDto) SetBankBranchCode(v string) {
	o.BankBranchCode.Set(&v)
}

// SetBankBranchCodeNil sets the value for BankBranchCode to be an explicit nil
func (o *PiUserApplicationModelsBankAccountBankAccountDto) SetBankBranchCodeNil() {
	o.BankBranchCode.Set(nil)
}

// UnsetBankBranchCode ensures that no value is present for BankBranchCode, not even an explicit nil
func (o *PiUserApplicationModelsBankAccountBankAccountDto) UnsetBankBranchCode() {
	o.BankBranchCode.Unset()
}

func (o PiUserApplicationModelsBankAccountBankAccountDto) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PiUserApplicationModelsBankAccountBankAccountDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.AccountNo.IsSet() {
		toSerialize["accountNo"] = o.AccountNo.Get()
	}
	if o.AccountName.IsSet() {
		toSerialize["accountName"] = o.AccountName.Get()
	}
	if o.BankCode.IsSet() {
		toSerialize["bankCode"] = o.BankCode.Get()
	}
	if o.BankBranchCode.IsSet() {
		toSerialize["bankBranchCode"] = o.BankBranchCode.Get()
	}
	return toSerialize, nil
}

type NullablePiUserApplicationModelsBankAccountBankAccountDto struct {
	value *PiUserApplicationModelsBankAccountBankAccountDto
	isSet bool
}

func (v NullablePiUserApplicationModelsBankAccountBankAccountDto) Get() *PiUserApplicationModelsBankAccountBankAccountDto {
	return v.value
}

func (v *NullablePiUserApplicationModelsBankAccountBankAccountDto) Set(val *PiUserApplicationModelsBankAccountBankAccountDto) {
	v.value = val
	v.isSet = true
}

func (v NullablePiUserApplicationModelsBankAccountBankAccountDto) IsSet() bool {
	return v.isSet
}

func (v *NullablePiUserApplicationModelsBankAccountBankAccountDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePiUserApplicationModelsBankAccountBankAccountDto(val *PiUserApplicationModelsBankAccountBankAccountDto) *NullablePiUserApplicationModelsBankAccountBankAccountDto {
	return &NullablePiUserApplicationModelsBankAccountBankAccountDto{value: val, isSet: true}
}

func (v NullablePiUserApplicationModelsBankAccountBankAccountDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePiUserApplicationModelsBankAccountBankAccountDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
