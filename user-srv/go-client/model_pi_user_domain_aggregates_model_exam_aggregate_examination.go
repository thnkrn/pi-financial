/*
Pi.User.API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package go_client

import (
	"bytes"
	"encoding/json"
	"fmt"
	"time"
)

// checks if the PiUserDomainAggregatesModelExamAggregateExamination type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PiUserDomainAggregatesModelExamAggregateExamination{}

// PiUserDomainAggregatesModelExamAggregateExamination struct for PiUserDomainAggregatesModelExamAggregateExamination
type PiUserDomainAggregatesModelExamAggregateExamination struct {
	RowVersion string                                                `json:"rowVersion"`
	CreatedAt  *time.Time                                            `json:"createdAt,omitempty"`
	UpdatedAt  *time.Time                                            `json:"updatedAt,omitempty"`
	Id         *string                                               `json:"id,omitempty"`
	ExamId     *string                                               `json:"examId,omitempty"`
	UserId     *string                                               `json:"userId,omitempty"`
	ExamName   NullableString                                        `json:"examName,omitempty"`
	Score      *int32                                                `json:"score,omitempty"`
	ExpiredAt  *time.Time                                            `json:"expiredAt,omitempty"`
	User       *PiUserDomainAggregatesModelUserInfoAggregateUserInfo `json:"user,omitempty"`
}

type _PiUserDomainAggregatesModelExamAggregateExamination PiUserDomainAggregatesModelExamAggregateExamination

// NewPiUserDomainAggregatesModelExamAggregateExamination instantiates a new PiUserDomainAggregatesModelExamAggregateExamination object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPiUserDomainAggregatesModelExamAggregateExamination(rowVersion string) *PiUserDomainAggregatesModelExamAggregateExamination {
	this := PiUserDomainAggregatesModelExamAggregateExamination{}
	this.RowVersion = rowVersion
	return &this
}

// NewPiUserDomainAggregatesModelExamAggregateExaminationWithDefaults instantiates a new PiUserDomainAggregatesModelExamAggregateExamination object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPiUserDomainAggregatesModelExamAggregateExaminationWithDefaults() *PiUserDomainAggregatesModelExamAggregateExamination {
	this := PiUserDomainAggregatesModelExamAggregateExamination{}
	return &this
}

// GetRowVersion returns the RowVersion field value
func (o *PiUserDomainAggregatesModelExamAggregateExamination) GetRowVersion() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RowVersion
}

// GetRowVersionOk returns a tuple with the RowVersion field value
// and a boolean to check if the value has been set.
func (o *PiUserDomainAggregatesModelExamAggregateExamination) GetRowVersionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RowVersion, true
}

// SetRowVersion sets field value
func (o *PiUserDomainAggregatesModelExamAggregateExamination) SetRowVersion(v string) {
	o.RowVersion = v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *PiUserDomainAggregatesModelExamAggregateExamination) GetCreatedAt() time.Time {
	if o == nil || IsNil(o.CreatedAt) {
		var ret time.Time
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PiUserDomainAggregatesModelExamAggregateExamination) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *PiUserDomainAggregatesModelExamAggregateExamination) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given time.Time and assigns it to the CreatedAt field.
func (o *PiUserDomainAggregatesModelExamAggregateExamination) SetCreatedAt(v time.Time) {
	o.CreatedAt = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *PiUserDomainAggregatesModelExamAggregateExamination) GetUpdatedAt() time.Time {
	if o == nil || IsNil(o.UpdatedAt) {
		var ret time.Time
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PiUserDomainAggregatesModelExamAggregateExamination) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.UpdatedAt) {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *PiUserDomainAggregatesModelExamAggregateExamination) HasUpdatedAt() bool {
	if o != nil && !IsNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given time.Time and assigns it to the UpdatedAt field.
func (o *PiUserDomainAggregatesModelExamAggregateExamination) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *PiUserDomainAggregatesModelExamAggregateExamination) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PiUserDomainAggregatesModelExamAggregateExamination) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *PiUserDomainAggregatesModelExamAggregateExamination) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *PiUserDomainAggregatesModelExamAggregateExamination) SetId(v string) {
	o.Id = &v
}

// GetExamId returns the ExamId field value if set, zero value otherwise.
func (o *PiUserDomainAggregatesModelExamAggregateExamination) GetExamId() string {
	if o == nil || IsNil(o.ExamId) {
		var ret string
		return ret
	}
	return *o.ExamId
}

// GetExamIdOk returns a tuple with the ExamId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PiUserDomainAggregatesModelExamAggregateExamination) GetExamIdOk() (*string, bool) {
	if o == nil || IsNil(o.ExamId) {
		return nil, false
	}
	return o.ExamId, true
}

// HasExamId returns a boolean if a field has been set.
func (o *PiUserDomainAggregatesModelExamAggregateExamination) HasExamId() bool {
	if o != nil && !IsNil(o.ExamId) {
		return true
	}

	return false
}

// SetExamId gets a reference to the given string and assigns it to the ExamId field.
func (o *PiUserDomainAggregatesModelExamAggregateExamination) SetExamId(v string) {
	o.ExamId = &v
}

// GetUserId returns the UserId field value if set, zero value otherwise.
func (o *PiUserDomainAggregatesModelExamAggregateExamination) GetUserId() string {
	if o == nil || IsNil(o.UserId) {
		var ret string
		return ret
	}
	return *o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PiUserDomainAggregatesModelExamAggregateExamination) GetUserIdOk() (*string, bool) {
	if o == nil || IsNil(o.UserId) {
		return nil, false
	}
	return o.UserId, true
}

// HasUserId returns a boolean if a field has been set.
func (o *PiUserDomainAggregatesModelExamAggregateExamination) HasUserId() bool {
	if o != nil && !IsNil(o.UserId) {
		return true
	}

	return false
}

// SetUserId gets a reference to the given string and assigns it to the UserId field.
func (o *PiUserDomainAggregatesModelExamAggregateExamination) SetUserId(v string) {
	o.UserId = &v
}

// GetExamName returns the ExamName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiUserDomainAggregatesModelExamAggregateExamination) GetExamName() string {
	if o == nil || IsNil(o.ExamName.Get()) {
		var ret string
		return ret
	}
	return *o.ExamName.Get()
}

// GetExamNameOk returns a tuple with the ExamName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiUserDomainAggregatesModelExamAggregateExamination) GetExamNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ExamName.Get(), o.ExamName.IsSet()
}

// HasExamName returns a boolean if a field has been set.
func (o *PiUserDomainAggregatesModelExamAggregateExamination) HasExamName() bool {
	if o != nil && o.ExamName.IsSet() {
		return true
	}

	return false
}

// SetExamName gets a reference to the given NullableString and assigns it to the ExamName field.
func (o *PiUserDomainAggregatesModelExamAggregateExamination) SetExamName(v string) {
	o.ExamName.Set(&v)
}

// SetExamNameNil sets the value for ExamName to be an explicit nil
func (o *PiUserDomainAggregatesModelExamAggregateExamination) SetExamNameNil() {
	o.ExamName.Set(nil)
}

// UnsetExamName ensures that no value is present for ExamName, not even an explicit nil
func (o *PiUserDomainAggregatesModelExamAggregateExamination) UnsetExamName() {
	o.ExamName.Unset()
}

// GetScore returns the Score field value if set, zero value otherwise.
func (o *PiUserDomainAggregatesModelExamAggregateExamination) GetScore() int32 {
	if o == nil || IsNil(o.Score) {
		var ret int32
		return ret
	}
	return *o.Score
}

// GetScoreOk returns a tuple with the Score field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PiUserDomainAggregatesModelExamAggregateExamination) GetScoreOk() (*int32, bool) {
	if o == nil || IsNil(o.Score) {
		return nil, false
	}
	return o.Score, true
}

// HasScore returns a boolean if a field has been set.
func (o *PiUserDomainAggregatesModelExamAggregateExamination) HasScore() bool {
	if o != nil && !IsNil(o.Score) {
		return true
	}

	return false
}

// SetScore gets a reference to the given int32 and assigns it to the Score field.
func (o *PiUserDomainAggregatesModelExamAggregateExamination) SetScore(v int32) {
	o.Score = &v
}

// GetExpiredAt returns the ExpiredAt field value if set, zero value otherwise.
func (o *PiUserDomainAggregatesModelExamAggregateExamination) GetExpiredAt() time.Time {
	if o == nil || IsNil(o.ExpiredAt) {
		var ret time.Time
		return ret
	}
	return *o.ExpiredAt
}

// GetExpiredAtOk returns a tuple with the ExpiredAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PiUserDomainAggregatesModelExamAggregateExamination) GetExpiredAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.ExpiredAt) {
		return nil, false
	}
	return o.ExpiredAt, true
}

// HasExpiredAt returns a boolean if a field has been set.
func (o *PiUserDomainAggregatesModelExamAggregateExamination) HasExpiredAt() bool {
	if o != nil && !IsNil(o.ExpiredAt) {
		return true
	}

	return false
}

// SetExpiredAt gets a reference to the given time.Time and assigns it to the ExpiredAt field.
func (o *PiUserDomainAggregatesModelExamAggregateExamination) SetExpiredAt(v time.Time) {
	o.ExpiredAt = &v
}

// GetUser returns the User field value if set, zero value otherwise.
func (o *PiUserDomainAggregatesModelExamAggregateExamination) GetUser() PiUserDomainAggregatesModelUserInfoAggregateUserInfo {
	if o == nil || IsNil(o.User) {
		var ret PiUserDomainAggregatesModelUserInfoAggregateUserInfo
		return ret
	}
	return *o.User
}

// GetUserOk returns a tuple with the User field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PiUserDomainAggregatesModelExamAggregateExamination) GetUserOk() (*PiUserDomainAggregatesModelUserInfoAggregateUserInfo, bool) {
	if o == nil || IsNil(o.User) {
		return nil, false
	}
	return o.User, true
}

// HasUser returns a boolean if a field has been set.
func (o *PiUserDomainAggregatesModelExamAggregateExamination) HasUser() bool {
	if o != nil && !IsNil(o.User) {
		return true
	}

	return false
}

// SetUser gets a reference to the given PiUserDomainAggregatesModelUserInfoAggregateUserInfo and assigns it to the User field.
func (o *PiUserDomainAggregatesModelExamAggregateExamination) SetUser(v PiUserDomainAggregatesModelUserInfoAggregateUserInfo) {
	o.User = &v
}

func (o PiUserDomainAggregatesModelExamAggregateExamination) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PiUserDomainAggregatesModelExamAggregateExamination) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["rowVersion"] = o.RowVersion
	if !IsNil(o.CreatedAt) {
		toSerialize["createdAt"] = o.CreatedAt
	}
	if !IsNil(o.UpdatedAt) {
		toSerialize["updatedAt"] = o.UpdatedAt
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.ExamId) {
		toSerialize["examId"] = o.ExamId
	}
	if !IsNil(o.UserId) {
		toSerialize["userId"] = o.UserId
	}
	if o.ExamName.IsSet() {
		toSerialize["examName"] = o.ExamName.Get()
	}
	if !IsNil(o.Score) {
		toSerialize["score"] = o.Score
	}
	if !IsNil(o.ExpiredAt) {
		toSerialize["expiredAt"] = o.ExpiredAt
	}
	if !IsNil(o.User) {
		toSerialize["user"] = o.User
	}
	return toSerialize, nil
}

func (o *PiUserDomainAggregatesModelExamAggregateExamination) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"rowVersion",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varPiUserDomainAggregatesModelExamAggregateExamination := _PiUserDomainAggregatesModelExamAggregateExamination{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varPiUserDomainAggregatesModelExamAggregateExamination)

	if err != nil {
		return err
	}

	*o = PiUserDomainAggregatesModelExamAggregateExamination(varPiUserDomainAggregatesModelExamAggregateExamination)

	return err
}

type NullablePiUserDomainAggregatesModelExamAggregateExamination struct {
	value *PiUserDomainAggregatesModelExamAggregateExamination
	isSet bool
}

func (v NullablePiUserDomainAggregatesModelExamAggregateExamination) Get() *PiUserDomainAggregatesModelExamAggregateExamination {
	return v.value
}

func (v *NullablePiUserDomainAggregatesModelExamAggregateExamination) Set(val *PiUserDomainAggregatesModelExamAggregateExamination) {
	v.value = val
	v.isSet = true
}

func (v NullablePiUserDomainAggregatesModelExamAggregateExamination) IsSet() bool {
	return v.isSet
}

func (v *NullablePiUserDomainAggregatesModelExamAggregateExamination) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePiUserDomainAggregatesModelExamAggregateExamination(val *PiUserDomainAggregatesModelExamAggregateExamination) *NullablePiUserDomainAggregatesModelExamAggregateExamination {
	return &NullablePiUserDomainAggregatesModelExamAggregateExamination{value: val, isSet: true}
}

func (v NullablePiUserDomainAggregatesModelExamAggregateExamination) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePiUserDomainAggregatesModelExamAggregateExamination) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
