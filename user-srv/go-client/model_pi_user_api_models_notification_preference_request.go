/*
Pi.User.API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package go_client

import (
	"encoding/json"
)

// checks if the PiUserAPIModelsNotificationPreferenceRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PiUserAPIModelsNotificationPreferenceRequest{}

// PiUserAPIModelsNotificationPreferenceRequest struct for PiUserAPIModelsNotificationPreferenceRequest
type PiUserAPIModelsNotificationPreferenceRequest struct {
	Important NullableBool `json:"important,omitempty"`
	Order     NullableBool `json:"order,omitempty"`
	Market    NullableBool `json:"market,omitempty"`
	Portfolio NullableBool `json:"portfolio,omitempty"`
	Wallet    NullableBool `json:"wallet,omitempty"`
}

// NewPiUserAPIModelsNotificationPreferenceRequest instantiates a new PiUserAPIModelsNotificationPreferenceRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPiUserAPIModelsNotificationPreferenceRequest() *PiUserAPIModelsNotificationPreferenceRequest {
	this := PiUserAPIModelsNotificationPreferenceRequest{}
	return &this
}

// NewPiUserAPIModelsNotificationPreferenceRequestWithDefaults instantiates a new PiUserAPIModelsNotificationPreferenceRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPiUserAPIModelsNotificationPreferenceRequestWithDefaults() *PiUserAPIModelsNotificationPreferenceRequest {
	this := PiUserAPIModelsNotificationPreferenceRequest{}
	return &this
}

// GetImportant returns the Important field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiUserAPIModelsNotificationPreferenceRequest) GetImportant() bool {
	if o == nil || IsNil(o.Important.Get()) {
		var ret bool
		return ret
	}
	return *o.Important.Get()
}

// GetImportantOk returns a tuple with the Important field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiUserAPIModelsNotificationPreferenceRequest) GetImportantOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.Important.Get(), o.Important.IsSet()
}

// HasImportant returns a boolean if a field has been set.
func (o *PiUserAPIModelsNotificationPreferenceRequest) HasImportant() bool {
	if o != nil && o.Important.IsSet() {
		return true
	}

	return false
}

// SetImportant gets a reference to the given NullableBool and assigns it to the Important field.
func (o *PiUserAPIModelsNotificationPreferenceRequest) SetImportant(v bool) {
	o.Important.Set(&v)
}

// SetImportantNil sets the value for Important to be an explicit nil
func (o *PiUserAPIModelsNotificationPreferenceRequest) SetImportantNil() {
	o.Important.Set(nil)
}

// UnsetImportant ensures that no value is present for Important, not even an explicit nil
func (o *PiUserAPIModelsNotificationPreferenceRequest) UnsetImportant() {
	o.Important.Unset()
}

// GetOrder returns the Order field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiUserAPIModelsNotificationPreferenceRequest) GetOrder() bool {
	if o == nil || IsNil(o.Order.Get()) {
		var ret bool
		return ret
	}
	return *o.Order.Get()
}

// GetOrderOk returns a tuple with the Order field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiUserAPIModelsNotificationPreferenceRequest) GetOrderOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.Order.Get(), o.Order.IsSet()
}

// HasOrder returns a boolean if a field has been set.
func (o *PiUserAPIModelsNotificationPreferenceRequest) HasOrder() bool {
	if o != nil && o.Order.IsSet() {
		return true
	}

	return false
}

// SetOrder gets a reference to the given NullableBool and assigns it to the Order field.
func (o *PiUserAPIModelsNotificationPreferenceRequest) SetOrder(v bool) {
	o.Order.Set(&v)
}

// SetOrderNil sets the value for Order to be an explicit nil
func (o *PiUserAPIModelsNotificationPreferenceRequest) SetOrderNil() {
	o.Order.Set(nil)
}

// UnsetOrder ensures that no value is present for Order, not even an explicit nil
func (o *PiUserAPIModelsNotificationPreferenceRequest) UnsetOrder() {
	o.Order.Unset()
}

// GetMarket returns the Market field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiUserAPIModelsNotificationPreferenceRequest) GetMarket() bool {
	if o == nil || IsNil(o.Market.Get()) {
		var ret bool
		return ret
	}
	return *o.Market.Get()
}

// GetMarketOk returns a tuple with the Market field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiUserAPIModelsNotificationPreferenceRequest) GetMarketOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.Market.Get(), o.Market.IsSet()
}

// HasMarket returns a boolean if a field has been set.
func (o *PiUserAPIModelsNotificationPreferenceRequest) HasMarket() bool {
	if o != nil && o.Market.IsSet() {
		return true
	}

	return false
}

// SetMarket gets a reference to the given NullableBool and assigns it to the Market field.
func (o *PiUserAPIModelsNotificationPreferenceRequest) SetMarket(v bool) {
	o.Market.Set(&v)
}

// SetMarketNil sets the value for Market to be an explicit nil
func (o *PiUserAPIModelsNotificationPreferenceRequest) SetMarketNil() {
	o.Market.Set(nil)
}

// UnsetMarket ensures that no value is present for Market, not even an explicit nil
func (o *PiUserAPIModelsNotificationPreferenceRequest) UnsetMarket() {
	o.Market.Unset()
}

// GetPortfolio returns the Portfolio field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiUserAPIModelsNotificationPreferenceRequest) GetPortfolio() bool {
	if o == nil || IsNil(o.Portfolio.Get()) {
		var ret bool
		return ret
	}
	return *o.Portfolio.Get()
}

// GetPortfolioOk returns a tuple with the Portfolio field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiUserAPIModelsNotificationPreferenceRequest) GetPortfolioOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.Portfolio.Get(), o.Portfolio.IsSet()
}

// HasPortfolio returns a boolean if a field has been set.
func (o *PiUserAPIModelsNotificationPreferenceRequest) HasPortfolio() bool {
	if o != nil && o.Portfolio.IsSet() {
		return true
	}

	return false
}

// SetPortfolio gets a reference to the given NullableBool and assigns it to the Portfolio field.
func (o *PiUserAPIModelsNotificationPreferenceRequest) SetPortfolio(v bool) {
	o.Portfolio.Set(&v)
}

// SetPortfolioNil sets the value for Portfolio to be an explicit nil
func (o *PiUserAPIModelsNotificationPreferenceRequest) SetPortfolioNil() {
	o.Portfolio.Set(nil)
}

// UnsetPortfolio ensures that no value is present for Portfolio, not even an explicit nil
func (o *PiUserAPIModelsNotificationPreferenceRequest) UnsetPortfolio() {
	o.Portfolio.Unset()
}

// GetWallet returns the Wallet field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiUserAPIModelsNotificationPreferenceRequest) GetWallet() bool {
	if o == nil || IsNil(o.Wallet.Get()) {
		var ret bool
		return ret
	}
	return *o.Wallet.Get()
}

// GetWalletOk returns a tuple with the Wallet field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiUserAPIModelsNotificationPreferenceRequest) GetWalletOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.Wallet.Get(), o.Wallet.IsSet()
}

// HasWallet returns a boolean if a field has been set.
func (o *PiUserAPIModelsNotificationPreferenceRequest) HasWallet() bool {
	if o != nil && o.Wallet.IsSet() {
		return true
	}

	return false
}

// SetWallet gets a reference to the given NullableBool and assigns it to the Wallet field.
func (o *PiUserAPIModelsNotificationPreferenceRequest) SetWallet(v bool) {
	o.Wallet.Set(&v)
}

// SetWalletNil sets the value for Wallet to be an explicit nil
func (o *PiUserAPIModelsNotificationPreferenceRequest) SetWalletNil() {
	o.Wallet.Set(nil)
}

// UnsetWallet ensures that no value is present for Wallet, not even an explicit nil
func (o *PiUserAPIModelsNotificationPreferenceRequest) UnsetWallet() {
	o.Wallet.Unset()
}

func (o PiUserAPIModelsNotificationPreferenceRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PiUserAPIModelsNotificationPreferenceRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Important.IsSet() {
		toSerialize["important"] = o.Important.Get()
	}
	if o.Order.IsSet() {
		toSerialize["order"] = o.Order.Get()
	}
	if o.Market.IsSet() {
		toSerialize["market"] = o.Market.Get()
	}
	if o.Portfolio.IsSet() {
		toSerialize["portfolio"] = o.Portfolio.Get()
	}
	if o.Wallet.IsSet() {
		toSerialize["wallet"] = o.Wallet.Get()
	}
	return toSerialize, nil
}

type NullablePiUserAPIModelsNotificationPreferenceRequest struct {
	value *PiUserAPIModelsNotificationPreferenceRequest
	isSet bool
}

func (v NullablePiUserAPIModelsNotificationPreferenceRequest) Get() *PiUserAPIModelsNotificationPreferenceRequest {
	return v.value
}

func (v *NullablePiUserAPIModelsNotificationPreferenceRequest) Set(val *PiUserAPIModelsNotificationPreferenceRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePiUserAPIModelsNotificationPreferenceRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePiUserAPIModelsNotificationPreferenceRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePiUserAPIModelsNotificationPreferenceRequest(val *PiUserAPIModelsNotificationPreferenceRequest) *NullablePiUserAPIModelsNotificationPreferenceRequest {
	return &NullablePiUserAPIModelsNotificationPreferenceRequest{value: val, isSet: true}
}

func (v NullablePiUserAPIModelsNotificationPreferenceRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePiUserAPIModelsNotificationPreferenceRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
