/*
Pi.User.API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package go_client

import (
	"encoding/json"
)

// checks if the PiUserApplicationModelsTradingAccountWithProductInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PiUserApplicationModelsTradingAccountWithProductInfo{}

// PiUserApplicationModelsTradingAccountWithProductInfo struct for PiUserApplicationModelsTradingAccountWithProductInfo
type PiUserApplicationModelsTradingAccountWithProductInfo struct {
	TradingAccountNo        NullableString                                        `json:"tradingAccountNo,omitempty"`
	Product                 *PiCommonDomainAggregatesModelProductAggregateProduct `json:"product,omitempty"`
	CreditLine              *float64                                              `json:"creditLine,omitempty"`
	CreditLineCurrency      NullableString                                        `json:"creditLineCurrency,omitempty"`
	CreditLineEffectiveDate NullableString                                        `json:"creditLineEffectiveDate,omitempty"`
	CreditLineEndDate       NullableString                                        `json:"creditLineEndDate,omitempty"`
	MarketingId             NullableString                                        `json:"marketingId,omitempty"`
	AccountOpeningDate      NullableString                                        `json:"accountOpeningDate,omitempty"`
	AccountStatus           NullableString                                        `json:"accountStatus,omitempty"`
}

// NewPiUserApplicationModelsTradingAccountWithProductInfo instantiates a new PiUserApplicationModelsTradingAccountWithProductInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPiUserApplicationModelsTradingAccountWithProductInfo() *PiUserApplicationModelsTradingAccountWithProductInfo {
	this := PiUserApplicationModelsTradingAccountWithProductInfo{}
	return &this
}

// NewPiUserApplicationModelsTradingAccountWithProductInfoWithDefaults instantiates a new PiUserApplicationModelsTradingAccountWithProductInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPiUserApplicationModelsTradingAccountWithProductInfoWithDefaults() *PiUserApplicationModelsTradingAccountWithProductInfo {
	this := PiUserApplicationModelsTradingAccountWithProductInfo{}
	return &this
}

// GetTradingAccountNo returns the TradingAccountNo field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiUserApplicationModelsTradingAccountWithProductInfo) GetTradingAccountNo() string {
	if o == nil || IsNil(o.TradingAccountNo.Get()) {
		var ret string
		return ret
	}
	return *o.TradingAccountNo.Get()
}

// GetTradingAccountNoOk returns a tuple with the TradingAccountNo field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiUserApplicationModelsTradingAccountWithProductInfo) GetTradingAccountNoOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TradingAccountNo.Get(), o.TradingAccountNo.IsSet()
}

// HasTradingAccountNo returns a boolean if a field has been set.
func (o *PiUserApplicationModelsTradingAccountWithProductInfo) HasTradingAccountNo() bool {
	if o != nil && o.TradingAccountNo.IsSet() {
		return true
	}

	return false
}

// SetTradingAccountNo gets a reference to the given NullableString and assigns it to the TradingAccountNo field.
func (o *PiUserApplicationModelsTradingAccountWithProductInfo) SetTradingAccountNo(v string) {
	o.TradingAccountNo.Set(&v)
}

// SetTradingAccountNoNil sets the value for TradingAccountNo to be an explicit nil
func (o *PiUserApplicationModelsTradingAccountWithProductInfo) SetTradingAccountNoNil() {
	o.TradingAccountNo.Set(nil)
}

// UnsetTradingAccountNo ensures that no value is present for TradingAccountNo, not even an explicit nil
func (o *PiUserApplicationModelsTradingAccountWithProductInfo) UnsetTradingAccountNo() {
	o.TradingAccountNo.Unset()
}

// GetProduct returns the Product field value if set, zero value otherwise.
func (o *PiUserApplicationModelsTradingAccountWithProductInfo) GetProduct() PiCommonDomainAggregatesModelProductAggregateProduct {
	if o == nil || IsNil(o.Product) {
		var ret PiCommonDomainAggregatesModelProductAggregateProduct
		return ret
	}
	return *o.Product
}

// GetProductOk returns a tuple with the Product field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PiUserApplicationModelsTradingAccountWithProductInfo) GetProductOk() (*PiCommonDomainAggregatesModelProductAggregateProduct, bool) {
	if o == nil || IsNil(o.Product) {
		return nil, false
	}
	return o.Product, true
}

// HasProduct returns a boolean if a field has been set.
func (o *PiUserApplicationModelsTradingAccountWithProductInfo) HasProduct() bool {
	if o != nil && !IsNil(o.Product) {
		return true
	}

	return false
}

// SetProduct gets a reference to the given PiCommonDomainAggregatesModelProductAggregateProduct and assigns it to the Product field.
func (o *PiUserApplicationModelsTradingAccountWithProductInfo) SetProduct(v PiCommonDomainAggregatesModelProductAggregateProduct) {
	o.Product = &v
}

// GetCreditLine returns the CreditLine field value if set, zero value otherwise.
func (o *PiUserApplicationModelsTradingAccountWithProductInfo) GetCreditLine() float64 {
	if o == nil || IsNil(o.CreditLine) {
		var ret float64
		return ret
	}
	return *o.CreditLine
}

// GetCreditLineOk returns a tuple with the CreditLine field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PiUserApplicationModelsTradingAccountWithProductInfo) GetCreditLineOk() (*float64, bool) {
	if o == nil || IsNil(o.CreditLine) {
		return nil, false
	}
	return o.CreditLine, true
}

// HasCreditLine returns a boolean if a field has been set.
func (o *PiUserApplicationModelsTradingAccountWithProductInfo) HasCreditLine() bool {
	if o != nil && !IsNil(o.CreditLine) {
		return true
	}

	return false
}

// SetCreditLine gets a reference to the given float64 and assigns it to the CreditLine field.
func (o *PiUserApplicationModelsTradingAccountWithProductInfo) SetCreditLine(v float64) {
	o.CreditLine = &v
}

// GetCreditLineCurrency returns the CreditLineCurrency field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiUserApplicationModelsTradingAccountWithProductInfo) GetCreditLineCurrency() string {
	if o == nil || IsNil(o.CreditLineCurrency.Get()) {
		var ret string
		return ret
	}
	return *o.CreditLineCurrency.Get()
}

// GetCreditLineCurrencyOk returns a tuple with the CreditLineCurrency field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiUserApplicationModelsTradingAccountWithProductInfo) GetCreditLineCurrencyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CreditLineCurrency.Get(), o.CreditLineCurrency.IsSet()
}

// HasCreditLineCurrency returns a boolean if a field has been set.
func (o *PiUserApplicationModelsTradingAccountWithProductInfo) HasCreditLineCurrency() bool {
	if o != nil && o.CreditLineCurrency.IsSet() {
		return true
	}

	return false
}

// SetCreditLineCurrency gets a reference to the given NullableString and assigns it to the CreditLineCurrency field.
func (o *PiUserApplicationModelsTradingAccountWithProductInfo) SetCreditLineCurrency(v string) {
	o.CreditLineCurrency.Set(&v)
}

// SetCreditLineCurrencyNil sets the value for CreditLineCurrency to be an explicit nil
func (o *PiUserApplicationModelsTradingAccountWithProductInfo) SetCreditLineCurrencyNil() {
	o.CreditLineCurrency.Set(nil)
}

// UnsetCreditLineCurrency ensures that no value is present for CreditLineCurrency, not even an explicit nil
func (o *PiUserApplicationModelsTradingAccountWithProductInfo) UnsetCreditLineCurrency() {
	o.CreditLineCurrency.Unset()
}

// GetCreditLineEffectiveDate returns the CreditLineEffectiveDate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiUserApplicationModelsTradingAccountWithProductInfo) GetCreditLineEffectiveDate() string {
	if o == nil || IsNil(o.CreditLineEffectiveDate.Get()) {
		var ret string
		return ret
	}
	return *o.CreditLineEffectiveDate.Get()
}

// GetCreditLineEffectiveDateOk returns a tuple with the CreditLineEffectiveDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiUserApplicationModelsTradingAccountWithProductInfo) GetCreditLineEffectiveDateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CreditLineEffectiveDate.Get(), o.CreditLineEffectiveDate.IsSet()
}

// HasCreditLineEffectiveDate returns a boolean if a field has been set.
func (o *PiUserApplicationModelsTradingAccountWithProductInfo) HasCreditLineEffectiveDate() bool {
	if o != nil && o.CreditLineEffectiveDate.IsSet() {
		return true
	}

	return false
}

// SetCreditLineEffectiveDate gets a reference to the given NullableString and assigns it to the CreditLineEffectiveDate field.
func (o *PiUserApplicationModelsTradingAccountWithProductInfo) SetCreditLineEffectiveDate(v string) {
	o.CreditLineEffectiveDate.Set(&v)
}

// SetCreditLineEffectiveDateNil sets the value for CreditLineEffectiveDate to be an explicit nil
func (o *PiUserApplicationModelsTradingAccountWithProductInfo) SetCreditLineEffectiveDateNil() {
	o.CreditLineEffectiveDate.Set(nil)
}

// UnsetCreditLineEffectiveDate ensures that no value is present for CreditLineEffectiveDate, not even an explicit nil
func (o *PiUserApplicationModelsTradingAccountWithProductInfo) UnsetCreditLineEffectiveDate() {
	o.CreditLineEffectiveDate.Unset()
}

// GetCreditLineEndDate returns the CreditLineEndDate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiUserApplicationModelsTradingAccountWithProductInfo) GetCreditLineEndDate() string {
	if o == nil || IsNil(o.CreditLineEndDate.Get()) {
		var ret string
		return ret
	}
	return *o.CreditLineEndDate.Get()
}

// GetCreditLineEndDateOk returns a tuple with the CreditLineEndDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiUserApplicationModelsTradingAccountWithProductInfo) GetCreditLineEndDateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CreditLineEndDate.Get(), o.CreditLineEndDate.IsSet()
}

// HasCreditLineEndDate returns a boolean if a field has been set.
func (o *PiUserApplicationModelsTradingAccountWithProductInfo) HasCreditLineEndDate() bool {
	if o != nil && o.CreditLineEndDate.IsSet() {
		return true
	}

	return false
}

// SetCreditLineEndDate gets a reference to the given NullableString and assigns it to the CreditLineEndDate field.
func (o *PiUserApplicationModelsTradingAccountWithProductInfo) SetCreditLineEndDate(v string) {
	o.CreditLineEndDate.Set(&v)
}

// SetCreditLineEndDateNil sets the value for CreditLineEndDate to be an explicit nil
func (o *PiUserApplicationModelsTradingAccountWithProductInfo) SetCreditLineEndDateNil() {
	o.CreditLineEndDate.Set(nil)
}

// UnsetCreditLineEndDate ensures that no value is present for CreditLineEndDate, not even an explicit nil
func (o *PiUserApplicationModelsTradingAccountWithProductInfo) UnsetCreditLineEndDate() {
	o.CreditLineEndDate.Unset()
}

// GetMarketingId returns the MarketingId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiUserApplicationModelsTradingAccountWithProductInfo) GetMarketingId() string {
	if o == nil || IsNil(o.MarketingId.Get()) {
		var ret string
		return ret
	}
	return *o.MarketingId.Get()
}

// GetMarketingIdOk returns a tuple with the MarketingId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiUserApplicationModelsTradingAccountWithProductInfo) GetMarketingIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.MarketingId.Get(), o.MarketingId.IsSet()
}

// HasMarketingId returns a boolean if a field has been set.
func (o *PiUserApplicationModelsTradingAccountWithProductInfo) HasMarketingId() bool {
	if o != nil && o.MarketingId.IsSet() {
		return true
	}

	return false
}

// SetMarketingId gets a reference to the given NullableString and assigns it to the MarketingId field.
func (o *PiUserApplicationModelsTradingAccountWithProductInfo) SetMarketingId(v string) {
	o.MarketingId.Set(&v)
}

// SetMarketingIdNil sets the value for MarketingId to be an explicit nil
func (o *PiUserApplicationModelsTradingAccountWithProductInfo) SetMarketingIdNil() {
	o.MarketingId.Set(nil)
}

// UnsetMarketingId ensures that no value is present for MarketingId, not even an explicit nil
func (o *PiUserApplicationModelsTradingAccountWithProductInfo) UnsetMarketingId() {
	o.MarketingId.Unset()
}

// GetAccountOpeningDate returns the AccountOpeningDate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiUserApplicationModelsTradingAccountWithProductInfo) GetAccountOpeningDate() string {
	if o == nil || IsNil(o.AccountOpeningDate.Get()) {
		var ret string
		return ret
	}
	return *o.AccountOpeningDate.Get()
}

// GetAccountOpeningDateOk returns a tuple with the AccountOpeningDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiUserApplicationModelsTradingAccountWithProductInfo) GetAccountOpeningDateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AccountOpeningDate.Get(), o.AccountOpeningDate.IsSet()
}

// HasAccountOpeningDate returns a boolean if a field has been set.
func (o *PiUserApplicationModelsTradingAccountWithProductInfo) HasAccountOpeningDate() bool {
	if o != nil && o.AccountOpeningDate.IsSet() {
		return true
	}

	return false
}

// SetAccountOpeningDate gets a reference to the given NullableString and assigns it to the AccountOpeningDate field.
func (o *PiUserApplicationModelsTradingAccountWithProductInfo) SetAccountOpeningDate(v string) {
	o.AccountOpeningDate.Set(&v)
}

// SetAccountOpeningDateNil sets the value for AccountOpeningDate to be an explicit nil
func (o *PiUserApplicationModelsTradingAccountWithProductInfo) SetAccountOpeningDateNil() {
	o.AccountOpeningDate.Set(nil)
}

// UnsetAccountOpeningDate ensures that no value is present for AccountOpeningDate, not even an explicit nil
func (o *PiUserApplicationModelsTradingAccountWithProductInfo) UnsetAccountOpeningDate() {
	o.AccountOpeningDate.Unset()
}

// GetAccountStatus returns the AccountStatus field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiUserApplicationModelsTradingAccountWithProductInfo) GetAccountStatus() string {
	if o == nil || IsNil(o.AccountStatus.Get()) {
		var ret string
		return ret
	}
	return *o.AccountStatus.Get()
}

// GetAccountStatusOk returns a tuple with the AccountStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiUserApplicationModelsTradingAccountWithProductInfo) GetAccountStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AccountStatus.Get(), o.AccountStatus.IsSet()
}

// HasAccountStatus returns a boolean if a field has been set.
func (o *PiUserApplicationModelsTradingAccountWithProductInfo) HasAccountStatus() bool {
	if o != nil && o.AccountStatus.IsSet() {
		return true
	}

	return false
}

// SetAccountStatus gets a reference to the given NullableString and assigns it to the AccountStatus field.
func (o *PiUserApplicationModelsTradingAccountWithProductInfo) SetAccountStatus(v string) {
	o.AccountStatus.Set(&v)
}

// SetAccountStatusNil sets the value for AccountStatus to be an explicit nil
func (o *PiUserApplicationModelsTradingAccountWithProductInfo) SetAccountStatusNil() {
	o.AccountStatus.Set(nil)
}

// UnsetAccountStatus ensures that no value is present for AccountStatus, not even an explicit nil
func (o *PiUserApplicationModelsTradingAccountWithProductInfo) UnsetAccountStatus() {
	o.AccountStatus.Unset()
}

func (o PiUserApplicationModelsTradingAccountWithProductInfo) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PiUserApplicationModelsTradingAccountWithProductInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.TradingAccountNo.IsSet() {
		toSerialize["tradingAccountNo"] = o.TradingAccountNo.Get()
	}
	if !IsNil(o.Product) {
		toSerialize["product"] = o.Product
	}
	if !IsNil(o.CreditLine) {
		toSerialize["creditLine"] = o.CreditLine
	}
	if o.CreditLineCurrency.IsSet() {
		toSerialize["creditLineCurrency"] = o.CreditLineCurrency.Get()
	}
	if o.CreditLineEffectiveDate.IsSet() {
		toSerialize["creditLineEffectiveDate"] = o.CreditLineEffectiveDate.Get()
	}
	if o.CreditLineEndDate.IsSet() {
		toSerialize["creditLineEndDate"] = o.CreditLineEndDate.Get()
	}
	if o.MarketingId.IsSet() {
		toSerialize["marketingId"] = o.MarketingId.Get()
	}
	if o.AccountOpeningDate.IsSet() {
		toSerialize["accountOpeningDate"] = o.AccountOpeningDate.Get()
	}
	if o.AccountStatus.IsSet() {
		toSerialize["accountStatus"] = o.AccountStatus.Get()
	}
	return toSerialize, nil
}

type NullablePiUserApplicationModelsTradingAccountWithProductInfo struct {
	value *PiUserApplicationModelsTradingAccountWithProductInfo
	isSet bool
}

func (v NullablePiUserApplicationModelsTradingAccountWithProductInfo) Get() *PiUserApplicationModelsTradingAccountWithProductInfo {
	return v.value
}

func (v *NullablePiUserApplicationModelsTradingAccountWithProductInfo) Set(val *PiUserApplicationModelsTradingAccountWithProductInfo) {
	v.value = val
	v.isSet = true
}

func (v NullablePiUserApplicationModelsTradingAccountWithProductInfo) IsSet() bool {
	return v.isSet
}

func (v *NullablePiUserApplicationModelsTradingAccountWithProductInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePiUserApplicationModelsTradingAccountWithProductInfo(val *PiUserApplicationModelsTradingAccountWithProductInfo) *NullablePiUserApplicationModelsTradingAccountWithProductInfo {
	return &NullablePiUserApplicationModelsTradingAccountWithProductInfo{value: val, isSet: true}
}

func (v NullablePiUserApplicationModelsTradingAccountWithProductInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePiUserApplicationModelsTradingAccountWithProductInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
