/*
Pi.User.API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package go_client

import (
	"encoding/json"
)

// checks if the PiUserApplicationModelsDevice type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PiUserApplicationModelsDevice{}

// PiUserApplicationModelsDevice struct for PiUserApplicationModelsDevice
type PiUserApplicationModelsDevice struct {
	DeviceId               *string                                        `json:"deviceId,omitempty"`
	DeviceToken            NullableString                                 `json:"deviceToken,omitempty"`
	DeviceIdentifier       NullableString                                 `json:"deviceIdentifier,omitempty"`
	Language               NullableString                                 `json:"language,omitempty"`
	Platform               NullableString                                 `json:"platform,omitempty"`
	NotificationPreference *PiUserApplicationModelsNotificationPreference `json:"notificationPreference,omitempty"`
}

// NewPiUserApplicationModelsDevice instantiates a new PiUserApplicationModelsDevice object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPiUserApplicationModelsDevice() *PiUserApplicationModelsDevice {
	this := PiUserApplicationModelsDevice{}
	return &this
}

// NewPiUserApplicationModelsDeviceWithDefaults instantiates a new PiUserApplicationModelsDevice object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPiUserApplicationModelsDeviceWithDefaults() *PiUserApplicationModelsDevice {
	this := PiUserApplicationModelsDevice{}
	return &this
}

// GetDeviceId returns the DeviceId field value if set, zero value otherwise.
func (o *PiUserApplicationModelsDevice) GetDeviceId() string {
	if o == nil || IsNil(o.DeviceId) {
		var ret string
		return ret
	}
	return *o.DeviceId
}

// GetDeviceIdOk returns a tuple with the DeviceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PiUserApplicationModelsDevice) GetDeviceIdOk() (*string, bool) {
	if o == nil || IsNil(o.DeviceId) {
		return nil, false
	}
	return o.DeviceId, true
}

// HasDeviceId returns a boolean if a field has been set.
func (o *PiUserApplicationModelsDevice) HasDeviceId() bool {
	if o != nil && !IsNil(o.DeviceId) {
		return true
	}

	return false
}

// SetDeviceId gets a reference to the given string and assigns it to the DeviceId field.
func (o *PiUserApplicationModelsDevice) SetDeviceId(v string) {
	o.DeviceId = &v
}

// GetDeviceToken returns the DeviceToken field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiUserApplicationModelsDevice) GetDeviceToken() string {
	if o == nil || IsNil(o.DeviceToken.Get()) {
		var ret string
		return ret
	}
	return *o.DeviceToken.Get()
}

// GetDeviceTokenOk returns a tuple with the DeviceToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiUserApplicationModelsDevice) GetDeviceTokenOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.DeviceToken.Get(), o.DeviceToken.IsSet()
}

// HasDeviceToken returns a boolean if a field has been set.
func (o *PiUserApplicationModelsDevice) HasDeviceToken() bool {
	if o != nil && o.DeviceToken.IsSet() {
		return true
	}

	return false
}

// SetDeviceToken gets a reference to the given NullableString and assigns it to the DeviceToken field.
func (o *PiUserApplicationModelsDevice) SetDeviceToken(v string) {
	o.DeviceToken.Set(&v)
}

// SetDeviceTokenNil sets the value for DeviceToken to be an explicit nil
func (o *PiUserApplicationModelsDevice) SetDeviceTokenNil() {
	o.DeviceToken.Set(nil)
}

// UnsetDeviceToken ensures that no value is present for DeviceToken, not even an explicit nil
func (o *PiUserApplicationModelsDevice) UnsetDeviceToken() {
	o.DeviceToken.Unset()
}

// GetDeviceIdentifier returns the DeviceIdentifier field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiUserApplicationModelsDevice) GetDeviceIdentifier() string {
	if o == nil || IsNil(o.DeviceIdentifier.Get()) {
		var ret string
		return ret
	}
	return *o.DeviceIdentifier.Get()
}

// GetDeviceIdentifierOk returns a tuple with the DeviceIdentifier field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiUserApplicationModelsDevice) GetDeviceIdentifierOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.DeviceIdentifier.Get(), o.DeviceIdentifier.IsSet()
}

// HasDeviceIdentifier returns a boolean if a field has been set.
func (o *PiUserApplicationModelsDevice) HasDeviceIdentifier() bool {
	if o != nil && o.DeviceIdentifier.IsSet() {
		return true
	}

	return false
}

// SetDeviceIdentifier gets a reference to the given NullableString and assigns it to the DeviceIdentifier field.
func (o *PiUserApplicationModelsDevice) SetDeviceIdentifier(v string) {
	o.DeviceIdentifier.Set(&v)
}

// SetDeviceIdentifierNil sets the value for DeviceIdentifier to be an explicit nil
func (o *PiUserApplicationModelsDevice) SetDeviceIdentifierNil() {
	o.DeviceIdentifier.Set(nil)
}

// UnsetDeviceIdentifier ensures that no value is present for DeviceIdentifier, not even an explicit nil
func (o *PiUserApplicationModelsDevice) UnsetDeviceIdentifier() {
	o.DeviceIdentifier.Unset()
}

// GetLanguage returns the Language field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiUserApplicationModelsDevice) GetLanguage() string {
	if o == nil || IsNil(o.Language.Get()) {
		var ret string
		return ret
	}
	return *o.Language.Get()
}

// GetLanguageOk returns a tuple with the Language field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiUserApplicationModelsDevice) GetLanguageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Language.Get(), o.Language.IsSet()
}

// HasLanguage returns a boolean if a field has been set.
func (o *PiUserApplicationModelsDevice) HasLanguage() bool {
	if o != nil && o.Language.IsSet() {
		return true
	}

	return false
}

// SetLanguage gets a reference to the given NullableString and assigns it to the Language field.
func (o *PiUserApplicationModelsDevice) SetLanguage(v string) {
	o.Language.Set(&v)
}

// SetLanguageNil sets the value for Language to be an explicit nil
func (o *PiUserApplicationModelsDevice) SetLanguageNil() {
	o.Language.Set(nil)
}

// UnsetLanguage ensures that no value is present for Language, not even an explicit nil
func (o *PiUserApplicationModelsDevice) UnsetLanguage() {
	o.Language.Unset()
}

// GetPlatform returns the Platform field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiUserApplicationModelsDevice) GetPlatform() string {
	if o == nil || IsNil(o.Platform.Get()) {
		var ret string
		return ret
	}
	return *o.Platform.Get()
}

// GetPlatformOk returns a tuple with the Platform field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiUserApplicationModelsDevice) GetPlatformOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Platform.Get(), o.Platform.IsSet()
}

// HasPlatform returns a boolean if a field has been set.
func (o *PiUserApplicationModelsDevice) HasPlatform() bool {
	if o != nil && o.Platform.IsSet() {
		return true
	}

	return false
}

// SetPlatform gets a reference to the given NullableString and assigns it to the Platform field.
func (o *PiUserApplicationModelsDevice) SetPlatform(v string) {
	o.Platform.Set(&v)
}

// SetPlatformNil sets the value for Platform to be an explicit nil
func (o *PiUserApplicationModelsDevice) SetPlatformNil() {
	o.Platform.Set(nil)
}

// UnsetPlatform ensures that no value is present for Platform, not even an explicit nil
func (o *PiUserApplicationModelsDevice) UnsetPlatform() {
	o.Platform.Unset()
}

// GetNotificationPreference returns the NotificationPreference field value if set, zero value otherwise.
func (o *PiUserApplicationModelsDevice) GetNotificationPreference() PiUserApplicationModelsNotificationPreference {
	if o == nil || IsNil(o.NotificationPreference) {
		var ret PiUserApplicationModelsNotificationPreference
		return ret
	}
	return *o.NotificationPreference
}

// GetNotificationPreferenceOk returns a tuple with the NotificationPreference field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PiUserApplicationModelsDevice) GetNotificationPreferenceOk() (*PiUserApplicationModelsNotificationPreference, bool) {
	if o == nil || IsNil(o.NotificationPreference) {
		return nil, false
	}
	return o.NotificationPreference, true
}

// HasNotificationPreference returns a boolean if a field has been set.
func (o *PiUserApplicationModelsDevice) HasNotificationPreference() bool {
	if o != nil && !IsNil(o.NotificationPreference) {
		return true
	}

	return false
}

// SetNotificationPreference gets a reference to the given PiUserApplicationModelsNotificationPreference and assigns it to the NotificationPreference field.
func (o *PiUserApplicationModelsDevice) SetNotificationPreference(v PiUserApplicationModelsNotificationPreference) {
	o.NotificationPreference = &v
}

func (o PiUserApplicationModelsDevice) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PiUserApplicationModelsDevice) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DeviceId) {
		toSerialize["deviceId"] = o.DeviceId
	}
	if o.DeviceToken.IsSet() {
		toSerialize["deviceToken"] = o.DeviceToken.Get()
	}
	if o.DeviceIdentifier.IsSet() {
		toSerialize["deviceIdentifier"] = o.DeviceIdentifier.Get()
	}
	if o.Language.IsSet() {
		toSerialize["language"] = o.Language.Get()
	}
	if o.Platform.IsSet() {
		toSerialize["platform"] = o.Platform.Get()
	}
	if !IsNil(o.NotificationPreference) {
		toSerialize["notificationPreference"] = o.NotificationPreference
	}
	return toSerialize, nil
}

type NullablePiUserApplicationModelsDevice struct {
	value *PiUserApplicationModelsDevice
	isSet bool
}

func (v NullablePiUserApplicationModelsDevice) Get() *PiUserApplicationModelsDevice {
	return v.value
}

func (v *NullablePiUserApplicationModelsDevice) Set(val *PiUserApplicationModelsDevice) {
	v.value = val
	v.isSet = true
}

func (v NullablePiUserApplicationModelsDevice) IsSet() bool {
	return v.isSet
}

func (v *NullablePiUserApplicationModelsDevice) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePiUserApplicationModelsDevice(val *PiUserApplicationModelsDevice) *NullablePiUserApplicationModelsDevice {
	return &NullablePiUserApplicationModelsDevice{value: val, isSet: true}
}

func (v NullablePiUserApplicationModelsDevice) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePiUserApplicationModelsDevice) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
