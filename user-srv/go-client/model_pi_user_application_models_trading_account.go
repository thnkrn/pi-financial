/*
Pi.User.API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package go_client

import (
	"encoding/json"
)

// checks if the PiUserApplicationModelsTradingAccount type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PiUserApplicationModelsTradingAccount{}

// PiUserApplicationModelsTradingAccount struct for PiUserApplicationModelsTradingAccount
type PiUserApplicationModelsTradingAccount struct {
	TradingAccountId NullableString `json:"tradingAccountId,omitempty"`
	AcctCode         NullableString `json:"acctCode,omitempty"`
}

// NewPiUserApplicationModelsTradingAccount instantiates a new PiUserApplicationModelsTradingAccount object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPiUserApplicationModelsTradingAccount() *PiUserApplicationModelsTradingAccount {
	this := PiUserApplicationModelsTradingAccount{}
	return &this
}

// NewPiUserApplicationModelsTradingAccountWithDefaults instantiates a new PiUserApplicationModelsTradingAccount object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPiUserApplicationModelsTradingAccountWithDefaults() *PiUserApplicationModelsTradingAccount {
	this := PiUserApplicationModelsTradingAccount{}
	return &this
}

// GetTradingAccountId returns the TradingAccountId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiUserApplicationModelsTradingAccount) GetTradingAccountId() string {
	if o == nil || IsNil(o.TradingAccountId.Get()) {
		var ret string
		return ret
	}
	return *o.TradingAccountId.Get()
}

// GetTradingAccountIdOk returns a tuple with the TradingAccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiUserApplicationModelsTradingAccount) GetTradingAccountIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TradingAccountId.Get(), o.TradingAccountId.IsSet()
}

// HasTradingAccountId returns a boolean if a field has been set.
func (o *PiUserApplicationModelsTradingAccount) HasTradingAccountId() bool {
	if o != nil && o.TradingAccountId.IsSet() {
		return true
	}

	return false
}

// SetTradingAccountId gets a reference to the given NullableString and assigns it to the TradingAccountId field.
func (o *PiUserApplicationModelsTradingAccount) SetTradingAccountId(v string) {
	o.TradingAccountId.Set(&v)
}

// SetTradingAccountIdNil sets the value for TradingAccountId to be an explicit nil
func (o *PiUserApplicationModelsTradingAccount) SetTradingAccountIdNil() {
	o.TradingAccountId.Set(nil)
}

// UnsetTradingAccountId ensures that no value is present for TradingAccountId, not even an explicit nil
func (o *PiUserApplicationModelsTradingAccount) UnsetTradingAccountId() {
	o.TradingAccountId.Unset()
}

// GetAcctCode returns the AcctCode field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiUserApplicationModelsTradingAccount) GetAcctCode() string {
	if o == nil || IsNil(o.AcctCode.Get()) {
		var ret string
		return ret
	}
	return *o.AcctCode.Get()
}

// GetAcctCodeOk returns a tuple with the AcctCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiUserApplicationModelsTradingAccount) GetAcctCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AcctCode.Get(), o.AcctCode.IsSet()
}

// HasAcctCode returns a boolean if a field has been set.
func (o *PiUserApplicationModelsTradingAccount) HasAcctCode() bool {
	if o != nil && o.AcctCode.IsSet() {
		return true
	}

	return false
}

// SetAcctCode gets a reference to the given NullableString and assigns it to the AcctCode field.
func (o *PiUserApplicationModelsTradingAccount) SetAcctCode(v string) {
	o.AcctCode.Set(&v)
}

// SetAcctCodeNil sets the value for AcctCode to be an explicit nil
func (o *PiUserApplicationModelsTradingAccount) SetAcctCodeNil() {
	o.AcctCode.Set(nil)
}

// UnsetAcctCode ensures that no value is present for AcctCode, not even an explicit nil
func (o *PiUserApplicationModelsTradingAccount) UnsetAcctCode() {
	o.AcctCode.Unset()
}

func (o PiUserApplicationModelsTradingAccount) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PiUserApplicationModelsTradingAccount) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.TradingAccountId.IsSet() {
		toSerialize["tradingAccountId"] = o.TradingAccountId.Get()
	}
	if o.AcctCode.IsSet() {
		toSerialize["acctCode"] = o.AcctCode.Get()
	}
	return toSerialize, nil
}

type NullablePiUserApplicationModelsTradingAccount struct {
	value *PiUserApplicationModelsTradingAccount
	isSet bool
}

func (v NullablePiUserApplicationModelsTradingAccount) Get() *PiUserApplicationModelsTradingAccount {
	return v.value
}

func (v *NullablePiUserApplicationModelsTradingAccount) Set(val *PiUserApplicationModelsTradingAccount) {
	v.value = val
	v.isSet = true
}

func (v NullablePiUserApplicationModelsTradingAccount) IsSet() bool {
	return v.isSet
}

func (v *NullablePiUserApplicationModelsTradingAccount) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePiUserApplicationModelsTradingAccount(val *PiUserApplicationModelsTradingAccount) *NullablePiUserApplicationModelsTradingAccount {
	return &NullablePiUserApplicationModelsTradingAccount{value: val, isSet: true}
}

func (v NullablePiUserApplicationModelsTradingAccount) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePiUserApplicationModelsTradingAccount) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
