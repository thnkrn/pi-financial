/*
Pi.User.API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package go_client

import (
	"encoding/json"
)

// checks if the PiUserApplicationModelsNotificationPreference type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PiUserApplicationModelsNotificationPreference{}

// PiUserApplicationModelsNotificationPreference struct for PiUserApplicationModelsNotificationPreference
type PiUserApplicationModelsNotificationPreference struct {
	Important *bool `json:"important,omitempty"`
	Order     *bool `json:"order,omitempty"`
	Portfolio *bool `json:"portfolio,omitempty"`
	Wallet    *bool `json:"wallet,omitempty"`
	Market    *bool `json:"market,omitempty"`
}

// NewPiUserApplicationModelsNotificationPreference instantiates a new PiUserApplicationModelsNotificationPreference object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPiUserApplicationModelsNotificationPreference() *PiUserApplicationModelsNotificationPreference {
	this := PiUserApplicationModelsNotificationPreference{}
	return &this
}

// NewPiUserApplicationModelsNotificationPreferenceWithDefaults instantiates a new PiUserApplicationModelsNotificationPreference object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPiUserApplicationModelsNotificationPreferenceWithDefaults() *PiUserApplicationModelsNotificationPreference {
	this := PiUserApplicationModelsNotificationPreference{}
	return &this
}

// GetImportant returns the Important field value if set, zero value otherwise.
func (o *PiUserApplicationModelsNotificationPreference) GetImportant() bool {
	if o == nil || IsNil(o.Important) {
		var ret bool
		return ret
	}
	return *o.Important
}

// GetImportantOk returns a tuple with the Important field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PiUserApplicationModelsNotificationPreference) GetImportantOk() (*bool, bool) {
	if o == nil || IsNil(o.Important) {
		return nil, false
	}
	return o.Important, true
}

// HasImportant returns a boolean if a field has been set.
func (o *PiUserApplicationModelsNotificationPreference) HasImportant() bool {
	if o != nil && !IsNil(o.Important) {
		return true
	}

	return false
}

// SetImportant gets a reference to the given bool and assigns it to the Important field.
func (o *PiUserApplicationModelsNotificationPreference) SetImportant(v bool) {
	o.Important = &v
}

// GetOrder returns the Order field value if set, zero value otherwise.
func (o *PiUserApplicationModelsNotificationPreference) GetOrder() bool {
	if o == nil || IsNil(o.Order) {
		var ret bool
		return ret
	}
	return *o.Order
}

// GetOrderOk returns a tuple with the Order field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PiUserApplicationModelsNotificationPreference) GetOrderOk() (*bool, bool) {
	if o == nil || IsNil(o.Order) {
		return nil, false
	}
	return o.Order, true
}

// HasOrder returns a boolean if a field has been set.
func (o *PiUserApplicationModelsNotificationPreference) HasOrder() bool {
	if o != nil && !IsNil(o.Order) {
		return true
	}

	return false
}

// SetOrder gets a reference to the given bool and assigns it to the Order field.
func (o *PiUserApplicationModelsNotificationPreference) SetOrder(v bool) {
	o.Order = &v
}

// GetPortfolio returns the Portfolio field value if set, zero value otherwise.
func (o *PiUserApplicationModelsNotificationPreference) GetPortfolio() bool {
	if o == nil || IsNil(o.Portfolio) {
		var ret bool
		return ret
	}
	return *o.Portfolio
}

// GetPortfolioOk returns a tuple with the Portfolio field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PiUserApplicationModelsNotificationPreference) GetPortfolioOk() (*bool, bool) {
	if o == nil || IsNil(o.Portfolio) {
		return nil, false
	}
	return o.Portfolio, true
}

// HasPortfolio returns a boolean if a field has been set.
func (o *PiUserApplicationModelsNotificationPreference) HasPortfolio() bool {
	if o != nil && !IsNil(o.Portfolio) {
		return true
	}

	return false
}

// SetPortfolio gets a reference to the given bool and assigns it to the Portfolio field.
func (o *PiUserApplicationModelsNotificationPreference) SetPortfolio(v bool) {
	o.Portfolio = &v
}

// GetWallet returns the Wallet field value if set, zero value otherwise.
func (o *PiUserApplicationModelsNotificationPreference) GetWallet() bool {
	if o == nil || IsNil(o.Wallet) {
		var ret bool
		return ret
	}
	return *o.Wallet
}

// GetWalletOk returns a tuple with the Wallet field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PiUserApplicationModelsNotificationPreference) GetWalletOk() (*bool, bool) {
	if o == nil || IsNil(o.Wallet) {
		return nil, false
	}
	return o.Wallet, true
}

// HasWallet returns a boolean if a field has been set.
func (o *PiUserApplicationModelsNotificationPreference) HasWallet() bool {
	if o != nil && !IsNil(o.Wallet) {
		return true
	}

	return false
}

// SetWallet gets a reference to the given bool and assigns it to the Wallet field.
func (o *PiUserApplicationModelsNotificationPreference) SetWallet(v bool) {
	o.Wallet = &v
}

// GetMarket returns the Market field value if set, zero value otherwise.
func (o *PiUserApplicationModelsNotificationPreference) GetMarket() bool {
	if o == nil || IsNil(o.Market) {
		var ret bool
		return ret
	}
	return *o.Market
}

// GetMarketOk returns a tuple with the Market field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PiUserApplicationModelsNotificationPreference) GetMarketOk() (*bool, bool) {
	if o == nil || IsNil(o.Market) {
		return nil, false
	}
	return o.Market, true
}

// HasMarket returns a boolean if a field has been set.
func (o *PiUserApplicationModelsNotificationPreference) HasMarket() bool {
	if o != nil && !IsNil(o.Market) {
		return true
	}

	return false
}

// SetMarket gets a reference to the given bool and assigns it to the Market field.
func (o *PiUserApplicationModelsNotificationPreference) SetMarket(v bool) {
	o.Market = &v
}

func (o PiUserApplicationModelsNotificationPreference) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PiUserApplicationModelsNotificationPreference) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Important) {
		toSerialize["important"] = o.Important
	}
	if !IsNil(o.Order) {
		toSerialize["order"] = o.Order
	}
	if !IsNil(o.Portfolio) {
		toSerialize["portfolio"] = o.Portfolio
	}
	if !IsNil(o.Wallet) {
		toSerialize["wallet"] = o.Wallet
	}
	if !IsNil(o.Market) {
		toSerialize["market"] = o.Market
	}
	return toSerialize, nil
}

type NullablePiUserApplicationModelsNotificationPreference struct {
	value *PiUserApplicationModelsNotificationPreference
	isSet bool
}

func (v NullablePiUserApplicationModelsNotificationPreference) Get() *PiUserApplicationModelsNotificationPreference {
	return v.value
}

func (v *NullablePiUserApplicationModelsNotificationPreference) Set(val *PiUserApplicationModelsNotificationPreference) {
	v.value = val
	v.isSet = true
}

func (v NullablePiUserApplicationModelsNotificationPreference) IsSet() bool {
	return v.isSet
}

func (v *NullablePiUserApplicationModelsNotificationPreference) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePiUserApplicationModelsNotificationPreference(val *PiUserApplicationModelsNotificationPreference) *NullablePiUserApplicationModelsNotificationPreference {
	return &NullablePiUserApplicationModelsNotificationPreference{value: val, isSet: true}
}

func (v NullablePiUserApplicationModelsNotificationPreference) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePiUserApplicationModelsNotificationPreference) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
