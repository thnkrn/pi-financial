/*
Pi.User.API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package go_client

import (
	"bytes"
	"encoding/json"
	"fmt"
	"time"
)

// checks if the PiUserDomainAggregatesModelUserInfoAggregateUserInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PiUserDomainAggregatesModelUserInfoAggregateUserInfo{}

// PiUserDomainAggregatesModelUserInfoAggregateUserInfo struct for PiUserDomainAggregatesModelUserInfoAggregateUserInfo
type PiUserDomainAggregatesModelUserInfoAggregateUserInfo struct {
	RowVersion              string                                                               `json:"rowVersion"`
	Id                      *string                                                              `json:"id,omitempty"`
	CustomerId              NullableString                                                       `json:"customerId,omitempty"`
	CustCodes               []PiUserDomainAggregatesModelUserInfoAggregateCustCode               `json:"custCodes,omitempty"`
	TradingAccounts         []PiUserDomainAggregatesModelUserInfoAggregateTradingAccount         `json:"tradingAccounts,omitempty"`
	Devices                 []PiUserDomainAggregatesModelUserInfoAggregateDevice                 `json:"devices,omitempty"`
	NotificationPreferences []PiUserDomainAggregatesModelUserInfoAggregateNotificationPreference `json:"notificationPreferences,omitempty"`
	FirstnameTh             NullableString                                                       `json:"firstnameTh,omitempty"`
	LastnameTh              NullableString                                                       `json:"lastnameTh,omitempty"`
	FirstnameEn             NullableString                                                       `json:"firstnameEn,omitempty"`
	LastnameEn              NullableString                                                       `json:"lastnameEn,omitempty"`
	CitizenId               NullableString                                                       `json:"citizenId,omitempty"`
	CitizenIdHash           NullableString                                                       `json:"citizenIdHash,omitempty"`
	PhoneNumber             NullableString                                                       `json:"phoneNumber,omitempty"`
	PhoneNumberHash         NullableString                                                       `json:"phoneNumberHash,omitempty"`
	Email                   NullableString                                                       `json:"email,omitempty"`
	EmailHash               NullableString                                                       `json:"emailHash,omitempty"`
	GlobalAccount           NullableString                                                       `json:"globalAccount,omitempty"`
	PlaceOfBirthCountry     NullableString                                                       `json:"placeOfBirthCountry,omitempty"`
	PlaceOfBirthCity        NullableString                                                       `json:"placeOfBirthCity,omitempty"`
	DateOfBirth             NullableString                                                       `json:"dateOfBirth,omitempty"`
	BankAccounts            []PiUserDomainAggregatesModelBankAccountAggregateBankAccount         `json:"bankAccounts,omitempty"`
	Documents               []PiUserDomainAggregatesModelDocumentAggregateDocument               `json:"documents,omitempty"`
	Examinations            []PiUserDomainAggregatesModelExamAggregateExamination                `json:"examinations,omitempty"`
	CreatedAt               *time.Time                                                           `json:"createdAt,omitempty"`
	UpdatedAt               NullableTime                                                         `json:"updatedAt,omitempty"`
	UserAccounts            []PiUserDomainAggregatesModelUserAccountAggregateUserAccount         `json:"userAccounts,omitempty"`
	Kyc                     *PiUserDomainAggregatesModelKycAggregateKyc                          `json:"kyc,omitempty"`
	Address                 *PiUserDomainAggregatesModelAddressAggregateAddress                  `json:"address,omitempty"`
	SuitabilityTests        []PiUserDomainAggregatesModelSuitabilityTestAggregateSuitabilityTest `json:"suitabilityTests,omitempty"`
	BankAccountsV2          []PiUserDomainAggregatesModelBankAccountAggregateBankAccountV2       `json:"bankAccountsV2,omitempty"`
}

type _PiUserDomainAggregatesModelUserInfoAggregateUserInfo PiUserDomainAggregatesModelUserInfoAggregateUserInfo

// NewPiUserDomainAggregatesModelUserInfoAggregateUserInfo instantiates a new PiUserDomainAggregatesModelUserInfoAggregateUserInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPiUserDomainAggregatesModelUserInfoAggregateUserInfo(rowVersion string) *PiUserDomainAggregatesModelUserInfoAggregateUserInfo {
	this := PiUserDomainAggregatesModelUserInfoAggregateUserInfo{}
	this.RowVersion = rowVersion
	return &this
}

// NewPiUserDomainAggregatesModelUserInfoAggregateUserInfoWithDefaults instantiates a new PiUserDomainAggregatesModelUserInfoAggregateUserInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPiUserDomainAggregatesModelUserInfoAggregateUserInfoWithDefaults() *PiUserDomainAggregatesModelUserInfoAggregateUserInfo {
	this := PiUserDomainAggregatesModelUserInfoAggregateUserInfo{}
	return &this
}

// GetRowVersion returns the RowVersion field value
func (o *PiUserDomainAggregatesModelUserInfoAggregateUserInfo) GetRowVersion() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RowVersion
}

// GetRowVersionOk returns a tuple with the RowVersion field value
// and a boolean to check if the value has been set.
func (o *PiUserDomainAggregatesModelUserInfoAggregateUserInfo) GetRowVersionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RowVersion, true
}

// SetRowVersion sets field value
func (o *PiUserDomainAggregatesModelUserInfoAggregateUserInfo) SetRowVersion(v string) {
	o.RowVersion = v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *PiUserDomainAggregatesModelUserInfoAggregateUserInfo) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PiUserDomainAggregatesModelUserInfoAggregateUserInfo) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *PiUserDomainAggregatesModelUserInfoAggregateUserInfo) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *PiUserDomainAggregatesModelUserInfoAggregateUserInfo) SetId(v string) {
	o.Id = &v
}

// GetCustomerId returns the CustomerId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiUserDomainAggregatesModelUserInfoAggregateUserInfo) GetCustomerId() string {
	if o == nil || IsNil(o.CustomerId.Get()) {
		var ret string
		return ret
	}
	return *o.CustomerId.Get()
}

// GetCustomerIdOk returns a tuple with the CustomerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiUserDomainAggregatesModelUserInfoAggregateUserInfo) GetCustomerIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CustomerId.Get(), o.CustomerId.IsSet()
}

// HasCustomerId returns a boolean if a field has been set.
func (o *PiUserDomainAggregatesModelUserInfoAggregateUserInfo) HasCustomerId() bool {
	if o != nil && o.CustomerId.IsSet() {
		return true
	}

	return false
}

// SetCustomerId gets a reference to the given NullableString and assigns it to the CustomerId field.
func (o *PiUserDomainAggregatesModelUserInfoAggregateUserInfo) SetCustomerId(v string) {
	o.CustomerId.Set(&v)
}

// SetCustomerIdNil sets the value for CustomerId to be an explicit nil
func (o *PiUserDomainAggregatesModelUserInfoAggregateUserInfo) SetCustomerIdNil() {
	o.CustomerId.Set(nil)
}

// UnsetCustomerId ensures that no value is present for CustomerId, not even an explicit nil
func (o *PiUserDomainAggregatesModelUserInfoAggregateUserInfo) UnsetCustomerId() {
	o.CustomerId.Unset()
}

// GetCustCodes returns the CustCodes field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiUserDomainAggregatesModelUserInfoAggregateUserInfo) GetCustCodes() []PiUserDomainAggregatesModelUserInfoAggregateCustCode {
	if o == nil {
		var ret []PiUserDomainAggregatesModelUserInfoAggregateCustCode
		return ret
	}
	return o.CustCodes
}

// GetCustCodesOk returns a tuple with the CustCodes field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiUserDomainAggregatesModelUserInfoAggregateUserInfo) GetCustCodesOk() ([]PiUserDomainAggregatesModelUserInfoAggregateCustCode, bool) {
	if o == nil || IsNil(o.CustCodes) {
		return nil, false
	}
	return o.CustCodes, true
}

// HasCustCodes returns a boolean if a field has been set.
func (o *PiUserDomainAggregatesModelUserInfoAggregateUserInfo) HasCustCodes() bool {
	if o != nil && !IsNil(o.CustCodes) {
		return true
	}

	return false
}

// SetCustCodes gets a reference to the given []PiUserDomainAggregatesModelUserInfoAggregateCustCode and assigns it to the CustCodes field.
func (o *PiUserDomainAggregatesModelUserInfoAggregateUserInfo) SetCustCodes(v []PiUserDomainAggregatesModelUserInfoAggregateCustCode) {
	o.CustCodes = v
}

// GetTradingAccounts returns the TradingAccounts field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiUserDomainAggregatesModelUserInfoAggregateUserInfo) GetTradingAccounts() []PiUserDomainAggregatesModelUserInfoAggregateTradingAccount {
	if o == nil {
		var ret []PiUserDomainAggregatesModelUserInfoAggregateTradingAccount
		return ret
	}
	return o.TradingAccounts
}

// GetTradingAccountsOk returns a tuple with the TradingAccounts field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiUserDomainAggregatesModelUserInfoAggregateUserInfo) GetTradingAccountsOk() ([]PiUserDomainAggregatesModelUserInfoAggregateTradingAccount, bool) {
	if o == nil || IsNil(o.TradingAccounts) {
		return nil, false
	}
	return o.TradingAccounts, true
}

// HasTradingAccounts returns a boolean if a field has been set.
func (o *PiUserDomainAggregatesModelUserInfoAggregateUserInfo) HasTradingAccounts() bool {
	if o != nil && !IsNil(o.TradingAccounts) {
		return true
	}

	return false
}

// SetTradingAccounts gets a reference to the given []PiUserDomainAggregatesModelUserInfoAggregateTradingAccount and assigns it to the TradingAccounts field.
func (o *PiUserDomainAggregatesModelUserInfoAggregateUserInfo) SetTradingAccounts(v []PiUserDomainAggregatesModelUserInfoAggregateTradingAccount) {
	o.TradingAccounts = v
}

// GetDevices returns the Devices field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiUserDomainAggregatesModelUserInfoAggregateUserInfo) GetDevices() []PiUserDomainAggregatesModelUserInfoAggregateDevice {
	if o == nil {
		var ret []PiUserDomainAggregatesModelUserInfoAggregateDevice
		return ret
	}
	return o.Devices
}

// GetDevicesOk returns a tuple with the Devices field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiUserDomainAggregatesModelUserInfoAggregateUserInfo) GetDevicesOk() ([]PiUserDomainAggregatesModelUserInfoAggregateDevice, bool) {
	if o == nil || IsNil(o.Devices) {
		return nil, false
	}
	return o.Devices, true
}

// HasDevices returns a boolean if a field has been set.
func (o *PiUserDomainAggregatesModelUserInfoAggregateUserInfo) HasDevices() bool {
	if o != nil && !IsNil(o.Devices) {
		return true
	}

	return false
}

// SetDevices gets a reference to the given []PiUserDomainAggregatesModelUserInfoAggregateDevice and assigns it to the Devices field.
func (o *PiUserDomainAggregatesModelUserInfoAggregateUserInfo) SetDevices(v []PiUserDomainAggregatesModelUserInfoAggregateDevice) {
	o.Devices = v
}

// GetNotificationPreferences returns the NotificationPreferences field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiUserDomainAggregatesModelUserInfoAggregateUserInfo) GetNotificationPreferences() []PiUserDomainAggregatesModelUserInfoAggregateNotificationPreference {
	if o == nil {
		var ret []PiUserDomainAggregatesModelUserInfoAggregateNotificationPreference
		return ret
	}
	return o.NotificationPreferences
}

// GetNotificationPreferencesOk returns a tuple with the NotificationPreferences field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiUserDomainAggregatesModelUserInfoAggregateUserInfo) GetNotificationPreferencesOk() ([]PiUserDomainAggregatesModelUserInfoAggregateNotificationPreference, bool) {
	if o == nil || IsNil(o.NotificationPreferences) {
		return nil, false
	}
	return o.NotificationPreferences, true
}

// HasNotificationPreferences returns a boolean if a field has been set.
func (o *PiUserDomainAggregatesModelUserInfoAggregateUserInfo) HasNotificationPreferences() bool {
	if o != nil && !IsNil(o.NotificationPreferences) {
		return true
	}

	return false
}

// SetNotificationPreferences gets a reference to the given []PiUserDomainAggregatesModelUserInfoAggregateNotificationPreference and assigns it to the NotificationPreferences field.
func (o *PiUserDomainAggregatesModelUserInfoAggregateUserInfo) SetNotificationPreferences(v []PiUserDomainAggregatesModelUserInfoAggregateNotificationPreference) {
	o.NotificationPreferences = v
}

// GetFirstnameTh returns the FirstnameTh field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiUserDomainAggregatesModelUserInfoAggregateUserInfo) GetFirstnameTh() string {
	if o == nil || IsNil(o.FirstnameTh.Get()) {
		var ret string
		return ret
	}
	return *o.FirstnameTh.Get()
}

// GetFirstnameThOk returns a tuple with the FirstnameTh field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiUserDomainAggregatesModelUserInfoAggregateUserInfo) GetFirstnameThOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.FirstnameTh.Get(), o.FirstnameTh.IsSet()
}

// HasFirstnameTh returns a boolean if a field has been set.
func (o *PiUserDomainAggregatesModelUserInfoAggregateUserInfo) HasFirstnameTh() bool {
	if o != nil && o.FirstnameTh.IsSet() {
		return true
	}

	return false
}

// SetFirstnameTh gets a reference to the given NullableString and assigns it to the FirstnameTh field.
func (o *PiUserDomainAggregatesModelUserInfoAggregateUserInfo) SetFirstnameTh(v string) {
	o.FirstnameTh.Set(&v)
}

// SetFirstnameThNil sets the value for FirstnameTh to be an explicit nil
func (o *PiUserDomainAggregatesModelUserInfoAggregateUserInfo) SetFirstnameThNil() {
	o.FirstnameTh.Set(nil)
}

// UnsetFirstnameTh ensures that no value is present for FirstnameTh, not even an explicit nil
func (o *PiUserDomainAggregatesModelUserInfoAggregateUserInfo) UnsetFirstnameTh() {
	o.FirstnameTh.Unset()
}

// GetLastnameTh returns the LastnameTh field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiUserDomainAggregatesModelUserInfoAggregateUserInfo) GetLastnameTh() string {
	if o == nil || IsNil(o.LastnameTh.Get()) {
		var ret string
		return ret
	}
	return *o.LastnameTh.Get()
}

// GetLastnameThOk returns a tuple with the LastnameTh field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiUserDomainAggregatesModelUserInfoAggregateUserInfo) GetLastnameThOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.LastnameTh.Get(), o.LastnameTh.IsSet()
}

// HasLastnameTh returns a boolean if a field has been set.
func (o *PiUserDomainAggregatesModelUserInfoAggregateUserInfo) HasLastnameTh() bool {
	if o != nil && o.LastnameTh.IsSet() {
		return true
	}

	return false
}

// SetLastnameTh gets a reference to the given NullableString and assigns it to the LastnameTh field.
func (o *PiUserDomainAggregatesModelUserInfoAggregateUserInfo) SetLastnameTh(v string) {
	o.LastnameTh.Set(&v)
}

// SetLastnameThNil sets the value for LastnameTh to be an explicit nil
func (o *PiUserDomainAggregatesModelUserInfoAggregateUserInfo) SetLastnameThNil() {
	o.LastnameTh.Set(nil)
}

// UnsetLastnameTh ensures that no value is present for LastnameTh, not even an explicit nil
func (o *PiUserDomainAggregatesModelUserInfoAggregateUserInfo) UnsetLastnameTh() {
	o.LastnameTh.Unset()
}

// GetFirstnameEn returns the FirstnameEn field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiUserDomainAggregatesModelUserInfoAggregateUserInfo) GetFirstnameEn() string {
	if o == nil || IsNil(o.FirstnameEn.Get()) {
		var ret string
		return ret
	}
	return *o.FirstnameEn.Get()
}

// GetFirstnameEnOk returns a tuple with the FirstnameEn field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiUserDomainAggregatesModelUserInfoAggregateUserInfo) GetFirstnameEnOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.FirstnameEn.Get(), o.FirstnameEn.IsSet()
}

// HasFirstnameEn returns a boolean if a field has been set.
func (o *PiUserDomainAggregatesModelUserInfoAggregateUserInfo) HasFirstnameEn() bool {
	if o != nil && o.FirstnameEn.IsSet() {
		return true
	}

	return false
}

// SetFirstnameEn gets a reference to the given NullableString and assigns it to the FirstnameEn field.
func (o *PiUserDomainAggregatesModelUserInfoAggregateUserInfo) SetFirstnameEn(v string) {
	o.FirstnameEn.Set(&v)
}

// SetFirstnameEnNil sets the value for FirstnameEn to be an explicit nil
func (o *PiUserDomainAggregatesModelUserInfoAggregateUserInfo) SetFirstnameEnNil() {
	o.FirstnameEn.Set(nil)
}

// UnsetFirstnameEn ensures that no value is present for FirstnameEn, not even an explicit nil
func (o *PiUserDomainAggregatesModelUserInfoAggregateUserInfo) UnsetFirstnameEn() {
	o.FirstnameEn.Unset()
}

// GetLastnameEn returns the LastnameEn field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiUserDomainAggregatesModelUserInfoAggregateUserInfo) GetLastnameEn() string {
	if o == nil || IsNil(o.LastnameEn.Get()) {
		var ret string
		return ret
	}
	return *o.LastnameEn.Get()
}

// GetLastnameEnOk returns a tuple with the LastnameEn field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiUserDomainAggregatesModelUserInfoAggregateUserInfo) GetLastnameEnOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.LastnameEn.Get(), o.LastnameEn.IsSet()
}

// HasLastnameEn returns a boolean if a field has been set.
func (o *PiUserDomainAggregatesModelUserInfoAggregateUserInfo) HasLastnameEn() bool {
	if o != nil && o.LastnameEn.IsSet() {
		return true
	}

	return false
}

// SetLastnameEn gets a reference to the given NullableString and assigns it to the LastnameEn field.
func (o *PiUserDomainAggregatesModelUserInfoAggregateUserInfo) SetLastnameEn(v string) {
	o.LastnameEn.Set(&v)
}

// SetLastnameEnNil sets the value for LastnameEn to be an explicit nil
func (o *PiUserDomainAggregatesModelUserInfoAggregateUserInfo) SetLastnameEnNil() {
	o.LastnameEn.Set(nil)
}

// UnsetLastnameEn ensures that no value is present for LastnameEn, not even an explicit nil
func (o *PiUserDomainAggregatesModelUserInfoAggregateUserInfo) UnsetLastnameEn() {
	o.LastnameEn.Unset()
}

// GetCitizenId returns the CitizenId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiUserDomainAggregatesModelUserInfoAggregateUserInfo) GetCitizenId() string {
	if o == nil || IsNil(o.CitizenId.Get()) {
		var ret string
		return ret
	}
	return *o.CitizenId.Get()
}

// GetCitizenIdOk returns a tuple with the CitizenId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiUserDomainAggregatesModelUserInfoAggregateUserInfo) GetCitizenIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CitizenId.Get(), o.CitizenId.IsSet()
}

// HasCitizenId returns a boolean if a field has been set.
func (o *PiUserDomainAggregatesModelUserInfoAggregateUserInfo) HasCitizenId() bool {
	if o != nil && o.CitizenId.IsSet() {
		return true
	}

	return false
}

// SetCitizenId gets a reference to the given NullableString and assigns it to the CitizenId field.
func (o *PiUserDomainAggregatesModelUserInfoAggregateUserInfo) SetCitizenId(v string) {
	o.CitizenId.Set(&v)
}

// SetCitizenIdNil sets the value for CitizenId to be an explicit nil
func (o *PiUserDomainAggregatesModelUserInfoAggregateUserInfo) SetCitizenIdNil() {
	o.CitizenId.Set(nil)
}

// UnsetCitizenId ensures that no value is present for CitizenId, not even an explicit nil
func (o *PiUserDomainAggregatesModelUserInfoAggregateUserInfo) UnsetCitizenId() {
	o.CitizenId.Unset()
}

// GetCitizenIdHash returns the CitizenIdHash field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiUserDomainAggregatesModelUserInfoAggregateUserInfo) GetCitizenIdHash() string {
	if o == nil || IsNil(o.CitizenIdHash.Get()) {
		var ret string
		return ret
	}
	return *o.CitizenIdHash.Get()
}

// GetCitizenIdHashOk returns a tuple with the CitizenIdHash field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiUserDomainAggregatesModelUserInfoAggregateUserInfo) GetCitizenIdHashOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CitizenIdHash.Get(), o.CitizenIdHash.IsSet()
}

// HasCitizenIdHash returns a boolean if a field has been set.
func (o *PiUserDomainAggregatesModelUserInfoAggregateUserInfo) HasCitizenIdHash() bool {
	if o != nil && o.CitizenIdHash.IsSet() {
		return true
	}

	return false
}

// SetCitizenIdHash gets a reference to the given NullableString and assigns it to the CitizenIdHash field.
func (o *PiUserDomainAggregatesModelUserInfoAggregateUserInfo) SetCitizenIdHash(v string) {
	o.CitizenIdHash.Set(&v)
}

// SetCitizenIdHashNil sets the value for CitizenIdHash to be an explicit nil
func (o *PiUserDomainAggregatesModelUserInfoAggregateUserInfo) SetCitizenIdHashNil() {
	o.CitizenIdHash.Set(nil)
}

// UnsetCitizenIdHash ensures that no value is present for CitizenIdHash, not even an explicit nil
func (o *PiUserDomainAggregatesModelUserInfoAggregateUserInfo) UnsetCitizenIdHash() {
	o.CitizenIdHash.Unset()
}

// GetPhoneNumber returns the PhoneNumber field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiUserDomainAggregatesModelUserInfoAggregateUserInfo) GetPhoneNumber() string {
	if o == nil || IsNil(o.PhoneNumber.Get()) {
		var ret string
		return ret
	}
	return *o.PhoneNumber.Get()
}

// GetPhoneNumberOk returns a tuple with the PhoneNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiUserDomainAggregatesModelUserInfoAggregateUserInfo) GetPhoneNumberOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PhoneNumber.Get(), o.PhoneNumber.IsSet()
}

// HasPhoneNumber returns a boolean if a field has been set.
func (o *PiUserDomainAggregatesModelUserInfoAggregateUserInfo) HasPhoneNumber() bool {
	if o != nil && o.PhoneNumber.IsSet() {
		return true
	}

	return false
}

// SetPhoneNumber gets a reference to the given NullableString and assigns it to the PhoneNumber field.
func (o *PiUserDomainAggregatesModelUserInfoAggregateUserInfo) SetPhoneNumber(v string) {
	o.PhoneNumber.Set(&v)
}

// SetPhoneNumberNil sets the value for PhoneNumber to be an explicit nil
func (o *PiUserDomainAggregatesModelUserInfoAggregateUserInfo) SetPhoneNumberNil() {
	o.PhoneNumber.Set(nil)
}

// UnsetPhoneNumber ensures that no value is present for PhoneNumber, not even an explicit nil
func (o *PiUserDomainAggregatesModelUserInfoAggregateUserInfo) UnsetPhoneNumber() {
	o.PhoneNumber.Unset()
}

// GetPhoneNumberHash returns the PhoneNumberHash field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiUserDomainAggregatesModelUserInfoAggregateUserInfo) GetPhoneNumberHash() string {
	if o == nil || IsNil(o.PhoneNumberHash.Get()) {
		var ret string
		return ret
	}
	return *o.PhoneNumberHash.Get()
}

// GetPhoneNumberHashOk returns a tuple with the PhoneNumberHash field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiUserDomainAggregatesModelUserInfoAggregateUserInfo) GetPhoneNumberHashOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PhoneNumberHash.Get(), o.PhoneNumberHash.IsSet()
}

// HasPhoneNumberHash returns a boolean if a field has been set.
func (o *PiUserDomainAggregatesModelUserInfoAggregateUserInfo) HasPhoneNumberHash() bool {
	if o != nil && o.PhoneNumberHash.IsSet() {
		return true
	}

	return false
}

// SetPhoneNumberHash gets a reference to the given NullableString and assigns it to the PhoneNumberHash field.
func (o *PiUserDomainAggregatesModelUserInfoAggregateUserInfo) SetPhoneNumberHash(v string) {
	o.PhoneNumberHash.Set(&v)
}

// SetPhoneNumberHashNil sets the value for PhoneNumberHash to be an explicit nil
func (o *PiUserDomainAggregatesModelUserInfoAggregateUserInfo) SetPhoneNumberHashNil() {
	o.PhoneNumberHash.Set(nil)
}

// UnsetPhoneNumberHash ensures that no value is present for PhoneNumberHash, not even an explicit nil
func (o *PiUserDomainAggregatesModelUserInfoAggregateUserInfo) UnsetPhoneNumberHash() {
	o.PhoneNumberHash.Unset()
}

// GetEmail returns the Email field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiUserDomainAggregatesModelUserInfoAggregateUserInfo) GetEmail() string {
	if o == nil || IsNil(o.Email.Get()) {
		var ret string
		return ret
	}
	return *o.Email.Get()
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiUserDomainAggregatesModelUserInfoAggregateUserInfo) GetEmailOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Email.Get(), o.Email.IsSet()
}

// HasEmail returns a boolean if a field has been set.
func (o *PiUserDomainAggregatesModelUserInfoAggregateUserInfo) HasEmail() bool {
	if o != nil && o.Email.IsSet() {
		return true
	}

	return false
}

// SetEmail gets a reference to the given NullableString and assigns it to the Email field.
func (o *PiUserDomainAggregatesModelUserInfoAggregateUserInfo) SetEmail(v string) {
	o.Email.Set(&v)
}

// SetEmailNil sets the value for Email to be an explicit nil
func (o *PiUserDomainAggregatesModelUserInfoAggregateUserInfo) SetEmailNil() {
	o.Email.Set(nil)
}

// UnsetEmail ensures that no value is present for Email, not even an explicit nil
func (o *PiUserDomainAggregatesModelUserInfoAggregateUserInfo) UnsetEmail() {
	o.Email.Unset()
}

// GetEmailHash returns the EmailHash field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiUserDomainAggregatesModelUserInfoAggregateUserInfo) GetEmailHash() string {
	if o == nil || IsNil(o.EmailHash.Get()) {
		var ret string
		return ret
	}
	return *o.EmailHash.Get()
}

// GetEmailHashOk returns a tuple with the EmailHash field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiUserDomainAggregatesModelUserInfoAggregateUserInfo) GetEmailHashOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.EmailHash.Get(), o.EmailHash.IsSet()
}

// HasEmailHash returns a boolean if a field has been set.
func (o *PiUserDomainAggregatesModelUserInfoAggregateUserInfo) HasEmailHash() bool {
	if o != nil && o.EmailHash.IsSet() {
		return true
	}

	return false
}

// SetEmailHash gets a reference to the given NullableString and assigns it to the EmailHash field.
func (o *PiUserDomainAggregatesModelUserInfoAggregateUserInfo) SetEmailHash(v string) {
	o.EmailHash.Set(&v)
}

// SetEmailHashNil sets the value for EmailHash to be an explicit nil
func (o *PiUserDomainAggregatesModelUserInfoAggregateUserInfo) SetEmailHashNil() {
	o.EmailHash.Set(nil)
}

// UnsetEmailHash ensures that no value is present for EmailHash, not even an explicit nil
func (o *PiUserDomainAggregatesModelUserInfoAggregateUserInfo) UnsetEmailHash() {
	o.EmailHash.Unset()
}

// GetGlobalAccount returns the GlobalAccount field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiUserDomainAggregatesModelUserInfoAggregateUserInfo) GetGlobalAccount() string {
	if o == nil || IsNil(o.GlobalAccount.Get()) {
		var ret string
		return ret
	}
	return *o.GlobalAccount.Get()
}

// GetGlobalAccountOk returns a tuple with the GlobalAccount field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiUserDomainAggregatesModelUserInfoAggregateUserInfo) GetGlobalAccountOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.GlobalAccount.Get(), o.GlobalAccount.IsSet()
}

// HasGlobalAccount returns a boolean if a field has been set.
func (o *PiUserDomainAggregatesModelUserInfoAggregateUserInfo) HasGlobalAccount() bool {
	if o != nil && o.GlobalAccount.IsSet() {
		return true
	}

	return false
}

// SetGlobalAccount gets a reference to the given NullableString and assigns it to the GlobalAccount field.
func (o *PiUserDomainAggregatesModelUserInfoAggregateUserInfo) SetGlobalAccount(v string) {
	o.GlobalAccount.Set(&v)
}

// SetGlobalAccountNil sets the value for GlobalAccount to be an explicit nil
func (o *PiUserDomainAggregatesModelUserInfoAggregateUserInfo) SetGlobalAccountNil() {
	o.GlobalAccount.Set(nil)
}

// UnsetGlobalAccount ensures that no value is present for GlobalAccount, not even an explicit nil
func (o *PiUserDomainAggregatesModelUserInfoAggregateUserInfo) UnsetGlobalAccount() {
	o.GlobalAccount.Unset()
}

// GetPlaceOfBirthCountry returns the PlaceOfBirthCountry field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiUserDomainAggregatesModelUserInfoAggregateUserInfo) GetPlaceOfBirthCountry() string {
	if o == nil || IsNil(o.PlaceOfBirthCountry.Get()) {
		var ret string
		return ret
	}
	return *o.PlaceOfBirthCountry.Get()
}

// GetPlaceOfBirthCountryOk returns a tuple with the PlaceOfBirthCountry field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiUserDomainAggregatesModelUserInfoAggregateUserInfo) GetPlaceOfBirthCountryOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PlaceOfBirthCountry.Get(), o.PlaceOfBirthCountry.IsSet()
}

// HasPlaceOfBirthCountry returns a boolean if a field has been set.
func (o *PiUserDomainAggregatesModelUserInfoAggregateUserInfo) HasPlaceOfBirthCountry() bool {
	if o != nil && o.PlaceOfBirthCountry.IsSet() {
		return true
	}

	return false
}

// SetPlaceOfBirthCountry gets a reference to the given NullableString and assigns it to the PlaceOfBirthCountry field.
func (o *PiUserDomainAggregatesModelUserInfoAggregateUserInfo) SetPlaceOfBirthCountry(v string) {
	o.PlaceOfBirthCountry.Set(&v)
}

// SetPlaceOfBirthCountryNil sets the value for PlaceOfBirthCountry to be an explicit nil
func (o *PiUserDomainAggregatesModelUserInfoAggregateUserInfo) SetPlaceOfBirthCountryNil() {
	o.PlaceOfBirthCountry.Set(nil)
}

// UnsetPlaceOfBirthCountry ensures that no value is present for PlaceOfBirthCountry, not even an explicit nil
func (o *PiUserDomainAggregatesModelUserInfoAggregateUserInfo) UnsetPlaceOfBirthCountry() {
	o.PlaceOfBirthCountry.Unset()
}

// GetPlaceOfBirthCity returns the PlaceOfBirthCity field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiUserDomainAggregatesModelUserInfoAggregateUserInfo) GetPlaceOfBirthCity() string {
	if o == nil || IsNil(o.PlaceOfBirthCity.Get()) {
		var ret string
		return ret
	}
	return *o.PlaceOfBirthCity.Get()
}

// GetPlaceOfBirthCityOk returns a tuple with the PlaceOfBirthCity field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiUserDomainAggregatesModelUserInfoAggregateUserInfo) GetPlaceOfBirthCityOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PlaceOfBirthCity.Get(), o.PlaceOfBirthCity.IsSet()
}

// HasPlaceOfBirthCity returns a boolean if a field has been set.
func (o *PiUserDomainAggregatesModelUserInfoAggregateUserInfo) HasPlaceOfBirthCity() bool {
	if o != nil && o.PlaceOfBirthCity.IsSet() {
		return true
	}

	return false
}

// SetPlaceOfBirthCity gets a reference to the given NullableString and assigns it to the PlaceOfBirthCity field.
func (o *PiUserDomainAggregatesModelUserInfoAggregateUserInfo) SetPlaceOfBirthCity(v string) {
	o.PlaceOfBirthCity.Set(&v)
}

// SetPlaceOfBirthCityNil sets the value for PlaceOfBirthCity to be an explicit nil
func (o *PiUserDomainAggregatesModelUserInfoAggregateUserInfo) SetPlaceOfBirthCityNil() {
	o.PlaceOfBirthCity.Set(nil)
}

// UnsetPlaceOfBirthCity ensures that no value is present for PlaceOfBirthCity, not even an explicit nil
func (o *PiUserDomainAggregatesModelUserInfoAggregateUserInfo) UnsetPlaceOfBirthCity() {
	o.PlaceOfBirthCity.Unset()
}

// GetDateOfBirth returns the DateOfBirth field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiUserDomainAggregatesModelUserInfoAggregateUserInfo) GetDateOfBirth() string {
	if o == nil || IsNil(o.DateOfBirth.Get()) {
		var ret string
		return ret
	}
	return *o.DateOfBirth.Get()
}

// GetDateOfBirthOk returns a tuple with the DateOfBirth field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiUserDomainAggregatesModelUserInfoAggregateUserInfo) GetDateOfBirthOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.DateOfBirth.Get(), o.DateOfBirth.IsSet()
}

// HasDateOfBirth returns a boolean if a field has been set.
func (o *PiUserDomainAggregatesModelUserInfoAggregateUserInfo) HasDateOfBirth() bool {
	if o != nil && o.DateOfBirth.IsSet() {
		return true
	}

	return false
}

// SetDateOfBirth gets a reference to the given NullableString and assigns it to the DateOfBirth field.
func (o *PiUserDomainAggregatesModelUserInfoAggregateUserInfo) SetDateOfBirth(v string) {
	o.DateOfBirth.Set(&v)
}

// SetDateOfBirthNil sets the value for DateOfBirth to be an explicit nil
func (o *PiUserDomainAggregatesModelUserInfoAggregateUserInfo) SetDateOfBirthNil() {
	o.DateOfBirth.Set(nil)
}

// UnsetDateOfBirth ensures that no value is present for DateOfBirth, not even an explicit nil
func (o *PiUserDomainAggregatesModelUserInfoAggregateUserInfo) UnsetDateOfBirth() {
	o.DateOfBirth.Unset()
}

// GetBankAccounts returns the BankAccounts field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiUserDomainAggregatesModelUserInfoAggregateUserInfo) GetBankAccounts() []PiUserDomainAggregatesModelBankAccountAggregateBankAccount {
	if o == nil {
		var ret []PiUserDomainAggregatesModelBankAccountAggregateBankAccount
		return ret
	}
	return o.BankAccounts
}

// GetBankAccountsOk returns a tuple with the BankAccounts field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiUserDomainAggregatesModelUserInfoAggregateUserInfo) GetBankAccountsOk() ([]PiUserDomainAggregatesModelBankAccountAggregateBankAccount, bool) {
	if o == nil || IsNil(o.BankAccounts) {
		return nil, false
	}
	return o.BankAccounts, true
}

// HasBankAccounts returns a boolean if a field has been set.
func (o *PiUserDomainAggregatesModelUserInfoAggregateUserInfo) HasBankAccounts() bool {
	if o != nil && !IsNil(o.BankAccounts) {
		return true
	}

	return false
}

// SetBankAccounts gets a reference to the given []PiUserDomainAggregatesModelBankAccountAggregateBankAccount and assigns it to the BankAccounts field.
func (o *PiUserDomainAggregatesModelUserInfoAggregateUserInfo) SetBankAccounts(v []PiUserDomainAggregatesModelBankAccountAggregateBankAccount) {
	o.BankAccounts = v
}

// GetDocuments returns the Documents field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiUserDomainAggregatesModelUserInfoAggregateUserInfo) GetDocuments() []PiUserDomainAggregatesModelDocumentAggregateDocument {
	if o == nil {
		var ret []PiUserDomainAggregatesModelDocumentAggregateDocument
		return ret
	}
	return o.Documents
}

// GetDocumentsOk returns a tuple with the Documents field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiUserDomainAggregatesModelUserInfoAggregateUserInfo) GetDocumentsOk() ([]PiUserDomainAggregatesModelDocumentAggregateDocument, bool) {
	if o == nil || IsNil(o.Documents) {
		return nil, false
	}
	return o.Documents, true
}

// HasDocuments returns a boolean if a field has been set.
func (o *PiUserDomainAggregatesModelUserInfoAggregateUserInfo) HasDocuments() bool {
	if o != nil && !IsNil(o.Documents) {
		return true
	}

	return false
}

// SetDocuments gets a reference to the given []PiUserDomainAggregatesModelDocumentAggregateDocument and assigns it to the Documents field.
func (o *PiUserDomainAggregatesModelUserInfoAggregateUserInfo) SetDocuments(v []PiUserDomainAggregatesModelDocumentAggregateDocument) {
	o.Documents = v
}

// GetExaminations returns the Examinations field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiUserDomainAggregatesModelUserInfoAggregateUserInfo) GetExaminations() []PiUserDomainAggregatesModelExamAggregateExamination {
	if o == nil {
		var ret []PiUserDomainAggregatesModelExamAggregateExamination
		return ret
	}
	return o.Examinations
}

// GetExaminationsOk returns a tuple with the Examinations field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiUserDomainAggregatesModelUserInfoAggregateUserInfo) GetExaminationsOk() ([]PiUserDomainAggregatesModelExamAggregateExamination, bool) {
	if o == nil || IsNil(o.Examinations) {
		return nil, false
	}
	return o.Examinations, true
}

// HasExaminations returns a boolean if a field has been set.
func (o *PiUserDomainAggregatesModelUserInfoAggregateUserInfo) HasExaminations() bool {
	if o != nil && !IsNil(o.Examinations) {
		return true
	}

	return false
}

// SetExaminations gets a reference to the given []PiUserDomainAggregatesModelExamAggregateExamination and assigns it to the Examinations field.
func (o *PiUserDomainAggregatesModelUserInfoAggregateUserInfo) SetExaminations(v []PiUserDomainAggregatesModelExamAggregateExamination) {
	o.Examinations = v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *PiUserDomainAggregatesModelUserInfoAggregateUserInfo) GetCreatedAt() time.Time {
	if o == nil || IsNil(o.CreatedAt) {
		var ret time.Time
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PiUserDomainAggregatesModelUserInfoAggregateUserInfo) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *PiUserDomainAggregatesModelUserInfoAggregateUserInfo) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given time.Time and assigns it to the CreatedAt field.
func (o *PiUserDomainAggregatesModelUserInfoAggregateUserInfo) SetCreatedAt(v time.Time) {
	o.CreatedAt = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiUserDomainAggregatesModelUserInfoAggregateUserInfo) GetUpdatedAt() time.Time {
	if o == nil || IsNil(o.UpdatedAt.Get()) {
		var ret time.Time
		return ret
	}
	return *o.UpdatedAt.Get()
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiUserDomainAggregatesModelUserInfoAggregateUserInfo) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.UpdatedAt.Get(), o.UpdatedAt.IsSet()
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *PiUserDomainAggregatesModelUserInfoAggregateUserInfo) HasUpdatedAt() bool {
	if o != nil && o.UpdatedAt.IsSet() {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given NullableTime and assigns it to the UpdatedAt field.
func (o *PiUserDomainAggregatesModelUserInfoAggregateUserInfo) SetUpdatedAt(v time.Time) {
	o.UpdatedAt.Set(&v)
}

// SetUpdatedAtNil sets the value for UpdatedAt to be an explicit nil
func (o *PiUserDomainAggregatesModelUserInfoAggregateUserInfo) SetUpdatedAtNil() {
	o.UpdatedAt.Set(nil)
}

// UnsetUpdatedAt ensures that no value is present for UpdatedAt, not even an explicit nil
func (o *PiUserDomainAggregatesModelUserInfoAggregateUserInfo) UnsetUpdatedAt() {
	o.UpdatedAt.Unset()
}

// GetUserAccounts returns the UserAccounts field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiUserDomainAggregatesModelUserInfoAggregateUserInfo) GetUserAccounts() []PiUserDomainAggregatesModelUserAccountAggregateUserAccount {
	if o == nil {
		var ret []PiUserDomainAggregatesModelUserAccountAggregateUserAccount
		return ret
	}
	return o.UserAccounts
}

// GetUserAccountsOk returns a tuple with the UserAccounts field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiUserDomainAggregatesModelUserInfoAggregateUserInfo) GetUserAccountsOk() ([]PiUserDomainAggregatesModelUserAccountAggregateUserAccount, bool) {
	if o == nil || IsNil(o.UserAccounts) {
		return nil, false
	}
	return o.UserAccounts, true
}

// HasUserAccounts returns a boolean if a field has been set.
func (o *PiUserDomainAggregatesModelUserInfoAggregateUserInfo) HasUserAccounts() bool {
	if o != nil && !IsNil(o.UserAccounts) {
		return true
	}

	return false
}

// SetUserAccounts gets a reference to the given []PiUserDomainAggregatesModelUserAccountAggregateUserAccount and assigns it to the UserAccounts field.
func (o *PiUserDomainAggregatesModelUserInfoAggregateUserInfo) SetUserAccounts(v []PiUserDomainAggregatesModelUserAccountAggregateUserAccount) {
	o.UserAccounts = v
}

// GetKyc returns the Kyc field value if set, zero value otherwise.
func (o *PiUserDomainAggregatesModelUserInfoAggregateUserInfo) GetKyc() PiUserDomainAggregatesModelKycAggregateKyc {
	if o == nil || IsNil(o.Kyc) {
		var ret PiUserDomainAggregatesModelKycAggregateKyc
		return ret
	}
	return *o.Kyc
}

// GetKycOk returns a tuple with the Kyc field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PiUserDomainAggregatesModelUserInfoAggregateUserInfo) GetKycOk() (*PiUserDomainAggregatesModelKycAggregateKyc, bool) {
	if o == nil || IsNil(o.Kyc) {
		return nil, false
	}
	return o.Kyc, true
}

// HasKyc returns a boolean if a field has been set.
func (o *PiUserDomainAggregatesModelUserInfoAggregateUserInfo) HasKyc() bool {
	if o != nil && !IsNil(o.Kyc) {
		return true
	}

	return false
}

// SetKyc gets a reference to the given PiUserDomainAggregatesModelKycAggregateKyc and assigns it to the Kyc field.
func (o *PiUserDomainAggregatesModelUserInfoAggregateUserInfo) SetKyc(v PiUserDomainAggregatesModelKycAggregateKyc) {
	o.Kyc = &v
}

// GetAddress returns the Address field value if set, zero value otherwise.
func (o *PiUserDomainAggregatesModelUserInfoAggregateUserInfo) GetAddress() PiUserDomainAggregatesModelAddressAggregateAddress {
	if o == nil || IsNil(o.Address) {
		var ret PiUserDomainAggregatesModelAddressAggregateAddress
		return ret
	}
	return *o.Address
}

// GetAddressOk returns a tuple with the Address field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PiUserDomainAggregatesModelUserInfoAggregateUserInfo) GetAddressOk() (*PiUserDomainAggregatesModelAddressAggregateAddress, bool) {
	if o == nil || IsNil(o.Address) {
		return nil, false
	}
	return o.Address, true
}

// HasAddress returns a boolean if a field has been set.
func (o *PiUserDomainAggregatesModelUserInfoAggregateUserInfo) HasAddress() bool {
	if o != nil && !IsNil(o.Address) {
		return true
	}

	return false
}

// SetAddress gets a reference to the given PiUserDomainAggregatesModelAddressAggregateAddress and assigns it to the Address field.
func (o *PiUserDomainAggregatesModelUserInfoAggregateUserInfo) SetAddress(v PiUserDomainAggregatesModelAddressAggregateAddress) {
	o.Address = &v
}

// GetSuitabilityTests returns the SuitabilityTests field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiUserDomainAggregatesModelUserInfoAggregateUserInfo) GetSuitabilityTests() []PiUserDomainAggregatesModelSuitabilityTestAggregateSuitabilityTest {
	if o == nil {
		var ret []PiUserDomainAggregatesModelSuitabilityTestAggregateSuitabilityTest
		return ret
	}
	return o.SuitabilityTests
}

// GetSuitabilityTestsOk returns a tuple with the SuitabilityTests field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiUserDomainAggregatesModelUserInfoAggregateUserInfo) GetSuitabilityTestsOk() ([]PiUserDomainAggregatesModelSuitabilityTestAggregateSuitabilityTest, bool) {
	if o == nil || IsNil(o.SuitabilityTests) {
		return nil, false
	}
	return o.SuitabilityTests, true
}

// HasSuitabilityTests returns a boolean if a field has been set.
func (o *PiUserDomainAggregatesModelUserInfoAggregateUserInfo) HasSuitabilityTests() bool {
	if o != nil && !IsNil(o.SuitabilityTests) {
		return true
	}

	return false
}

// SetSuitabilityTests gets a reference to the given []PiUserDomainAggregatesModelSuitabilityTestAggregateSuitabilityTest and assigns it to the SuitabilityTests field.
func (o *PiUserDomainAggregatesModelUserInfoAggregateUserInfo) SetSuitabilityTests(v []PiUserDomainAggregatesModelSuitabilityTestAggregateSuitabilityTest) {
	o.SuitabilityTests = v
}

// GetBankAccountsV2 returns the BankAccountsV2 field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiUserDomainAggregatesModelUserInfoAggregateUserInfo) GetBankAccountsV2() []PiUserDomainAggregatesModelBankAccountAggregateBankAccountV2 {
	if o == nil {
		var ret []PiUserDomainAggregatesModelBankAccountAggregateBankAccountV2
		return ret
	}
	return o.BankAccountsV2
}

// GetBankAccountsV2Ok returns a tuple with the BankAccountsV2 field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiUserDomainAggregatesModelUserInfoAggregateUserInfo) GetBankAccountsV2Ok() ([]PiUserDomainAggregatesModelBankAccountAggregateBankAccountV2, bool) {
	if o == nil || IsNil(o.BankAccountsV2) {
		return nil, false
	}
	return o.BankAccountsV2, true
}

// HasBankAccountsV2 returns a boolean if a field has been set.
func (o *PiUserDomainAggregatesModelUserInfoAggregateUserInfo) HasBankAccountsV2() bool {
	if o != nil && !IsNil(o.BankAccountsV2) {
		return true
	}

	return false
}

// SetBankAccountsV2 gets a reference to the given []PiUserDomainAggregatesModelBankAccountAggregateBankAccountV2 and assigns it to the BankAccountsV2 field.
func (o *PiUserDomainAggregatesModelUserInfoAggregateUserInfo) SetBankAccountsV2(v []PiUserDomainAggregatesModelBankAccountAggregateBankAccountV2) {
	o.BankAccountsV2 = v
}

func (o PiUserDomainAggregatesModelUserInfoAggregateUserInfo) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PiUserDomainAggregatesModelUserInfoAggregateUserInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["rowVersion"] = o.RowVersion
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if o.CustomerId.IsSet() {
		toSerialize["customerId"] = o.CustomerId.Get()
	}
	if o.CustCodes != nil {
		toSerialize["custCodes"] = o.CustCodes
	}
	if o.TradingAccounts != nil {
		toSerialize["tradingAccounts"] = o.TradingAccounts
	}
	if o.Devices != nil {
		toSerialize["devices"] = o.Devices
	}
	if o.NotificationPreferences != nil {
		toSerialize["notificationPreferences"] = o.NotificationPreferences
	}
	if o.FirstnameTh.IsSet() {
		toSerialize["firstnameTh"] = o.FirstnameTh.Get()
	}
	if o.LastnameTh.IsSet() {
		toSerialize["lastnameTh"] = o.LastnameTh.Get()
	}
	if o.FirstnameEn.IsSet() {
		toSerialize["firstnameEn"] = o.FirstnameEn.Get()
	}
	if o.LastnameEn.IsSet() {
		toSerialize["lastnameEn"] = o.LastnameEn.Get()
	}
	if o.CitizenId.IsSet() {
		toSerialize["citizenId"] = o.CitizenId.Get()
	}
	if o.CitizenIdHash.IsSet() {
		toSerialize["citizenIdHash"] = o.CitizenIdHash.Get()
	}
	if o.PhoneNumber.IsSet() {
		toSerialize["phoneNumber"] = o.PhoneNumber.Get()
	}
	if o.PhoneNumberHash.IsSet() {
		toSerialize["phoneNumberHash"] = o.PhoneNumberHash.Get()
	}
	if o.Email.IsSet() {
		toSerialize["email"] = o.Email.Get()
	}
	if o.EmailHash.IsSet() {
		toSerialize["emailHash"] = o.EmailHash.Get()
	}
	if o.GlobalAccount.IsSet() {
		toSerialize["globalAccount"] = o.GlobalAccount.Get()
	}
	if o.PlaceOfBirthCountry.IsSet() {
		toSerialize["placeOfBirthCountry"] = o.PlaceOfBirthCountry.Get()
	}
	if o.PlaceOfBirthCity.IsSet() {
		toSerialize["placeOfBirthCity"] = o.PlaceOfBirthCity.Get()
	}
	if o.DateOfBirth.IsSet() {
		toSerialize["dateOfBirth"] = o.DateOfBirth.Get()
	}
	if o.BankAccounts != nil {
		toSerialize["bankAccounts"] = o.BankAccounts
	}
	if o.Documents != nil {
		toSerialize["documents"] = o.Documents
	}
	if o.Examinations != nil {
		toSerialize["examinations"] = o.Examinations
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["createdAt"] = o.CreatedAt
	}
	if o.UpdatedAt.IsSet() {
		toSerialize["updatedAt"] = o.UpdatedAt.Get()
	}
	if o.UserAccounts != nil {
		toSerialize["userAccounts"] = o.UserAccounts
	}
	if !IsNil(o.Kyc) {
		toSerialize["kyc"] = o.Kyc
	}
	if !IsNil(o.Address) {
		toSerialize["address"] = o.Address
	}
	if o.SuitabilityTests != nil {
		toSerialize["suitabilityTests"] = o.SuitabilityTests
	}
	if o.BankAccountsV2 != nil {
		toSerialize["bankAccountsV2"] = o.BankAccountsV2
	}
	return toSerialize, nil
}

func (o *PiUserDomainAggregatesModelUserInfoAggregateUserInfo) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"rowVersion",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varPiUserDomainAggregatesModelUserInfoAggregateUserInfo := _PiUserDomainAggregatesModelUserInfoAggregateUserInfo{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varPiUserDomainAggregatesModelUserInfoAggregateUserInfo)

	if err != nil {
		return err
	}

	*o = PiUserDomainAggregatesModelUserInfoAggregateUserInfo(varPiUserDomainAggregatesModelUserInfoAggregateUserInfo)

	return err
}

type NullablePiUserDomainAggregatesModelUserInfoAggregateUserInfo struct {
	value *PiUserDomainAggregatesModelUserInfoAggregateUserInfo
	isSet bool
}

func (v NullablePiUserDomainAggregatesModelUserInfoAggregateUserInfo) Get() *PiUserDomainAggregatesModelUserInfoAggregateUserInfo {
	return v.value
}

func (v *NullablePiUserDomainAggregatesModelUserInfoAggregateUserInfo) Set(val *PiUserDomainAggregatesModelUserInfoAggregateUserInfo) {
	v.value = val
	v.isSet = true
}

func (v NullablePiUserDomainAggregatesModelUserInfoAggregateUserInfo) IsSet() bool {
	return v.isSet
}

func (v *NullablePiUserDomainAggregatesModelUserInfoAggregateUserInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePiUserDomainAggregatesModelUserInfoAggregateUserInfo(val *PiUserDomainAggregatesModelUserInfoAggregateUserInfo) *NullablePiUserDomainAggregatesModelUserInfoAggregateUserInfo {
	return &NullablePiUserDomainAggregatesModelUserInfoAggregateUserInfo{value: val, isSet: true}
}

func (v NullablePiUserDomainAggregatesModelUserInfoAggregateUserInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePiUserDomainAggregatesModelUserInfoAggregateUserInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
