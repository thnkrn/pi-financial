/*
Pi.User.API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package go_client

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the PiUserDomainAggregatesModelAddressAggregateAddress type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PiUserDomainAggregatesModelAddressAggregateAddress{}

// PiUserDomainAggregatesModelAddressAggregateAddress struct for PiUserDomainAggregatesModelAddressAggregateAddress
type PiUserDomainAggregatesModelAddressAggregateAddress struct {
	RowVersion   string         `json:"rowVersion"`
	Id           *string        `json:"id,omitempty"`
	Place        NullableString `json:"place,omitempty"`
	HomeNo       NullableString `json:"homeNo,omitempty"`
	Town         NullableString `json:"town,omitempty"`
	Building     NullableString `json:"building,omitempty"`
	Village      NullableString `json:"village,omitempty"`
	Floor        NullableString `json:"floor,omitempty"`
	Soi          NullableString `json:"soi,omitempty"`
	Road         NullableString `json:"road,omitempty"`
	SubDistrict  NullableString `json:"subDistrict,omitempty"`
	District     NullableString `json:"district,omitempty"`
	Province     NullableString `json:"province,omitempty"`
	Country      NullableString `json:"country,omitempty"`
	ZipCode      NullableString `json:"zipCode,omitempty"`
	CountryCode  NullableString `json:"countryCode,omitempty"`
	ProvinceCode NullableString `json:"provinceCode,omitempty"`
	UserId       *string        `json:"userId,omitempty"`
}

type _PiUserDomainAggregatesModelAddressAggregateAddress PiUserDomainAggregatesModelAddressAggregateAddress

// NewPiUserDomainAggregatesModelAddressAggregateAddress instantiates a new PiUserDomainAggregatesModelAddressAggregateAddress object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPiUserDomainAggregatesModelAddressAggregateAddress(rowVersion string) *PiUserDomainAggregatesModelAddressAggregateAddress {
	this := PiUserDomainAggregatesModelAddressAggregateAddress{}
	this.RowVersion = rowVersion
	return &this
}

// NewPiUserDomainAggregatesModelAddressAggregateAddressWithDefaults instantiates a new PiUserDomainAggregatesModelAddressAggregateAddress object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPiUserDomainAggregatesModelAddressAggregateAddressWithDefaults() *PiUserDomainAggregatesModelAddressAggregateAddress {
	this := PiUserDomainAggregatesModelAddressAggregateAddress{}
	return &this
}

// GetRowVersion returns the RowVersion field value
func (o *PiUserDomainAggregatesModelAddressAggregateAddress) GetRowVersion() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RowVersion
}

// GetRowVersionOk returns a tuple with the RowVersion field value
// and a boolean to check if the value has been set.
func (o *PiUserDomainAggregatesModelAddressAggregateAddress) GetRowVersionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RowVersion, true
}

// SetRowVersion sets field value
func (o *PiUserDomainAggregatesModelAddressAggregateAddress) SetRowVersion(v string) {
	o.RowVersion = v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *PiUserDomainAggregatesModelAddressAggregateAddress) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PiUserDomainAggregatesModelAddressAggregateAddress) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *PiUserDomainAggregatesModelAddressAggregateAddress) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *PiUserDomainAggregatesModelAddressAggregateAddress) SetId(v string) {
	o.Id = &v
}

// GetPlace returns the Place field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiUserDomainAggregatesModelAddressAggregateAddress) GetPlace() string {
	if o == nil || IsNil(o.Place.Get()) {
		var ret string
		return ret
	}
	return *o.Place.Get()
}

// GetPlaceOk returns a tuple with the Place field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiUserDomainAggregatesModelAddressAggregateAddress) GetPlaceOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Place.Get(), o.Place.IsSet()
}

// HasPlace returns a boolean if a field has been set.
func (o *PiUserDomainAggregatesModelAddressAggregateAddress) HasPlace() bool {
	if o != nil && o.Place.IsSet() {
		return true
	}

	return false
}

// SetPlace gets a reference to the given NullableString and assigns it to the Place field.
func (o *PiUserDomainAggregatesModelAddressAggregateAddress) SetPlace(v string) {
	o.Place.Set(&v)
}

// SetPlaceNil sets the value for Place to be an explicit nil
func (o *PiUserDomainAggregatesModelAddressAggregateAddress) SetPlaceNil() {
	o.Place.Set(nil)
}

// UnsetPlace ensures that no value is present for Place, not even an explicit nil
func (o *PiUserDomainAggregatesModelAddressAggregateAddress) UnsetPlace() {
	o.Place.Unset()
}

// GetHomeNo returns the HomeNo field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiUserDomainAggregatesModelAddressAggregateAddress) GetHomeNo() string {
	if o == nil || IsNil(o.HomeNo.Get()) {
		var ret string
		return ret
	}
	return *o.HomeNo.Get()
}

// GetHomeNoOk returns a tuple with the HomeNo field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiUserDomainAggregatesModelAddressAggregateAddress) GetHomeNoOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.HomeNo.Get(), o.HomeNo.IsSet()
}

// HasHomeNo returns a boolean if a field has been set.
func (o *PiUserDomainAggregatesModelAddressAggregateAddress) HasHomeNo() bool {
	if o != nil && o.HomeNo.IsSet() {
		return true
	}

	return false
}

// SetHomeNo gets a reference to the given NullableString and assigns it to the HomeNo field.
func (o *PiUserDomainAggregatesModelAddressAggregateAddress) SetHomeNo(v string) {
	o.HomeNo.Set(&v)
}

// SetHomeNoNil sets the value for HomeNo to be an explicit nil
func (o *PiUserDomainAggregatesModelAddressAggregateAddress) SetHomeNoNil() {
	o.HomeNo.Set(nil)
}

// UnsetHomeNo ensures that no value is present for HomeNo, not even an explicit nil
func (o *PiUserDomainAggregatesModelAddressAggregateAddress) UnsetHomeNo() {
	o.HomeNo.Unset()
}

// GetTown returns the Town field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiUserDomainAggregatesModelAddressAggregateAddress) GetTown() string {
	if o == nil || IsNil(o.Town.Get()) {
		var ret string
		return ret
	}
	return *o.Town.Get()
}

// GetTownOk returns a tuple with the Town field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiUserDomainAggregatesModelAddressAggregateAddress) GetTownOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Town.Get(), o.Town.IsSet()
}

// HasTown returns a boolean if a field has been set.
func (o *PiUserDomainAggregatesModelAddressAggregateAddress) HasTown() bool {
	if o != nil && o.Town.IsSet() {
		return true
	}

	return false
}

// SetTown gets a reference to the given NullableString and assigns it to the Town field.
func (o *PiUserDomainAggregatesModelAddressAggregateAddress) SetTown(v string) {
	o.Town.Set(&v)
}

// SetTownNil sets the value for Town to be an explicit nil
func (o *PiUserDomainAggregatesModelAddressAggregateAddress) SetTownNil() {
	o.Town.Set(nil)
}

// UnsetTown ensures that no value is present for Town, not even an explicit nil
func (o *PiUserDomainAggregatesModelAddressAggregateAddress) UnsetTown() {
	o.Town.Unset()
}

// GetBuilding returns the Building field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiUserDomainAggregatesModelAddressAggregateAddress) GetBuilding() string {
	if o == nil || IsNil(o.Building.Get()) {
		var ret string
		return ret
	}
	return *o.Building.Get()
}

// GetBuildingOk returns a tuple with the Building field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiUserDomainAggregatesModelAddressAggregateAddress) GetBuildingOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Building.Get(), o.Building.IsSet()
}

// HasBuilding returns a boolean if a field has been set.
func (o *PiUserDomainAggregatesModelAddressAggregateAddress) HasBuilding() bool {
	if o != nil && o.Building.IsSet() {
		return true
	}

	return false
}

// SetBuilding gets a reference to the given NullableString and assigns it to the Building field.
func (o *PiUserDomainAggregatesModelAddressAggregateAddress) SetBuilding(v string) {
	o.Building.Set(&v)
}

// SetBuildingNil sets the value for Building to be an explicit nil
func (o *PiUserDomainAggregatesModelAddressAggregateAddress) SetBuildingNil() {
	o.Building.Set(nil)
}

// UnsetBuilding ensures that no value is present for Building, not even an explicit nil
func (o *PiUserDomainAggregatesModelAddressAggregateAddress) UnsetBuilding() {
	o.Building.Unset()
}

// GetVillage returns the Village field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiUserDomainAggregatesModelAddressAggregateAddress) GetVillage() string {
	if o == nil || IsNil(o.Village.Get()) {
		var ret string
		return ret
	}
	return *o.Village.Get()
}

// GetVillageOk returns a tuple with the Village field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiUserDomainAggregatesModelAddressAggregateAddress) GetVillageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Village.Get(), o.Village.IsSet()
}

// HasVillage returns a boolean if a field has been set.
func (o *PiUserDomainAggregatesModelAddressAggregateAddress) HasVillage() bool {
	if o != nil && o.Village.IsSet() {
		return true
	}

	return false
}

// SetVillage gets a reference to the given NullableString and assigns it to the Village field.
func (o *PiUserDomainAggregatesModelAddressAggregateAddress) SetVillage(v string) {
	o.Village.Set(&v)
}

// SetVillageNil sets the value for Village to be an explicit nil
func (o *PiUserDomainAggregatesModelAddressAggregateAddress) SetVillageNil() {
	o.Village.Set(nil)
}

// UnsetVillage ensures that no value is present for Village, not even an explicit nil
func (o *PiUserDomainAggregatesModelAddressAggregateAddress) UnsetVillage() {
	o.Village.Unset()
}

// GetFloor returns the Floor field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiUserDomainAggregatesModelAddressAggregateAddress) GetFloor() string {
	if o == nil || IsNil(o.Floor.Get()) {
		var ret string
		return ret
	}
	return *o.Floor.Get()
}

// GetFloorOk returns a tuple with the Floor field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiUserDomainAggregatesModelAddressAggregateAddress) GetFloorOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Floor.Get(), o.Floor.IsSet()
}

// HasFloor returns a boolean if a field has been set.
func (o *PiUserDomainAggregatesModelAddressAggregateAddress) HasFloor() bool {
	if o != nil && o.Floor.IsSet() {
		return true
	}

	return false
}

// SetFloor gets a reference to the given NullableString and assigns it to the Floor field.
func (o *PiUserDomainAggregatesModelAddressAggregateAddress) SetFloor(v string) {
	o.Floor.Set(&v)
}

// SetFloorNil sets the value for Floor to be an explicit nil
func (o *PiUserDomainAggregatesModelAddressAggregateAddress) SetFloorNil() {
	o.Floor.Set(nil)
}

// UnsetFloor ensures that no value is present for Floor, not even an explicit nil
func (o *PiUserDomainAggregatesModelAddressAggregateAddress) UnsetFloor() {
	o.Floor.Unset()
}

// GetSoi returns the Soi field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiUserDomainAggregatesModelAddressAggregateAddress) GetSoi() string {
	if o == nil || IsNil(o.Soi.Get()) {
		var ret string
		return ret
	}
	return *o.Soi.Get()
}

// GetSoiOk returns a tuple with the Soi field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiUserDomainAggregatesModelAddressAggregateAddress) GetSoiOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Soi.Get(), o.Soi.IsSet()
}

// HasSoi returns a boolean if a field has been set.
func (o *PiUserDomainAggregatesModelAddressAggregateAddress) HasSoi() bool {
	if o != nil && o.Soi.IsSet() {
		return true
	}

	return false
}

// SetSoi gets a reference to the given NullableString and assigns it to the Soi field.
func (o *PiUserDomainAggregatesModelAddressAggregateAddress) SetSoi(v string) {
	o.Soi.Set(&v)
}

// SetSoiNil sets the value for Soi to be an explicit nil
func (o *PiUserDomainAggregatesModelAddressAggregateAddress) SetSoiNil() {
	o.Soi.Set(nil)
}

// UnsetSoi ensures that no value is present for Soi, not even an explicit nil
func (o *PiUserDomainAggregatesModelAddressAggregateAddress) UnsetSoi() {
	o.Soi.Unset()
}

// GetRoad returns the Road field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiUserDomainAggregatesModelAddressAggregateAddress) GetRoad() string {
	if o == nil || IsNil(o.Road.Get()) {
		var ret string
		return ret
	}
	return *o.Road.Get()
}

// GetRoadOk returns a tuple with the Road field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiUserDomainAggregatesModelAddressAggregateAddress) GetRoadOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Road.Get(), o.Road.IsSet()
}

// HasRoad returns a boolean if a field has been set.
func (o *PiUserDomainAggregatesModelAddressAggregateAddress) HasRoad() bool {
	if o != nil && o.Road.IsSet() {
		return true
	}

	return false
}

// SetRoad gets a reference to the given NullableString and assigns it to the Road field.
func (o *PiUserDomainAggregatesModelAddressAggregateAddress) SetRoad(v string) {
	o.Road.Set(&v)
}

// SetRoadNil sets the value for Road to be an explicit nil
func (o *PiUserDomainAggregatesModelAddressAggregateAddress) SetRoadNil() {
	o.Road.Set(nil)
}

// UnsetRoad ensures that no value is present for Road, not even an explicit nil
func (o *PiUserDomainAggregatesModelAddressAggregateAddress) UnsetRoad() {
	o.Road.Unset()
}

// GetSubDistrict returns the SubDistrict field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiUserDomainAggregatesModelAddressAggregateAddress) GetSubDistrict() string {
	if o == nil || IsNil(o.SubDistrict.Get()) {
		var ret string
		return ret
	}
	return *o.SubDistrict.Get()
}

// GetSubDistrictOk returns a tuple with the SubDistrict field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiUserDomainAggregatesModelAddressAggregateAddress) GetSubDistrictOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SubDistrict.Get(), o.SubDistrict.IsSet()
}

// HasSubDistrict returns a boolean if a field has been set.
func (o *PiUserDomainAggregatesModelAddressAggregateAddress) HasSubDistrict() bool {
	if o != nil && o.SubDistrict.IsSet() {
		return true
	}

	return false
}

// SetSubDistrict gets a reference to the given NullableString and assigns it to the SubDistrict field.
func (o *PiUserDomainAggregatesModelAddressAggregateAddress) SetSubDistrict(v string) {
	o.SubDistrict.Set(&v)
}

// SetSubDistrictNil sets the value for SubDistrict to be an explicit nil
func (o *PiUserDomainAggregatesModelAddressAggregateAddress) SetSubDistrictNil() {
	o.SubDistrict.Set(nil)
}

// UnsetSubDistrict ensures that no value is present for SubDistrict, not even an explicit nil
func (o *PiUserDomainAggregatesModelAddressAggregateAddress) UnsetSubDistrict() {
	o.SubDistrict.Unset()
}

// GetDistrict returns the District field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiUserDomainAggregatesModelAddressAggregateAddress) GetDistrict() string {
	if o == nil || IsNil(o.District.Get()) {
		var ret string
		return ret
	}
	return *o.District.Get()
}

// GetDistrictOk returns a tuple with the District field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiUserDomainAggregatesModelAddressAggregateAddress) GetDistrictOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.District.Get(), o.District.IsSet()
}

// HasDistrict returns a boolean if a field has been set.
func (o *PiUserDomainAggregatesModelAddressAggregateAddress) HasDistrict() bool {
	if o != nil && o.District.IsSet() {
		return true
	}

	return false
}

// SetDistrict gets a reference to the given NullableString and assigns it to the District field.
func (o *PiUserDomainAggregatesModelAddressAggregateAddress) SetDistrict(v string) {
	o.District.Set(&v)
}

// SetDistrictNil sets the value for District to be an explicit nil
func (o *PiUserDomainAggregatesModelAddressAggregateAddress) SetDistrictNil() {
	o.District.Set(nil)
}

// UnsetDistrict ensures that no value is present for District, not even an explicit nil
func (o *PiUserDomainAggregatesModelAddressAggregateAddress) UnsetDistrict() {
	o.District.Unset()
}

// GetProvince returns the Province field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiUserDomainAggregatesModelAddressAggregateAddress) GetProvince() string {
	if o == nil || IsNil(o.Province.Get()) {
		var ret string
		return ret
	}
	return *o.Province.Get()
}

// GetProvinceOk returns a tuple with the Province field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiUserDomainAggregatesModelAddressAggregateAddress) GetProvinceOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Province.Get(), o.Province.IsSet()
}

// HasProvince returns a boolean if a field has been set.
func (o *PiUserDomainAggregatesModelAddressAggregateAddress) HasProvince() bool {
	if o != nil && o.Province.IsSet() {
		return true
	}

	return false
}

// SetProvince gets a reference to the given NullableString and assigns it to the Province field.
func (o *PiUserDomainAggregatesModelAddressAggregateAddress) SetProvince(v string) {
	o.Province.Set(&v)
}

// SetProvinceNil sets the value for Province to be an explicit nil
func (o *PiUserDomainAggregatesModelAddressAggregateAddress) SetProvinceNil() {
	o.Province.Set(nil)
}

// UnsetProvince ensures that no value is present for Province, not even an explicit nil
func (o *PiUserDomainAggregatesModelAddressAggregateAddress) UnsetProvince() {
	o.Province.Unset()
}

// GetCountry returns the Country field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiUserDomainAggregatesModelAddressAggregateAddress) GetCountry() string {
	if o == nil || IsNil(o.Country.Get()) {
		var ret string
		return ret
	}
	return *o.Country.Get()
}

// GetCountryOk returns a tuple with the Country field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiUserDomainAggregatesModelAddressAggregateAddress) GetCountryOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Country.Get(), o.Country.IsSet()
}

// HasCountry returns a boolean if a field has been set.
func (o *PiUserDomainAggregatesModelAddressAggregateAddress) HasCountry() bool {
	if o != nil && o.Country.IsSet() {
		return true
	}

	return false
}

// SetCountry gets a reference to the given NullableString and assigns it to the Country field.
func (o *PiUserDomainAggregatesModelAddressAggregateAddress) SetCountry(v string) {
	o.Country.Set(&v)
}

// SetCountryNil sets the value for Country to be an explicit nil
func (o *PiUserDomainAggregatesModelAddressAggregateAddress) SetCountryNil() {
	o.Country.Set(nil)
}

// UnsetCountry ensures that no value is present for Country, not even an explicit nil
func (o *PiUserDomainAggregatesModelAddressAggregateAddress) UnsetCountry() {
	o.Country.Unset()
}

// GetZipCode returns the ZipCode field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiUserDomainAggregatesModelAddressAggregateAddress) GetZipCode() string {
	if o == nil || IsNil(o.ZipCode.Get()) {
		var ret string
		return ret
	}
	return *o.ZipCode.Get()
}

// GetZipCodeOk returns a tuple with the ZipCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiUserDomainAggregatesModelAddressAggregateAddress) GetZipCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ZipCode.Get(), o.ZipCode.IsSet()
}

// HasZipCode returns a boolean if a field has been set.
func (o *PiUserDomainAggregatesModelAddressAggregateAddress) HasZipCode() bool {
	if o != nil && o.ZipCode.IsSet() {
		return true
	}

	return false
}

// SetZipCode gets a reference to the given NullableString and assigns it to the ZipCode field.
func (o *PiUserDomainAggregatesModelAddressAggregateAddress) SetZipCode(v string) {
	o.ZipCode.Set(&v)
}

// SetZipCodeNil sets the value for ZipCode to be an explicit nil
func (o *PiUserDomainAggregatesModelAddressAggregateAddress) SetZipCodeNil() {
	o.ZipCode.Set(nil)
}

// UnsetZipCode ensures that no value is present for ZipCode, not even an explicit nil
func (o *PiUserDomainAggregatesModelAddressAggregateAddress) UnsetZipCode() {
	o.ZipCode.Unset()
}

// GetCountryCode returns the CountryCode field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiUserDomainAggregatesModelAddressAggregateAddress) GetCountryCode() string {
	if o == nil || IsNil(o.CountryCode.Get()) {
		var ret string
		return ret
	}
	return *o.CountryCode.Get()
}

// GetCountryCodeOk returns a tuple with the CountryCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiUserDomainAggregatesModelAddressAggregateAddress) GetCountryCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CountryCode.Get(), o.CountryCode.IsSet()
}

// HasCountryCode returns a boolean if a field has been set.
func (o *PiUserDomainAggregatesModelAddressAggregateAddress) HasCountryCode() bool {
	if o != nil && o.CountryCode.IsSet() {
		return true
	}

	return false
}

// SetCountryCode gets a reference to the given NullableString and assigns it to the CountryCode field.
func (o *PiUserDomainAggregatesModelAddressAggregateAddress) SetCountryCode(v string) {
	o.CountryCode.Set(&v)
}

// SetCountryCodeNil sets the value for CountryCode to be an explicit nil
func (o *PiUserDomainAggregatesModelAddressAggregateAddress) SetCountryCodeNil() {
	o.CountryCode.Set(nil)
}

// UnsetCountryCode ensures that no value is present for CountryCode, not even an explicit nil
func (o *PiUserDomainAggregatesModelAddressAggregateAddress) UnsetCountryCode() {
	o.CountryCode.Unset()
}

// GetProvinceCode returns the ProvinceCode field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiUserDomainAggregatesModelAddressAggregateAddress) GetProvinceCode() string {
	if o == nil || IsNil(o.ProvinceCode.Get()) {
		var ret string
		return ret
	}
	return *o.ProvinceCode.Get()
}

// GetProvinceCodeOk returns a tuple with the ProvinceCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiUserDomainAggregatesModelAddressAggregateAddress) GetProvinceCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ProvinceCode.Get(), o.ProvinceCode.IsSet()
}

// HasProvinceCode returns a boolean if a field has been set.
func (o *PiUserDomainAggregatesModelAddressAggregateAddress) HasProvinceCode() bool {
	if o != nil && o.ProvinceCode.IsSet() {
		return true
	}

	return false
}

// SetProvinceCode gets a reference to the given NullableString and assigns it to the ProvinceCode field.
func (o *PiUserDomainAggregatesModelAddressAggregateAddress) SetProvinceCode(v string) {
	o.ProvinceCode.Set(&v)
}

// SetProvinceCodeNil sets the value for ProvinceCode to be an explicit nil
func (o *PiUserDomainAggregatesModelAddressAggregateAddress) SetProvinceCodeNil() {
	o.ProvinceCode.Set(nil)
}

// UnsetProvinceCode ensures that no value is present for ProvinceCode, not even an explicit nil
func (o *PiUserDomainAggregatesModelAddressAggregateAddress) UnsetProvinceCode() {
	o.ProvinceCode.Unset()
}

// GetUserId returns the UserId field value if set, zero value otherwise.
func (o *PiUserDomainAggregatesModelAddressAggregateAddress) GetUserId() string {
	if o == nil || IsNil(o.UserId) {
		var ret string
		return ret
	}
	return *o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PiUserDomainAggregatesModelAddressAggregateAddress) GetUserIdOk() (*string, bool) {
	if o == nil || IsNil(o.UserId) {
		return nil, false
	}
	return o.UserId, true
}

// HasUserId returns a boolean if a field has been set.
func (o *PiUserDomainAggregatesModelAddressAggregateAddress) HasUserId() bool {
	if o != nil && !IsNil(o.UserId) {
		return true
	}

	return false
}

// SetUserId gets a reference to the given string and assigns it to the UserId field.
func (o *PiUserDomainAggregatesModelAddressAggregateAddress) SetUserId(v string) {
	o.UserId = &v
}

func (o PiUserDomainAggregatesModelAddressAggregateAddress) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PiUserDomainAggregatesModelAddressAggregateAddress) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["rowVersion"] = o.RowVersion
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if o.Place.IsSet() {
		toSerialize["place"] = o.Place.Get()
	}
	if o.HomeNo.IsSet() {
		toSerialize["homeNo"] = o.HomeNo.Get()
	}
	if o.Town.IsSet() {
		toSerialize["town"] = o.Town.Get()
	}
	if o.Building.IsSet() {
		toSerialize["building"] = o.Building.Get()
	}
	if o.Village.IsSet() {
		toSerialize["village"] = o.Village.Get()
	}
	if o.Floor.IsSet() {
		toSerialize["floor"] = o.Floor.Get()
	}
	if o.Soi.IsSet() {
		toSerialize["soi"] = o.Soi.Get()
	}
	if o.Road.IsSet() {
		toSerialize["road"] = o.Road.Get()
	}
	if o.SubDistrict.IsSet() {
		toSerialize["subDistrict"] = o.SubDistrict.Get()
	}
	if o.District.IsSet() {
		toSerialize["district"] = o.District.Get()
	}
	if o.Province.IsSet() {
		toSerialize["province"] = o.Province.Get()
	}
	if o.Country.IsSet() {
		toSerialize["country"] = o.Country.Get()
	}
	if o.ZipCode.IsSet() {
		toSerialize["zipCode"] = o.ZipCode.Get()
	}
	if o.CountryCode.IsSet() {
		toSerialize["countryCode"] = o.CountryCode.Get()
	}
	if o.ProvinceCode.IsSet() {
		toSerialize["provinceCode"] = o.ProvinceCode.Get()
	}
	if !IsNil(o.UserId) {
		toSerialize["userId"] = o.UserId
	}
	return toSerialize, nil
}

func (o *PiUserDomainAggregatesModelAddressAggregateAddress) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"rowVersion",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varPiUserDomainAggregatesModelAddressAggregateAddress := _PiUserDomainAggregatesModelAddressAggregateAddress{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varPiUserDomainAggregatesModelAddressAggregateAddress)

	if err != nil {
		return err
	}

	*o = PiUserDomainAggregatesModelAddressAggregateAddress(varPiUserDomainAggregatesModelAddressAggregateAddress)

	return err
}

type NullablePiUserDomainAggregatesModelAddressAggregateAddress struct {
	value *PiUserDomainAggregatesModelAddressAggregateAddress
	isSet bool
}

func (v NullablePiUserDomainAggregatesModelAddressAggregateAddress) Get() *PiUserDomainAggregatesModelAddressAggregateAddress {
	return v.value
}

func (v *NullablePiUserDomainAggregatesModelAddressAggregateAddress) Set(val *PiUserDomainAggregatesModelAddressAggregateAddress) {
	v.value = val
	v.isSet = true
}

func (v NullablePiUserDomainAggregatesModelAddressAggregateAddress) IsSet() bool {
	return v.isSet
}

func (v *NullablePiUserDomainAggregatesModelAddressAggregateAddress) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePiUserDomainAggregatesModelAddressAggregateAddress(val *PiUserDomainAggregatesModelAddressAggregateAddress) *NullablePiUserDomainAggregatesModelAddressAggregateAddress {
	return &NullablePiUserDomainAggregatesModelAddressAggregateAddress{value: val, isSet: true}
}

func (v NullablePiUserDomainAggregatesModelAddressAggregateAddress) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePiUserDomainAggregatesModelAddressAggregateAddress) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
