/*
Pi.User.API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package go_client

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the PiCommonDomainAggregatesModelProductAggregateProduct type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PiCommonDomainAggregatesModelProductAggregateProduct{}

// PiCommonDomainAggregatesModelProductAggregateProduct struct for PiCommonDomainAggregatesModelProductAggregateProduct
type PiCommonDomainAggregatesModelProductAggregateProduct struct {
	RowVersion       string         `json:"rowVersion"`
	Id               *string        `json:"id,omitempty"`
	Name             *string        `json:"name,omitempty"`
	ExchangeMarketId NullableString `json:"exchangeMarketId,omitempty"`
	AccountTypeCode  NullableString `json:"accountTypeCode,omitempty"`
	AccountType      NullableString `json:"accountType,omitempty"`
	Suffix           NullableString `json:"suffix,omitempty"`
	TransactionType  NullableString `json:"transactionType,omitempty"`
}

type _PiCommonDomainAggregatesModelProductAggregateProduct PiCommonDomainAggregatesModelProductAggregateProduct

// NewPiCommonDomainAggregatesModelProductAggregateProduct instantiates a new PiCommonDomainAggregatesModelProductAggregateProduct object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPiCommonDomainAggregatesModelProductAggregateProduct(rowVersion string) *PiCommonDomainAggregatesModelProductAggregateProduct {
	this := PiCommonDomainAggregatesModelProductAggregateProduct{}
	this.RowVersion = rowVersion
	return &this
}

// NewPiCommonDomainAggregatesModelProductAggregateProductWithDefaults instantiates a new PiCommonDomainAggregatesModelProductAggregateProduct object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPiCommonDomainAggregatesModelProductAggregateProductWithDefaults() *PiCommonDomainAggregatesModelProductAggregateProduct {
	this := PiCommonDomainAggregatesModelProductAggregateProduct{}
	return &this
}

// GetRowVersion returns the RowVersion field value
func (o *PiCommonDomainAggregatesModelProductAggregateProduct) GetRowVersion() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RowVersion
}

// GetRowVersionOk returns a tuple with the RowVersion field value
// and a boolean to check if the value has been set.
func (o *PiCommonDomainAggregatesModelProductAggregateProduct) GetRowVersionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RowVersion, true
}

// SetRowVersion sets field value
func (o *PiCommonDomainAggregatesModelProductAggregateProduct) SetRowVersion(v string) {
	o.RowVersion = v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *PiCommonDomainAggregatesModelProductAggregateProduct) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PiCommonDomainAggregatesModelProductAggregateProduct) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *PiCommonDomainAggregatesModelProductAggregateProduct) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *PiCommonDomainAggregatesModelProductAggregateProduct) SetId(v string) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *PiCommonDomainAggregatesModelProductAggregateProduct) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PiCommonDomainAggregatesModelProductAggregateProduct) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *PiCommonDomainAggregatesModelProductAggregateProduct) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *PiCommonDomainAggregatesModelProductAggregateProduct) SetName(v string) {
	o.Name = &v
}

// GetExchangeMarketId returns the ExchangeMarketId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiCommonDomainAggregatesModelProductAggregateProduct) GetExchangeMarketId() string {
	if o == nil || IsNil(o.ExchangeMarketId.Get()) {
		var ret string
		return ret
	}
	return *o.ExchangeMarketId.Get()
}

// GetExchangeMarketIdOk returns a tuple with the ExchangeMarketId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiCommonDomainAggregatesModelProductAggregateProduct) GetExchangeMarketIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ExchangeMarketId.Get(), o.ExchangeMarketId.IsSet()
}

// HasExchangeMarketId returns a boolean if a field has been set.
func (o *PiCommonDomainAggregatesModelProductAggregateProduct) HasExchangeMarketId() bool {
	if o != nil && o.ExchangeMarketId.IsSet() {
		return true
	}

	return false
}

// SetExchangeMarketId gets a reference to the given NullableString and assigns it to the ExchangeMarketId field.
func (o *PiCommonDomainAggregatesModelProductAggregateProduct) SetExchangeMarketId(v string) {
	o.ExchangeMarketId.Set(&v)
}

// SetExchangeMarketIdNil sets the value for ExchangeMarketId to be an explicit nil
func (o *PiCommonDomainAggregatesModelProductAggregateProduct) SetExchangeMarketIdNil() {
	o.ExchangeMarketId.Set(nil)
}

// UnsetExchangeMarketId ensures that no value is present for ExchangeMarketId, not even an explicit nil
func (o *PiCommonDomainAggregatesModelProductAggregateProduct) UnsetExchangeMarketId() {
	o.ExchangeMarketId.Unset()
}

// GetAccountTypeCode returns the AccountTypeCode field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiCommonDomainAggregatesModelProductAggregateProduct) GetAccountTypeCode() string {
	if o == nil || IsNil(o.AccountTypeCode.Get()) {
		var ret string
		return ret
	}
	return *o.AccountTypeCode.Get()
}

// GetAccountTypeCodeOk returns a tuple with the AccountTypeCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiCommonDomainAggregatesModelProductAggregateProduct) GetAccountTypeCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AccountTypeCode.Get(), o.AccountTypeCode.IsSet()
}

// HasAccountTypeCode returns a boolean if a field has been set.
func (o *PiCommonDomainAggregatesModelProductAggregateProduct) HasAccountTypeCode() bool {
	if o != nil && o.AccountTypeCode.IsSet() {
		return true
	}

	return false
}

// SetAccountTypeCode gets a reference to the given NullableString and assigns it to the AccountTypeCode field.
func (o *PiCommonDomainAggregatesModelProductAggregateProduct) SetAccountTypeCode(v string) {
	o.AccountTypeCode.Set(&v)
}

// SetAccountTypeCodeNil sets the value for AccountTypeCode to be an explicit nil
func (o *PiCommonDomainAggregatesModelProductAggregateProduct) SetAccountTypeCodeNil() {
	o.AccountTypeCode.Set(nil)
}

// UnsetAccountTypeCode ensures that no value is present for AccountTypeCode, not even an explicit nil
func (o *PiCommonDomainAggregatesModelProductAggregateProduct) UnsetAccountTypeCode() {
	o.AccountTypeCode.Unset()
}

// GetAccountType returns the AccountType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiCommonDomainAggregatesModelProductAggregateProduct) GetAccountType() string {
	if o == nil || IsNil(o.AccountType.Get()) {
		var ret string
		return ret
	}
	return *o.AccountType.Get()
}

// GetAccountTypeOk returns a tuple with the AccountType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiCommonDomainAggregatesModelProductAggregateProduct) GetAccountTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AccountType.Get(), o.AccountType.IsSet()
}

// HasAccountType returns a boolean if a field has been set.
func (o *PiCommonDomainAggregatesModelProductAggregateProduct) HasAccountType() bool {
	if o != nil && o.AccountType.IsSet() {
		return true
	}

	return false
}

// SetAccountType gets a reference to the given NullableString and assigns it to the AccountType field.
func (o *PiCommonDomainAggregatesModelProductAggregateProduct) SetAccountType(v string) {
	o.AccountType.Set(&v)
}

// SetAccountTypeNil sets the value for AccountType to be an explicit nil
func (o *PiCommonDomainAggregatesModelProductAggregateProduct) SetAccountTypeNil() {
	o.AccountType.Set(nil)
}

// UnsetAccountType ensures that no value is present for AccountType, not even an explicit nil
func (o *PiCommonDomainAggregatesModelProductAggregateProduct) UnsetAccountType() {
	o.AccountType.Unset()
}

// GetSuffix returns the Suffix field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiCommonDomainAggregatesModelProductAggregateProduct) GetSuffix() string {
	if o == nil || IsNil(o.Suffix.Get()) {
		var ret string
		return ret
	}
	return *o.Suffix.Get()
}

// GetSuffixOk returns a tuple with the Suffix field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiCommonDomainAggregatesModelProductAggregateProduct) GetSuffixOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Suffix.Get(), o.Suffix.IsSet()
}

// HasSuffix returns a boolean if a field has been set.
func (o *PiCommonDomainAggregatesModelProductAggregateProduct) HasSuffix() bool {
	if o != nil && o.Suffix.IsSet() {
		return true
	}

	return false
}

// SetSuffix gets a reference to the given NullableString and assigns it to the Suffix field.
func (o *PiCommonDomainAggregatesModelProductAggregateProduct) SetSuffix(v string) {
	o.Suffix.Set(&v)
}

// SetSuffixNil sets the value for Suffix to be an explicit nil
func (o *PiCommonDomainAggregatesModelProductAggregateProduct) SetSuffixNil() {
	o.Suffix.Set(nil)
}

// UnsetSuffix ensures that no value is present for Suffix, not even an explicit nil
func (o *PiCommonDomainAggregatesModelProductAggregateProduct) UnsetSuffix() {
	o.Suffix.Unset()
}

// GetTransactionType returns the TransactionType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiCommonDomainAggregatesModelProductAggregateProduct) GetTransactionType() string {
	if o == nil || IsNil(o.TransactionType.Get()) {
		var ret string
		return ret
	}
	return *o.TransactionType.Get()
}

// GetTransactionTypeOk returns a tuple with the TransactionType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiCommonDomainAggregatesModelProductAggregateProduct) GetTransactionTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TransactionType.Get(), o.TransactionType.IsSet()
}

// HasTransactionType returns a boolean if a field has been set.
func (o *PiCommonDomainAggregatesModelProductAggregateProduct) HasTransactionType() bool {
	if o != nil && o.TransactionType.IsSet() {
		return true
	}

	return false
}

// SetTransactionType gets a reference to the given NullableString and assigns it to the TransactionType field.
func (o *PiCommonDomainAggregatesModelProductAggregateProduct) SetTransactionType(v string) {
	o.TransactionType.Set(&v)
}

// SetTransactionTypeNil sets the value for TransactionType to be an explicit nil
func (o *PiCommonDomainAggregatesModelProductAggregateProduct) SetTransactionTypeNil() {
	o.TransactionType.Set(nil)
}

// UnsetTransactionType ensures that no value is present for TransactionType, not even an explicit nil
func (o *PiCommonDomainAggregatesModelProductAggregateProduct) UnsetTransactionType() {
	o.TransactionType.Unset()
}

func (o PiCommonDomainAggregatesModelProductAggregateProduct) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PiCommonDomainAggregatesModelProductAggregateProduct) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["rowVersion"] = o.RowVersion
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if o.ExchangeMarketId.IsSet() {
		toSerialize["exchangeMarketId"] = o.ExchangeMarketId.Get()
	}
	if o.AccountTypeCode.IsSet() {
		toSerialize["accountTypeCode"] = o.AccountTypeCode.Get()
	}
	if o.AccountType.IsSet() {
		toSerialize["accountType"] = o.AccountType.Get()
	}
	if o.Suffix.IsSet() {
		toSerialize["suffix"] = o.Suffix.Get()
	}
	if o.TransactionType.IsSet() {
		toSerialize["transactionType"] = o.TransactionType.Get()
	}
	return toSerialize, nil
}

func (o *PiCommonDomainAggregatesModelProductAggregateProduct) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"rowVersion",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varPiCommonDomainAggregatesModelProductAggregateProduct := _PiCommonDomainAggregatesModelProductAggregateProduct{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varPiCommonDomainAggregatesModelProductAggregateProduct)

	if err != nil {
		return err
	}

	*o = PiCommonDomainAggregatesModelProductAggregateProduct(varPiCommonDomainAggregatesModelProductAggregateProduct)

	return err
}

type NullablePiCommonDomainAggregatesModelProductAggregateProduct struct {
	value *PiCommonDomainAggregatesModelProductAggregateProduct
	isSet bool
}

func (v NullablePiCommonDomainAggregatesModelProductAggregateProduct) Get() *PiCommonDomainAggregatesModelProductAggregateProduct {
	return v.value
}

func (v *NullablePiCommonDomainAggregatesModelProductAggregateProduct) Set(val *PiCommonDomainAggregatesModelProductAggregateProduct) {
	v.value = val
	v.isSet = true
}

func (v NullablePiCommonDomainAggregatesModelProductAggregateProduct) IsSet() bool {
	return v.isSet
}

func (v *NullablePiCommonDomainAggregatesModelProductAggregateProduct) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePiCommonDomainAggregatesModelProductAggregateProduct(val *PiCommonDomainAggregatesModelProductAggregateProduct) *NullablePiCommonDomainAggregatesModelProductAggregateProduct {
	return &NullablePiCommonDomainAggregatesModelProductAggregateProduct{value: val, isSet: true}
}

func (v NullablePiCommonDomainAggregatesModelProductAggregateProduct) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePiCommonDomainAggregatesModelProductAggregateProduct) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
