/*
Pi.User.API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package go_client

import (
	"encoding/json"
)

// checks if the PiUserApplicationModelsUser type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PiUserApplicationModelsUser{}

// PiUserApplicationModelsUser struct for PiUserApplicationModelsUser
type PiUserApplicationModelsUser struct {
	Id                  *string                                                      `json:"id,omitempty"`
	Devices             []PiUserApplicationModelsDevice                              `json:"devices,omitempty"`
	CustomerCodes       []PiUserApplicationModelsCustomerCode                        `json:"customerCodes,omitempty"`
	TradingAccounts     []PiUserDomainAggregatesModelUserInfoAggregateTradingAccount `json:"tradingAccounts,omitempty"`
	FirstnameTh         NullableString                                               `json:"firstnameTh,omitempty"`
	LastnameTh          NullableString                                               `json:"lastnameTh,omitempty"`
	FirstnameEn         NullableString                                               `json:"firstnameEn,omitempty"`
	LastnameEn          NullableString                                               `json:"lastnameEn,omitempty"`
	PhoneNumber         NullableString                                               `json:"phoneNumber,omitempty"`
	GlobalAccount       NullableString                                               `json:"globalAccount,omitempty"`
	Email               NullableString                                               `json:"email,omitempty"`
	CustomerId          NullableString                                               `json:"customerId,omitempty"`
	PlaceOfBirthCountry NullableString                                               `json:"placeOfBirthCountry,omitempty"`
	PlaceOfBirthCity    NullableString                                               `json:"placeOfBirthCity,omitempty"`
	CitizenId           NullableString                                               `json:"citizenId,omitempty"`
	DateOfBirth         NullableString                                               `json:"dateOfBirth,omitempty"`
}

// NewPiUserApplicationModelsUser instantiates a new PiUserApplicationModelsUser object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPiUserApplicationModelsUser() *PiUserApplicationModelsUser {
	this := PiUserApplicationModelsUser{}
	return &this
}

// NewPiUserApplicationModelsUserWithDefaults instantiates a new PiUserApplicationModelsUser object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPiUserApplicationModelsUserWithDefaults() *PiUserApplicationModelsUser {
	this := PiUserApplicationModelsUser{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *PiUserApplicationModelsUser) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PiUserApplicationModelsUser) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *PiUserApplicationModelsUser) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *PiUserApplicationModelsUser) SetId(v string) {
	o.Id = &v
}

// GetDevices returns the Devices field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiUserApplicationModelsUser) GetDevices() []PiUserApplicationModelsDevice {
	if o == nil {
		var ret []PiUserApplicationModelsDevice
		return ret
	}
	return o.Devices
}

// GetDevicesOk returns a tuple with the Devices field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiUserApplicationModelsUser) GetDevicesOk() ([]PiUserApplicationModelsDevice, bool) {
	if o == nil || IsNil(o.Devices) {
		return nil, false
	}
	return o.Devices, true
}

// HasDevices returns a boolean if a field has been set.
func (o *PiUserApplicationModelsUser) HasDevices() bool {
	if o != nil && !IsNil(o.Devices) {
		return true
	}

	return false
}

// SetDevices gets a reference to the given []PiUserApplicationModelsDevice and assigns it to the Devices field.
func (o *PiUserApplicationModelsUser) SetDevices(v []PiUserApplicationModelsDevice) {
	o.Devices = v
}

// GetCustomerCodes returns the CustomerCodes field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiUserApplicationModelsUser) GetCustomerCodes() []PiUserApplicationModelsCustomerCode {
	if o == nil {
		var ret []PiUserApplicationModelsCustomerCode
		return ret
	}
	return o.CustomerCodes
}

// GetCustomerCodesOk returns a tuple with the CustomerCodes field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiUserApplicationModelsUser) GetCustomerCodesOk() ([]PiUserApplicationModelsCustomerCode, bool) {
	if o == nil || IsNil(o.CustomerCodes) {
		return nil, false
	}
	return o.CustomerCodes, true
}

// HasCustomerCodes returns a boolean if a field has been set.
func (o *PiUserApplicationModelsUser) HasCustomerCodes() bool {
	if o != nil && !IsNil(o.CustomerCodes) {
		return true
	}

	return false
}

// SetCustomerCodes gets a reference to the given []PiUserApplicationModelsCustomerCode and assigns it to the CustomerCodes field.
func (o *PiUserApplicationModelsUser) SetCustomerCodes(v []PiUserApplicationModelsCustomerCode) {
	o.CustomerCodes = v
}

// GetTradingAccounts returns the TradingAccounts field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiUserApplicationModelsUser) GetTradingAccounts() []PiUserDomainAggregatesModelUserInfoAggregateTradingAccount {
	if o == nil {
		var ret []PiUserDomainAggregatesModelUserInfoAggregateTradingAccount
		return ret
	}
	return o.TradingAccounts
}

// GetTradingAccountsOk returns a tuple with the TradingAccounts field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiUserApplicationModelsUser) GetTradingAccountsOk() ([]PiUserDomainAggregatesModelUserInfoAggregateTradingAccount, bool) {
	if o == nil || IsNil(o.TradingAccounts) {
		return nil, false
	}
	return o.TradingAccounts, true
}

// HasTradingAccounts returns a boolean if a field has been set.
func (o *PiUserApplicationModelsUser) HasTradingAccounts() bool {
	if o != nil && !IsNil(o.TradingAccounts) {
		return true
	}

	return false
}

// SetTradingAccounts gets a reference to the given []PiUserDomainAggregatesModelUserInfoAggregateTradingAccount and assigns it to the TradingAccounts field.
func (o *PiUserApplicationModelsUser) SetTradingAccounts(v []PiUserDomainAggregatesModelUserInfoAggregateTradingAccount) {
	o.TradingAccounts = v
}

// GetFirstnameTh returns the FirstnameTh field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiUserApplicationModelsUser) GetFirstnameTh() string {
	if o == nil || IsNil(o.FirstnameTh.Get()) {
		var ret string
		return ret
	}
	return *o.FirstnameTh.Get()
}

// GetFirstnameThOk returns a tuple with the FirstnameTh field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiUserApplicationModelsUser) GetFirstnameThOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.FirstnameTh.Get(), o.FirstnameTh.IsSet()
}

// HasFirstnameTh returns a boolean if a field has been set.
func (o *PiUserApplicationModelsUser) HasFirstnameTh() bool {
	if o != nil && o.FirstnameTh.IsSet() {
		return true
	}

	return false
}

// SetFirstnameTh gets a reference to the given NullableString and assigns it to the FirstnameTh field.
func (o *PiUserApplicationModelsUser) SetFirstnameTh(v string) {
	o.FirstnameTh.Set(&v)
}

// SetFirstnameThNil sets the value for FirstnameTh to be an explicit nil
func (o *PiUserApplicationModelsUser) SetFirstnameThNil() {
	o.FirstnameTh.Set(nil)
}

// UnsetFirstnameTh ensures that no value is present for FirstnameTh, not even an explicit nil
func (o *PiUserApplicationModelsUser) UnsetFirstnameTh() {
	o.FirstnameTh.Unset()
}

// GetLastnameTh returns the LastnameTh field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiUserApplicationModelsUser) GetLastnameTh() string {
	if o == nil || IsNil(o.LastnameTh.Get()) {
		var ret string
		return ret
	}
	return *o.LastnameTh.Get()
}

// GetLastnameThOk returns a tuple with the LastnameTh field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiUserApplicationModelsUser) GetLastnameThOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.LastnameTh.Get(), o.LastnameTh.IsSet()
}

// HasLastnameTh returns a boolean if a field has been set.
func (o *PiUserApplicationModelsUser) HasLastnameTh() bool {
	if o != nil && o.LastnameTh.IsSet() {
		return true
	}

	return false
}

// SetLastnameTh gets a reference to the given NullableString and assigns it to the LastnameTh field.
func (o *PiUserApplicationModelsUser) SetLastnameTh(v string) {
	o.LastnameTh.Set(&v)
}

// SetLastnameThNil sets the value for LastnameTh to be an explicit nil
func (o *PiUserApplicationModelsUser) SetLastnameThNil() {
	o.LastnameTh.Set(nil)
}

// UnsetLastnameTh ensures that no value is present for LastnameTh, not even an explicit nil
func (o *PiUserApplicationModelsUser) UnsetLastnameTh() {
	o.LastnameTh.Unset()
}

// GetFirstnameEn returns the FirstnameEn field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiUserApplicationModelsUser) GetFirstnameEn() string {
	if o == nil || IsNil(o.FirstnameEn.Get()) {
		var ret string
		return ret
	}
	return *o.FirstnameEn.Get()
}

// GetFirstnameEnOk returns a tuple with the FirstnameEn field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiUserApplicationModelsUser) GetFirstnameEnOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.FirstnameEn.Get(), o.FirstnameEn.IsSet()
}

// HasFirstnameEn returns a boolean if a field has been set.
func (o *PiUserApplicationModelsUser) HasFirstnameEn() bool {
	if o != nil && o.FirstnameEn.IsSet() {
		return true
	}

	return false
}

// SetFirstnameEn gets a reference to the given NullableString and assigns it to the FirstnameEn field.
func (o *PiUserApplicationModelsUser) SetFirstnameEn(v string) {
	o.FirstnameEn.Set(&v)
}

// SetFirstnameEnNil sets the value for FirstnameEn to be an explicit nil
func (o *PiUserApplicationModelsUser) SetFirstnameEnNil() {
	o.FirstnameEn.Set(nil)
}

// UnsetFirstnameEn ensures that no value is present for FirstnameEn, not even an explicit nil
func (o *PiUserApplicationModelsUser) UnsetFirstnameEn() {
	o.FirstnameEn.Unset()
}

// GetLastnameEn returns the LastnameEn field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiUserApplicationModelsUser) GetLastnameEn() string {
	if o == nil || IsNil(o.LastnameEn.Get()) {
		var ret string
		return ret
	}
	return *o.LastnameEn.Get()
}

// GetLastnameEnOk returns a tuple with the LastnameEn field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiUserApplicationModelsUser) GetLastnameEnOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.LastnameEn.Get(), o.LastnameEn.IsSet()
}

// HasLastnameEn returns a boolean if a field has been set.
func (o *PiUserApplicationModelsUser) HasLastnameEn() bool {
	if o != nil && o.LastnameEn.IsSet() {
		return true
	}

	return false
}

// SetLastnameEn gets a reference to the given NullableString and assigns it to the LastnameEn field.
func (o *PiUserApplicationModelsUser) SetLastnameEn(v string) {
	o.LastnameEn.Set(&v)
}

// SetLastnameEnNil sets the value for LastnameEn to be an explicit nil
func (o *PiUserApplicationModelsUser) SetLastnameEnNil() {
	o.LastnameEn.Set(nil)
}

// UnsetLastnameEn ensures that no value is present for LastnameEn, not even an explicit nil
func (o *PiUserApplicationModelsUser) UnsetLastnameEn() {
	o.LastnameEn.Unset()
}

// GetPhoneNumber returns the PhoneNumber field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiUserApplicationModelsUser) GetPhoneNumber() string {
	if o == nil || IsNil(o.PhoneNumber.Get()) {
		var ret string
		return ret
	}
	return *o.PhoneNumber.Get()
}

// GetPhoneNumberOk returns a tuple with the PhoneNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiUserApplicationModelsUser) GetPhoneNumberOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PhoneNumber.Get(), o.PhoneNumber.IsSet()
}

// HasPhoneNumber returns a boolean if a field has been set.
func (o *PiUserApplicationModelsUser) HasPhoneNumber() bool {
	if o != nil && o.PhoneNumber.IsSet() {
		return true
	}

	return false
}

// SetPhoneNumber gets a reference to the given NullableString and assigns it to the PhoneNumber field.
func (o *PiUserApplicationModelsUser) SetPhoneNumber(v string) {
	o.PhoneNumber.Set(&v)
}

// SetPhoneNumberNil sets the value for PhoneNumber to be an explicit nil
func (o *PiUserApplicationModelsUser) SetPhoneNumberNil() {
	o.PhoneNumber.Set(nil)
}

// UnsetPhoneNumber ensures that no value is present for PhoneNumber, not even an explicit nil
func (o *PiUserApplicationModelsUser) UnsetPhoneNumber() {
	o.PhoneNumber.Unset()
}

// GetGlobalAccount returns the GlobalAccount field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiUserApplicationModelsUser) GetGlobalAccount() string {
	if o == nil || IsNil(o.GlobalAccount.Get()) {
		var ret string
		return ret
	}
	return *o.GlobalAccount.Get()
}

// GetGlobalAccountOk returns a tuple with the GlobalAccount field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiUserApplicationModelsUser) GetGlobalAccountOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.GlobalAccount.Get(), o.GlobalAccount.IsSet()
}

// HasGlobalAccount returns a boolean if a field has been set.
func (o *PiUserApplicationModelsUser) HasGlobalAccount() bool {
	if o != nil && o.GlobalAccount.IsSet() {
		return true
	}

	return false
}

// SetGlobalAccount gets a reference to the given NullableString and assigns it to the GlobalAccount field.
func (o *PiUserApplicationModelsUser) SetGlobalAccount(v string) {
	o.GlobalAccount.Set(&v)
}

// SetGlobalAccountNil sets the value for GlobalAccount to be an explicit nil
func (o *PiUserApplicationModelsUser) SetGlobalAccountNil() {
	o.GlobalAccount.Set(nil)
}

// UnsetGlobalAccount ensures that no value is present for GlobalAccount, not even an explicit nil
func (o *PiUserApplicationModelsUser) UnsetGlobalAccount() {
	o.GlobalAccount.Unset()
}

// GetEmail returns the Email field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiUserApplicationModelsUser) GetEmail() string {
	if o == nil || IsNil(o.Email.Get()) {
		var ret string
		return ret
	}
	return *o.Email.Get()
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiUserApplicationModelsUser) GetEmailOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Email.Get(), o.Email.IsSet()
}

// HasEmail returns a boolean if a field has been set.
func (o *PiUserApplicationModelsUser) HasEmail() bool {
	if o != nil && o.Email.IsSet() {
		return true
	}

	return false
}

// SetEmail gets a reference to the given NullableString and assigns it to the Email field.
func (o *PiUserApplicationModelsUser) SetEmail(v string) {
	o.Email.Set(&v)
}

// SetEmailNil sets the value for Email to be an explicit nil
func (o *PiUserApplicationModelsUser) SetEmailNil() {
	o.Email.Set(nil)
}

// UnsetEmail ensures that no value is present for Email, not even an explicit nil
func (o *PiUserApplicationModelsUser) UnsetEmail() {
	o.Email.Unset()
}

// GetCustomerId returns the CustomerId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiUserApplicationModelsUser) GetCustomerId() string {
	if o == nil || IsNil(o.CustomerId.Get()) {
		var ret string
		return ret
	}
	return *o.CustomerId.Get()
}

// GetCustomerIdOk returns a tuple with the CustomerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiUserApplicationModelsUser) GetCustomerIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CustomerId.Get(), o.CustomerId.IsSet()
}

// HasCustomerId returns a boolean if a field has been set.
func (o *PiUserApplicationModelsUser) HasCustomerId() bool {
	if o != nil && o.CustomerId.IsSet() {
		return true
	}

	return false
}

// SetCustomerId gets a reference to the given NullableString and assigns it to the CustomerId field.
func (o *PiUserApplicationModelsUser) SetCustomerId(v string) {
	o.CustomerId.Set(&v)
}

// SetCustomerIdNil sets the value for CustomerId to be an explicit nil
func (o *PiUserApplicationModelsUser) SetCustomerIdNil() {
	o.CustomerId.Set(nil)
}

// UnsetCustomerId ensures that no value is present for CustomerId, not even an explicit nil
func (o *PiUserApplicationModelsUser) UnsetCustomerId() {
	o.CustomerId.Unset()
}

// GetPlaceOfBirthCountry returns the PlaceOfBirthCountry field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiUserApplicationModelsUser) GetPlaceOfBirthCountry() string {
	if o == nil || IsNil(o.PlaceOfBirthCountry.Get()) {
		var ret string
		return ret
	}
	return *o.PlaceOfBirthCountry.Get()
}

// GetPlaceOfBirthCountryOk returns a tuple with the PlaceOfBirthCountry field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiUserApplicationModelsUser) GetPlaceOfBirthCountryOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PlaceOfBirthCountry.Get(), o.PlaceOfBirthCountry.IsSet()
}

// HasPlaceOfBirthCountry returns a boolean if a field has been set.
func (o *PiUserApplicationModelsUser) HasPlaceOfBirthCountry() bool {
	if o != nil && o.PlaceOfBirthCountry.IsSet() {
		return true
	}

	return false
}

// SetPlaceOfBirthCountry gets a reference to the given NullableString and assigns it to the PlaceOfBirthCountry field.
func (o *PiUserApplicationModelsUser) SetPlaceOfBirthCountry(v string) {
	o.PlaceOfBirthCountry.Set(&v)
}

// SetPlaceOfBirthCountryNil sets the value for PlaceOfBirthCountry to be an explicit nil
func (o *PiUserApplicationModelsUser) SetPlaceOfBirthCountryNil() {
	o.PlaceOfBirthCountry.Set(nil)
}

// UnsetPlaceOfBirthCountry ensures that no value is present for PlaceOfBirthCountry, not even an explicit nil
func (o *PiUserApplicationModelsUser) UnsetPlaceOfBirthCountry() {
	o.PlaceOfBirthCountry.Unset()
}

// GetPlaceOfBirthCity returns the PlaceOfBirthCity field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiUserApplicationModelsUser) GetPlaceOfBirthCity() string {
	if o == nil || IsNil(o.PlaceOfBirthCity.Get()) {
		var ret string
		return ret
	}
	return *o.PlaceOfBirthCity.Get()
}

// GetPlaceOfBirthCityOk returns a tuple with the PlaceOfBirthCity field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiUserApplicationModelsUser) GetPlaceOfBirthCityOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PlaceOfBirthCity.Get(), o.PlaceOfBirthCity.IsSet()
}

// HasPlaceOfBirthCity returns a boolean if a field has been set.
func (o *PiUserApplicationModelsUser) HasPlaceOfBirthCity() bool {
	if o != nil && o.PlaceOfBirthCity.IsSet() {
		return true
	}

	return false
}

// SetPlaceOfBirthCity gets a reference to the given NullableString and assigns it to the PlaceOfBirthCity field.
func (o *PiUserApplicationModelsUser) SetPlaceOfBirthCity(v string) {
	o.PlaceOfBirthCity.Set(&v)
}

// SetPlaceOfBirthCityNil sets the value for PlaceOfBirthCity to be an explicit nil
func (o *PiUserApplicationModelsUser) SetPlaceOfBirthCityNil() {
	o.PlaceOfBirthCity.Set(nil)
}

// UnsetPlaceOfBirthCity ensures that no value is present for PlaceOfBirthCity, not even an explicit nil
func (o *PiUserApplicationModelsUser) UnsetPlaceOfBirthCity() {
	o.PlaceOfBirthCity.Unset()
}

// GetCitizenId returns the CitizenId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiUserApplicationModelsUser) GetCitizenId() string {
	if o == nil || IsNil(o.CitizenId.Get()) {
		var ret string
		return ret
	}
	return *o.CitizenId.Get()
}

// GetCitizenIdOk returns a tuple with the CitizenId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiUserApplicationModelsUser) GetCitizenIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CitizenId.Get(), o.CitizenId.IsSet()
}

// HasCitizenId returns a boolean if a field has been set.
func (o *PiUserApplicationModelsUser) HasCitizenId() bool {
	if o != nil && o.CitizenId.IsSet() {
		return true
	}

	return false
}

// SetCitizenId gets a reference to the given NullableString and assigns it to the CitizenId field.
func (o *PiUserApplicationModelsUser) SetCitizenId(v string) {
	o.CitizenId.Set(&v)
}

// SetCitizenIdNil sets the value for CitizenId to be an explicit nil
func (o *PiUserApplicationModelsUser) SetCitizenIdNil() {
	o.CitizenId.Set(nil)
}

// UnsetCitizenId ensures that no value is present for CitizenId, not even an explicit nil
func (o *PiUserApplicationModelsUser) UnsetCitizenId() {
	o.CitizenId.Unset()
}

// GetDateOfBirth returns the DateOfBirth field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiUserApplicationModelsUser) GetDateOfBirth() string {
	if o == nil || IsNil(o.DateOfBirth.Get()) {
		var ret string
		return ret
	}
	return *o.DateOfBirth.Get()
}

// GetDateOfBirthOk returns a tuple with the DateOfBirth field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiUserApplicationModelsUser) GetDateOfBirthOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.DateOfBirth.Get(), o.DateOfBirth.IsSet()
}

// HasDateOfBirth returns a boolean if a field has been set.
func (o *PiUserApplicationModelsUser) HasDateOfBirth() bool {
	if o != nil && o.DateOfBirth.IsSet() {
		return true
	}

	return false
}

// SetDateOfBirth gets a reference to the given NullableString and assigns it to the DateOfBirth field.
func (o *PiUserApplicationModelsUser) SetDateOfBirth(v string) {
	o.DateOfBirth.Set(&v)
}

// SetDateOfBirthNil sets the value for DateOfBirth to be an explicit nil
func (o *PiUserApplicationModelsUser) SetDateOfBirthNil() {
	o.DateOfBirth.Set(nil)
}

// UnsetDateOfBirth ensures that no value is present for DateOfBirth, not even an explicit nil
func (o *PiUserApplicationModelsUser) UnsetDateOfBirth() {
	o.DateOfBirth.Unset()
}

func (o PiUserApplicationModelsUser) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PiUserApplicationModelsUser) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if o.Devices != nil {
		toSerialize["devices"] = o.Devices
	}
	if o.CustomerCodes != nil {
		toSerialize["customerCodes"] = o.CustomerCodes
	}
	if o.TradingAccounts != nil {
		toSerialize["tradingAccounts"] = o.TradingAccounts
	}
	if o.FirstnameTh.IsSet() {
		toSerialize["firstnameTh"] = o.FirstnameTh.Get()
	}
	if o.LastnameTh.IsSet() {
		toSerialize["lastnameTh"] = o.LastnameTh.Get()
	}
	if o.FirstnameEn.IsSet() {
		toSerialize["firstnameEn"] = o.FirstnameEn.Get()
	}
	if o.LastnameEn.IsSet() {
		toSerialize["lastnameEn"] = o.LastnameEn.Get()
	}
	if o.PhoneNumber.IsSet() {
		toSerialize["phoneNumber"] = o.PhoneNumber.Get()
	}
	if o.GlobalAccount.IsSet() {
		toSerialize["globalAccount"] = o.GlobalAccount.Get()
	}
	if o.Email.IsSet() {
		toSerialize["email"] = o.Email.Get()
	}
	if o.CustomerId.IsSet() {
		toSerialize["customerId"] = o.CustomerId.Get()
	}
	if o.PlaceOfBirthCountry.IsSet() {
		toSerialize["placeOfBirthCountry"] = o.PlaceOfBirthCountry.Get()
	}
	if o.PlaceOfBirthCity.IsSet() {
		toSerialize["placeOfBirthCity"] = o.PlaceOfBirthCity.Get()
	}
	if o.CitizenId.IsSet() {
		toSerialize["citizenId"] = o.CitizenId.Get()
	}
	if o.DateOfBirth.IsSet() {
		toSerialize["dateOfBirth"] = o.DateOfBirth.Get()
	}
	return toSerialize, nil
}

type NullablePiUserApplicationModelsUser struct {
	value *PiUserApplicationModelsUser
	isSet bool
}

func (v NullablePiUserApplicationModelsUser) Get() *PiUserApplicationModelsUser {
	return v.value
}

func (v *NullablePiUserApplicationModelsUser) Set(val *PiUserApplicationModelsUser) {
	v.value = val
	v.isSet = true
}

func (v NullablePiUserApplicationModelsUser) IsSet() bool {
	return v.isSet
}

func (v *NullablePiUserApplicationModelsUser) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePiUserApplicationModelsUser(val *PiUserApplicationModelsUser) *NullablePiUserApplicationModelsUser {
	return &NullablePiUserApplicationModelsUser{value: val, isSet: true}
}

func (v NullablePiUserApplicationModelsUser) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePiUserApplicationModelsUser) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
