/*
MarketData Migration Proxy API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package go_client

import (
	"encoding/json"
)

// checks if the PiMarketDataDomainModelsCommonPayload type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PiMarketDataDomainModelsCommonPayload{}

// PiMarketDataDomainModelsCommonPayload struct for PiMarketDataDomainModelsCommonPayload
type PiMarketDataDomainModelsCommonPayload struct {
	Symbol NullableString `json:"symbol,omitempty"`
	Venue  NullableString `json:"venue,omitempty"`
}

// NewPiMarketDataDomainModelsCommonPayload instantiates a new PiMarketDataDomainModelsCommonPayload object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPiMarketDataDomainModelsCommonPayload() *PiMarketDataDomainModelsCommonPayload {
	this := PiMarketDataDomainModelsCommonPayload{}
	return &this
}

// NewPiMarketDataDomainModelsCommonPayloadWithDefaults instantiates a new PiMarketDataDomainModelsCommonPayload object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPiMarketDataDomainModelsCommonPayloadWithDefaults() *PiMarketDataDomainModelsCommonPayload {
	this := PiMarketDataDomainModelsCommonPayload{}
	return &this
}

// GetSymbol returns the Symbol field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiMarketDataDomainModelsCommonPayload) GetSymbol() string {
	if o == nil || IsNil(o.Symbol.Get()) {
		var ret string
		return ret
	}
	return *o.Symbol.Get()
}

// GetSymbolOk returns a tuple with the Symbol field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiMarketDataDomainModelsCommonPayload) GetSymbolOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Symbol.Get(), o.Symbol.IsSet()
}

// HasSymbol returns a boolean if a field has been set.
func (o *PiMarketDataDomainModelsCommonPayload) HasSymbol() bool {
	if o != nil && o.Symbol.IsSet() {
		return true
	}

	return false
}

// SetSymbol gets a reference to the given NullableString and assigns it to the Symbol field.
func (o *PiMarketDataDomainModelsCommonPayload) SetSymbol(v string) {
	o.Symbol.Set(&v)
}

// SetSymbolNil sets the value for Symbol to be an explicit nil
func (o *PiMarketDataDomainModelsCommonPayload) SetSymbolNil() {
	o.Symbol.Set(nil)
}

// UnsetSymbol ensures that no value is present for Symbol, not even an explicit nil
func (o *PiMarketDataDomainModelsCommonPayload) UnsetSymbol() {
	o.Symbol.Unset()
}

// GetVenue returns the Venue field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiMarketDataDomainModelsCommonPayload) GetVenue() string {
	if o == nil || IsNil(o.Venue.Get()) {
		var ret string
		return ret
	}
	return *o.Venue.Get()
}

// GetVenueOk returns a tuple with the Venue field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiMarketDataDomainModelsCommonPayload) GetVenueOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Venue.Get(), o.Venue.IsSet()
}

// HasVenue returns a boolean if a field has been set.
func (o *PiMarketDataDomainModelsCommonPayload) HasVenue() bool {
	if o != nil && o.Venue.IsSet() {
		return true
	}

	return false
}

// SetVenue gets a reference to the given NullableString and assigns it to the Venue field.
func (o *PiMarketDataDomainModelsCommonPayload) SetVenue(v string) {
	o.Venue.Set(&v)
}

// SetVenueNil sets the value for Venue to be an explicit nil
func (o *PiMarketDataDomainModelsCommonPayload) SetVenueNil() {
	o.Venue.Set(nil)
}

// UnsetVenue ensures that no value is present for Venue, not even an explicit nil
func (o *PiMarketDataDomainModelsCommonPayload) UnsetVenue() {
	o.Venue.Unset()
}

func (o PiMarketDataDomainModelsCommonPayload) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PiMarketDataDomainModelsCommonPayload) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Symbol.IsSet() {
		toSerialize["symbol"] = o.Symbol.Get()
	}
	if o.Venue.IsSet() {
		toSerialize["venue"] = o.Venue.Get()
	}
	return toSerialize, nil
}

type NullablePiMarketDataDomainModelsCommonPayload struct {
	value *PiMarketDataDomainModelsCommonPayload
	isSet bool
}

func (v NullablePiMarketDataDomainModelsCommonPayload) Get() *PiMarketDataDomainModelsCommonPayload {
	return v.value
}

func (v *NullablePiMarketDataDomainModelsCommonPayload) Set(val *PiMarketDataDomainModelsCommonPayload) {
	v.value = val
	v.isSet = true
}

func (v NullablePiMarketDataDomainModelsCommonPayload) IsSet() bool {
	return v.isSet
}

func (v *NullablePiMarketDataDomainModelsCommonPayload) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePiMarketDataDomainModelsCommonPayload(val *PiMarketDataDomainModelsCommonPayload) *NullablePiMarketDataDomainModelsCommonPayload {
	return &NullablePiMarketDataDomainModelsCommonPayload{value: val, isSet: true}
}

func (v NullablePiMarketDataDomainModelsCommonPayload) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePiMarketDataDomainModelsCommonPayload) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
