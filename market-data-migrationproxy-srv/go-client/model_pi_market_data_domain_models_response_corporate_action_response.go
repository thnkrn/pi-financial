/*
MarketData Migration Proxy API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package go_client

import (
	"encoding/json"
)

// checks if the PiMarketDataDomainModelsResponseCorporateActionResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PiMarketDataDomainModelsResponseCorporateActionResponse{}

// PiMarketDataDomainModelsResponseCorporateActionResponse struct for PiMarketDataDomainModelsResponseCorporateActionResponse
type PiMarketDataDomainModelsResponseCorporateActionResponse struct {
	Date NullableString `json:"date,omitempty"`
	Type NullableString `json:"type,omitempty"`
}

// NewPiMarketDataDomainModelsResponseCorporateActionResponse instantiates a new PiMarketDataDomainModelsResponseCorporateActionResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPiMarketDataDomainModelsResponseCorporateActionResponse() *PiMarketDataDomainModelsResponseCorporateActionResponse {
	this := PiMarketDataDomainModelsResponseCorporateActionResponse{}
	return &this
}

// NewPiMarketDataDomainModelsResponseCorporateActionResponseWithDefaults instantiates a new PiMarketDataDomainModelsResponseCorporateActionResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPiMarketDataDomainModelsResponseCorporateActionResponseWithDefaults() *PiMarketDataDomainModelsResponseCorporateActionResponse {
	this := PiMarketDataDomainModelsResponseCorporateActionResponse{}
	return &this
}

// GetDate returns the Date field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiMarketDataDomainModelsResponseCorporateActionResponse) GetDate() string {
	if o == nil || IsNil(o.Date.Get()) {
		var ret string
		return ret
	}
	return *o.Date.Get()
}

// GetDateOk returns a tuple with the Date field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiMarketDataDomainModelsResponseCorporateActionResponse) GetDateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Date.Get(), o.Date.IsSet()
}

// HasDate returns a boolean if a field has been set.
func (o *PiMarketDataDomainModelsResponseCorporateActionResponse) HasDate() bool {
	if o != nil && o.Date.IsSet() {
		return true
	}

	return false
}

// SetDate gets a reference to the given NullableString and assigns it to the Date field.
func (o *PiMarketDataDomainModelsResponseCorporateActionResponse) SetDate(v string) {
	o.Date.Set(&v)
}

// SetDateNil sets the value for Date to be an explicit nil
func (o *PiMarketDataDomainModelsResponseCorporateActionResponse) SetDateNil() {
	o.Date.Set(nil)
}

// UnsetDate ensures that no value is present for Date, not even an explicit nil
func (o *PiMarketDataDomainModelsResponseCorporateActionResponse) UnsetDate() {
	o.Date.Unset()
}

// GetType returns the Type field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiMarketDataDomainModelsResponseCorporateActionResponse) GetType() string {
	if o == nil || IsNil(o.Type.Get()) {
		var ret string
		return ret
	}
	return *o.Type.Get()
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiMarketDataDomainModelsResponseCorporateActionResponse) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Type.Get(), o.Type.IsSet()
}

// HasType returns a boolean if a field has been set.
func (o *PiMarketDataDomainModelsResponseCorporateActionResponse) HasType() bool {
	if o != nil && o.Type.IsSet() {
		return true
	}

	return false
}

// SetType gets a reference to the given NullableString and assigns it to the Type field.
func (o *PiMarketDataDomainModelsResponseCorporateActionResponse) SetType(v string) {
	o.Type.Set(&v)
}

// SetTypeNil sets the value for Type to be an explicit nil
func (o *PiMarketDataDomainModelsResponseCorporateActionResponse) SetTypeNil() {
	o.Type.Set(nil)
}

// UnsetType ensures that no value is present for Type, not even an explicit nil
func (o *PiMarketDataDomainModelsResponseCorporateActionResponse) UnsetType() {
	o.Type.Unset()
}

func (o PiMarketDataDomainModelsResponseCorporateActionResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PiMarketDataDomainModelsResponseCorporateActionResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Date.IsSet() {
		toSerialize["date"] = o.Date.Get()
	}
	if o.Type.IsSet() {
		toSerialize["type"] = o.Type.Get()
	}
	return toSerialize, nil
}

type NullablePiMarketDataDomainModelsResponseCorporateActionResponse struct {
	value *PiMarketDataDomainModelsResponseCorporateActionResponse
	isSet bool
}

func (v NullablePiMarketDataDomainModelsResponseCorporateActionResponse) Get() *PiMarketDataDomainModelsResponseCorporateActionResponse {
	return v.value
}

func (v *NullablePiMarketDataDomainModelsResponseCorporateActionResponse) Set(val *PiMarketDataDomainModelsResponseCorporateActionResponse) {
	v.value = val
	v.isSet = true
}

func (v NullablePiMarketDataDomainModelsResponseCorporateActionResponse) IsSet() bool {
	return v.isSet
}

func (v *NullablePiMarketDataDomainModelsResponseCorporateActionResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePiMarketDataDomainModelsResponseCorporateActionResponse(val *PiMarketDataDomainModelsResponseCorporateActionResponse) *NullablePiMarketDataDomainModelsResponseCorporateActionResponse {
	return &NullablePiMarketDataDomainModelsResponseCorporateActionResponse{value: val, isSet: true}
}

func (v NullablePiMarketDataDomainModelsResponseCorporateActionResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePiMarketDataDomainModelsResponseCorporateActionResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
