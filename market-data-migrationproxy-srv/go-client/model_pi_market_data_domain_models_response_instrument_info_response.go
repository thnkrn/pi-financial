/*
MarketData Migration Proxy API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package go_client

import (
	"encoding/json"
)

// checks if the PiMarketDataDomainModelsResponseInstrumentInfoResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PiMarketDataDomainModelsResponseInstrumentInfoResponse{}

// PiMarketDataDomainModelsResponseInstrumentInfoResponse struct for PiMarketDataDomainModelsResponseInstrumentInfoResponse
type PiMarketDataDomainModelsResponseInstrumentInfoResponse struct {
	SpreadSize            NullableString `json:"spreadSize,omitempty"`
	AmountStepSize        NullableString `json:"amountStepSize,omitempty"`
	MinimumPurchaseAmount NullableString `json:"minimumPurchaseAmount,omitempty"`
	MinimumPrice          NullableString `json:"minimumPrice,omitempty"`
	IsNew                 *bool          `json:"isNew,omitempty"`
	TradingSign           []string       `json:"tradingSign,omitempty"`
}

// NewPiMarketDataDomainModelsResponseInstrumentInfoResponse instantiates a new PiMarketDataDomainModelsResponseInstrumentInfoResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPiMarketDataDomainModelsResponseInstrumentInfoResponse() *PiMarketDataDomainModelsResponseInstrumentInfoResponse {
	this := PiMarketDataDomainModelsResponseInstrumentInfoResponse{}
	return &this
}

// NewPiMarketDataDomainModelsResponseInstrumentInfoResponseWithDefaults instantiates a new PiMarketDataDomainModelsResponseInstrumentInfoResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPiMarketDataDomainModelsResponseInstrumentInfoResponseWithDefaults() *PiMarketDataDomainModelsResponseInstrumentInfoResponse {
	this := PiMarketDataDomainModelsResponseInstrumentInfoResponse{}
	return &this
}

// GetSpreadSize returns the SpreadSize field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiMarketDataDomainModelsResponseInstrumentInfoResponse) GetSpreadSize() string {
	if o == nil || IsNil(o.SpreadSize.Get()) {
		var ret string
		return ret
	}
	return *o.SpreadSize.Get()
}

// GetSpreadSizeOk returns a tuple with the SpreadSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiMarketDataDomainModelsResponseInstrumentInfoResponse) GetSpreadSizeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SpreadSize.Get(), o.SpreadSize.IsSet()
}

// HasSpreadSize returns a boolean if a field has been set.
func (o *PiMarketDataDomainModelsResponseInstrumentInfoResponse) HasSpreadSize() bool {
	if o != nil && o.SpreadSize.IsSet() {
		return true
	}

	return false
}

// SetSpreadSize gets a reference to the given NullableString and assigns it to the SpreadSize field.
func (o *PiMarketDataDomainModelsResponseInstrumentInfoResponse) SetSpreadSize(v string) {
	o.SpreadSize.Set(&v)
}

// SetSpreadSizeNil sets the value for SpreadSize to be an explicit nil
func (o *PiMarketDataDomainModelsResponseInstrumentInfoResponse) SetSpreadSizeNil() {
	o.SpreadSize.Set(nil)
}

// UnsetSpreadSize ensures that no value is present for SpreadSize, not even an explicit nil
func (o *PiMarketDataDomainModelsResponseInstrumentInfoResponse) UnsetSpreadSize() {
	o.SpreadSize.Unset()
}

// GetAmountStepSize returns the AmountStepSize field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiMarketDataDomainModelsResponseInstrumentInfoResponse) GetAmountStepSize() string {
	if o == nil || IsNil(o.AmountStepSize.Get()) {
		var ret string
		return ret
	}
	return *o.AmountStepSize.Get()
}

// GetAmountStepSizeOk returns a tuple with the AmountStepSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiMarketDataDomainModelsResponseInstrumentInfoResponse) GetAmountStepSizeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AmountStepSize.Get(), o.AmountStepSize.IsSet()
}

// HasAmountStepSize returns a boolean if a field has been set.
func (o *PiMarketDataDomainModelsResponseInstrumentInfoResponse) HasAmountStepSize() bool {
	if o != nil && o.AmountStepSize.IsSet() {
		return true
	}

	return false
}

// SetAmountStepSize gets a reference to the given NullableString and assigns it to the AmountStepSize field.
func (o *PiMarketDataDomainModelsResponseInstrumentInfoResponse) SetAmountStepSize(v string) {
	o.AmountStepSize.Set(&v)
}

// SetAmountStepSizeNil sets the value for AmountStepSize to be an explicit nil
func (o *PiMarketDataDomainModelsResponseInstrumentInfoResponse) SetAmountStepSizeNil() {
	o.AmountStepSize.Set(nil)
}

// UnsetAmountStepSize ensures that no value is present for AmountStepSize, not even an explicit nil
func (o *PiMarketDataDomainModelsResponseInstrumentInfoResponse) UnsetAmountStepSize() {
	o.AmountStepSize.Unset()
}

// GetMinimumPurchaseAmount returns the MinimumPurchaseAmount field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiMarketDataDomainModelsResponseInstrumentInfoResponse) GetMinimumPurchaseAmount() string {
	if o == nil || IsNil(o.MinimumPurchaseAmount.Get()) {
		var ret string
		return ret
	}
	return *o.MinimumPurchaseAmount.Get()
}

// GetMinimumPurchaseAmountOk returns a tuple with the MinimumPurchaseAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiMarketDataDomainModelsResponseInstrumentInfoResponse) GetMinimumPurchaseAmountOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.MinimumPurchaseAmount.Get(), o.MinimumPurchaseAmount.IsSet()
}

// HasMinimumPurchaseAmount returns a boolean if a field has been set.
func (o *PiMarketDataDomainModelsResponseInstrumentInfoResponse) HasMinimumPurchaseAmount() bool {
	if o != nil && o.MinimumPurchaseAmount.IsSet() {
		return true
	}

	return false
}

// SetMinimumPurchaseAmount gets a reference to the given NullableString and assigns it to the MinimumPurchaseAmount field.
func (o *PiMarketDataDomainModelsResponseInstrumentInfoResponse) SetMinimumPurchaseAmount(v string) {
	o.MinimumPurchaseAmount.Set(&v)
}

// SetMinimumPurchaseAmountNil sets the value for MinimumPurchaseAmount to be an explicit nil
func (o *PiMarketDataDomainModelsResponseInstrumentInfoResponse) SetMinimumPurchaseAmountNil() {
	o.MinimumPurchaseAmount.Set(nil)
}

// UnsetMinimumPurchaseAmount ensures that no value is present for MinimumPurchaseAmount, not even an explicit nil
func (o *PiMarketDataDomainModelsResponseInstrumentInfoResponse) UnsetMinimumPurchaseAmount() {
	o.MinimumPurchaseAmount.Unset()
}

// GetMinimumPrice returns the MinimumPrice field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiMarketDataDomainModelsResponseInstrumentInfoResponse) GetMinimumPrice() string {
	if o == nil || IsNil(o.MinimumPrice.Get()) {
		var ret string
		return ret
	}
	return *o.MinimumPrice.Get()
}

// GetMinimumPriceOk returns a tuple with the MinimumPrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiMarketDataDomainModelsResponseInstrumentInfoResponse) GetMinimumPriceOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.MinimumPrice.Get(), o.MinimumPrice.IsSet()
}

// HasMinimumPrice returns a boolean if a field has been set.
func (o *PiMarketDataDomainModelsResponseInstrumentInfoResponse) HasMinimumPrice() bool {
	if o != nil && o.MinimumPrice.IsSet() {
		return true
	}

	return false
}

// SetMinimumPrice gets a reference to the given NullableString and assigns it to the MinimumPrice field.
func (o *PiMarketDataDomainModelsResponseInstrumentInfoResponse) SetMinimumPrice(v string) {
	o.MinimumPrice.Set(&v)
}

// SetMinimumPriceNil sets the value for MinimumPrice to be an explicit nil
func (o *PiMarketDataDomainModelsResponseInstrumentInfoResponse) SetMinimumPriceNil() {
	o.MinimumPrice.Set(nil)
}

// UnsetMinimumPrice ensures that no value is present for MinimumPrice, not even an explicit nil
func (o *PiMarketDataDomainModelsResponseInstrumentInfoResponse) UnsetMinimumPrice() {
	o.MinimumPrice.Unset()
}

// GetIsNew returns the IsNew field value if set, zero value otherwise.
func (o *PiMarketDataDomainModelsResponseInstrumentInfoResponse) GetIsNew() bool {
	if o == nil || IsNil(o.IsNew) {
		var ret bool
		return ret
	}
	return *o.IsNew
}

// GetIsNewOk returns a tuple with the IsNew field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PiMarketDataDomainModelsResponseInstrumentInfoResponse) GetIsNewOk() (*bool, bool) {
	if o == nil || IsNil(o.IsNew) {
		return nil, false
	}
	return o.IsNew, true
}

// HasIsNew returns a boolean if a field has been set.
func (o *PiMarketDataDomainModelsResponseInstrumentInfoResponse) HasIsNew() bool {
	if o != nil && !IsNil(o.IsNew) {
		return true
	}

	return false
}

// SetIsNew gets a reference to the given bool and assigns it to the IsNew field.
func (o *PiMarketDataDomainModelsResponseInstrumentInfoResponse) SetIsNew(v bool) {
	o.IsNew = &v
}

// GetTradingSign returns the TradingSign field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiMarketDataDomainModelsResponseInstrumentInfoResponse) GetTradingSign() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.TradingSign
}

// GetTradingSignOk returns a tuple with the TradingSign field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiMarketDataDomainModelsResponseInstrumentInfoResponse) GetTradingSignOk() ([]string, bool) {
	if o == nil || IsNil(o.TradingSign) {
		return nil, false
	}
	return o.TradingSign, true
}

// HasTradingSign returns a boolean if a field has been set.
func (o *PiMarketDataDomainModelsResponseInstrumentInfoResponse) HasTradingSign() bool {
	if o != nil && !IsNil(o.TradingSign) {
		return true
	}

	return false
}

// SetTradingSign gets a reference to the given []string and assigns it to the TradingSign field.
func (o *PiMarketDataDomainModelsResponseInstrumentInfoResponse) SetTradingSign(v []string) {
	o.TradingSign = v
}

func (o PiMarketDataDomainModelsResponseInstrumentInfoResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PiMarketDataDomainModelsResponseInstrumentInfoResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.SpreadSize.IsSet() {
		toSerialize["spreadSize"] = o.SpreadSize.Get()
	}
	if o.AmountStepSize.IsSet() {
		toSerialize["amountStepSize"] = o.AmountStepSize.Get()
	}
	if o.MinimumPurchaseAmount.IsSet() {
		toSerialize["minimumPurchaseAmount"] = o.MinimumPurchaseAmount.Get()
	}
	if o.MinimumPrice.IsSet() {
		toSerialize["minimumPrice"] = o.MinimumPrice.Get()
	}
	if !IsNil(o.IsNew) {
		toSerialize["isNew"] = o.IsNew
	}
	if o.TradingSign != nil {
		toSerialize["tradingSign"] = o.TradingSign
	}
	return toSerialize, nil
}

type NullablePiMarketDataDomainModelsResponseInstrumentInfoResponse struct {
	value *PiMarketDataDomainModelsResponseInstrumentInfoResponse
	isSet bool
}

func (v NullablePiMarketDataDomainModelsResponseInstrumentInfoResponse) Get() *PiMarketDataDomainModelsResponseInstrumentInfoResponse {
	return v.value
}

func (v *NullablePiMarketDataDomainModelsResponseInstrumentInfoResponse) Set(val *PiMarketDataDomainModelsResponseInstrumentInfoResponse) {
	v.value = val
	v.isSet = true
}

func (v NullablePiMarketDataDomainModelsResponseInstrumentInfoResponse) IsSet() bool {
	return v.isSet
}

func (v *NullablePiMarketDataDomainModelsResponseInstrumentInfoResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePiMarketDataDomainModelsResponseInstrumentInfoResponse(val *PiMarketDataDomainModelsResponseInstrumentInfoResponse) *NullablePiMarketDataDomainModelsResponseInstrumentInfoResponse {
	return &NullablePiMarketDataDomainModelsResponseInstrumentInfoResponse{value: val, isSet: true}
}

func (v NullablePiMarketDataDomainModelsResponseInstrumentInfoResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePiMarketDataDomainModelsResponseInstrumentInfoResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
