/*
MarketData Migration Proxy API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package go_client

import (
	"encoding/json"
)

// checks if the PiMarketDataDomainModelsResponseBrokerInfoResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PiMarketDataDomainModelsResponseBrokerInfoResponse{}

// PiMarketDataDomainModelsResponseBrokerInfoResponse struct for PiMarketDataDomainModelsResponseBrokerInfoResponse
type PiMarketDataDomainModelsResponseBrokerInfoResponse struct {
	Status *bool                                          `json:"status,omitempty"`
	Data   *PiMarketDataDomainModelsResponseResponseData  `json:"data,omitempty"`
	Error  *PiMarketDataDomainModelsResponseErrorResponse `json:"error,omitempty"`
}

// NewPiMarketDataDomainModelsResponseBrokerInfoResponse instantiates a new PiMarketDataDomainModelsResponseBrokerInfoResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPiMarketDataDomainModelsResponseBrokerInfoResponse() *PiMarketDataDomainModelsResponseBrokerInfoResponse {
	this := PiMarketDataDomainModelsResponseBrokerInfoResponse{}
	return &this
}

// NewPiMarketDataDomainModelsResponseBrokerInfoResponseWithDefaults instantiates a new PiMarketDataDomainModelsResponseBrokerInfoResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPiMarketDataDomainModelsResponseBrokerInfoResponseWithDefaults() *PiMarketDataDomainModelsResponseBrokerInfoResponse {
	this := PiMarketDataDomainModelsResponseBrokerInfoResponse{}
	return &this
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *PiMarketDataDomainModelsResponseBrokerInfoResponse) GetStatus() bool {
	if o == nil || IsNil(o.Status) {
		var ret bool
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PiMarketDataDomainModelsResponseBrokerInfoResponse) GetStatusOk() (*bool, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *PiMarketDataDomainModelsResponseBrokerInfoResponse) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given bool and assigns it to the Status field.
func (o *PiMarketDataDomainModelsResponseBrokerInfoResponse) SetStatus(v bool) {
	o.Status = &v
}

// GetData returns the Data field value if set, zero value otherwise.
func (o *PiMarketDataDomainModelsResponseBrokerInfoResponse) GetData() PiMarketDataDomainModelsResponseResponseData {
	if o == nil || IsNil(o.Data) {
		var ret PiMarketDataDomainModelsResponseResponseData
		return ret
	}
	return *o.Data
}

// GetDataOk returns a tuple with the Data field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PiMarketDataDomainModelsResponseBrokerInfoResponse) GetDataOk() (*PiMarketDataDomainModelsResponseResponseData, bool) {
	if o == nil || IsNil(o.Data) {
		return nil, false
	}
	return o.Data, true
}

// HasData returns a boolean if a field has been set.
func (o *PiMarketDataDomainModelsResponseBrokerInfoResponse) HasData() bool {
	if o != nil && !IsNil(o.Data) {
		return true
	}

	return false
}

// SetData gets a reference to the given PiMarketDataDomainModelsResponseResponseData and assigns it to the Data field.
func (o *PiMarketDataDomainModelsResponseBrokerInfoResponse) SetData(v PiMarketDataDomainModelsResponseResponseData) {
	o.Data = &v
}

// GetError returns the Error field value if set, zero value otherwise.
func (o *PiMarketDataDomainModelsResponseBrokerInfoResponse) GetError() PiMarketDataDomainModelsResponseErrorResponse {
	if o == nil || IsNil(o.Error) {
		var ret PiMarketDataDomainModelsResponseErrorResponse
		return ret
	}
	return *o.Error
}

// GetErrorOk returns a tuple with the Error field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PiMarketDataDomainModelsResponseBrokerInfoResponse) GetErrorOk() (*PiMarketDataDomainModelsResponseErrorResponse, bool) {
	if o == nil || IsNil(o.Error) {
		return nil, false
	}
	return o.Error, true
}

// HasError returns a boolean if a field has been set.
func (o *PiMarketDataDomainModelsResponseBrokerInfoResponse) HasError() bool {
	if o != nil && !IsNil(o.Error) {
		return true
	}

	return false
}

// SetError gets a reference to the given PiMarketDataDomainModelsResponseErrorResponse and assigns it to the Error field.
func (o *PiMarketDataDomainModelsResponseBrokerInfoResponse) SetError(v PiMarketDataDomainModelsResponseErrorResponse) {
	o.Error = &v
}

func (o PiMarketDataDomainModelsResponseBrokerInfoResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PiMarketDataDomainModelsResponseBrokerInfoResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.Data) {
		toSerialize["data"] = o.Data
	}
	if !IsNil(o.Error) {
		toSerialize["error"] = o.Error
	}
	return toSerialize, nil
}

type NullablePiMarketDataDomainModelsResponseBrokerInfoResponse struct {
	value *PiMarketDataDomainModelsResponseBrokerInfoResponse
	isSet bool
}

func (v NullablePiMarketDataDomainModelsResponseBrokerInfoResponse) Get() *PiMarketDataDomainModelsResponseBrokerInfoResponse {
	return v.value
}

func (v *NullablePiMarketDataDomainModelsResponseBrokerInfoResponse) Set(val *PiMarketDataDomainModelsResponseBrokerInfoResponse) {
	v.value = val
	v.isSet = true
}

func (v NullablePiMarketDataDomainModelsResponseBrokerInfoResponse) IsSet() bool {
	return v.isSet
}

func (v *NullablePiMarketDataDomainModelsResponseBrokerInfoResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePiMarketDataDomainModelsResponseBrokerInfoResponse(val *PiMarketDataDomainModelsResponseBrokerInfoResponse) *NullablePiMarketDataDomainModelsResponseBrokerInfoResponse {
	return &NullablePiMarketDataDomainModelsResponseBrokerInfoResponse{value: val, isSet: true}
}

func (v NullablePiMarketDataDomainModelsResponseBrokerInfoResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePiMarketDataDomainModelsResponseBrokerInfoResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
