/*
MarketData Migration Proxy API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package go_client

import (
	"encoding/json"
)

// checks if the PiMarketDataDomainModelsRequestsMarketIndicatorRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PiMarketDataDomainModelsRequestsMarketIndicatorRequest{}

// PiMarketDataDomainModelsRequestsMarketIndicatorRequest struct for PiMarketDataDomainModelsRequestsMarketIndicatorRequest
type PiMarketDataDomainModelsRequestsMarketIndicatorRequest struct {
	Symbol             NullableString                              `json:"symbol,omitempty"`
	Venue              NullableString                              `json:"venue,omitempty"`
	CandleType         NullableString                              `json:"candleType,omitempty"`
	CompleteTradingDay *bool                                       `json:"completeTradingDay,omitempty"`
	Limit              NullableInt32                               `json:"limit,omitempty"`
	FromTimestamp      *int32                                      `json:"fromTimestamp,omitempty"`
	Indicators         *PiMarketDataDomainModelsRequestsIndicators `json:"indicators,omitempty"`
	ToTimestamp        *int32                                      `json:"toTimestamp,omitempty"`
}

// NewPiMarketDataDomainModelsRequestsMarketIndicatorRequest instantiates a new PiMarketDataDomainModelsRequestsMarketIndicatorRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPiMarketDataDomainModelsRequestsMarketIndicatorRequest() *PiMarketDataDomainModelsRequestsMarketIndicatorRequest {
	this := PiMarketDataDomainModelsRequestsMarketIndicatorRequest{}
	return &this
}

// NewPiMarketDataDomainModelsRequestsMarketIndicatorRequestWithDefaults instantiates a new PiMarketDataDomainModelsRequestsMarketIndicatorRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPiMarketDataDomainModelsRequestsMarketIndicatorRequestWithDefaults() *PiMarketDataDomainModelsRequestsMarketIndicatorRequest {
	this := PiMarketDataDomainModelsRequestsMarketIndicatorRequest{}
	return &this
}

// GetSymbol returns the Symbol field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiMarketDataDomainModelsRequestsMarketIndicatorRequest) GetSymbol() string {
	if o == nil || IsNil(o.Symbol.Get()) {
		var ret string
		return ret
	}
	return *o.Symbol.Get()
}

// GetSymbolOk returns a tuple with the Symbol field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiMarketDataDomainModelsRequestsMarketIndicatorRequest) GetSymbolOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Symbol.Get(), o.Symbol.IsSet()
}

// HasSymbol returns a boolean if a field has been set.
func (o *PiMarketDataDomainModelsRequestsMarketIndicatorRequest) HasSymbol() bool {
	if o != nil && o.Symbol.IsSet() {
		return true
	}

	return false
}

// SetSymbol gets a reference to the given NullableString and assigns it to the Symbol field.
func (o *PiMarketDataDomainModelsRequestsMarketIndicatorRequest) SetSymbol(v string) {
	o.Symbol.Set(&v)
}

// SetSymbolNil sets the value for Symbol to be an explicit nil
func (o *PiMarketDataDomainModelsRequestsMarketIndicatorRequest) SetSymbolNil() {
	o.Symbol.Set(nil)
}

// UnsetSymbol ensures that no value is present for Symbol, not even an explicit nil
func (o *PiMarketDataDomainModelsRequestsMarketIndicatorRequest) UnsetSymbol() {
	o.Symbol.Unset()
}

// GetVenue returns the Venue field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiMarketDataDomainModelsRequestsMarketIndicatorRequest) GetVenue() string {
	if o == nil || IsNil(o.Venue.Get()) {
		var ret string
		return ret
	}
	return *o.Venue.Get()
}

// GetVenueOk returns a tuple with the Venue field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiMarketDataDomainModelsRequestsMarketIndicatorRequest) GetVenueOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Venue.Get(), o.Venue.IsSet()
}

// HasVenue returns a boolean if a field has been set.
func (o *PiMarketDataDomainModelsRequestsMarketIndicatorRequest) HasVenue() bool {
	if o != nil && o.Venue.IsSet() {
		return true
	}

	return false
}

// SetVenue gets a reference to the given NullableString and assigns it to the Venue field.
func (o *PiMarketDataDomainModelsRequestsMarketIndicatorRequest) SetVenue(v string) {
	o.Venue.Set(&v)
}

// SetVenueNil sets the value for Venue to be an explicit nil
func (o *PiMarketDataDomainModelsRequestsMarketIndicatorRequest) SetVenueNil() {
	o.Venue.Set(nil)
}

// UnsetVenue ensures that no value is present for Venue, not even an explicit nil
func (o *PiMarketDataDomainModelsRequestsMarketIndicatorRequest) UnsetVenue() {
	o.Venue.Unset()
}

// GetCandleType returns the CandleType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiMarketDataDomainModelsRequestsMarketIndicatorRequest) GetCandleType() string {
	if o == nil || IsNil(o.CandleType.Get()) {
		var ret string
		return ret
	}
	return *o.CandleType.Get()
}

// GetCandleTypeOk returns a tuple with the CandleType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiMarketDataDomainModelsRequestsMarketIndicatorRequest) GetCandleTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CandleType.Get(), o.CandleType.IsSet()
}

// HasCandleType returns a boolean if a field has been set.
func (o *PiMarketDataDomainModelsRequestsMarketIndicatorRequest) HasCandleType() bool {
	if o != nil && o.CandleType.IsSet() {
		return true
	}

	return false
}

// SetCandleType gets a reference to the given NullableString and assigns it to the CandleType field.
func (o *PiMarketDataDomainModelsRequestsMarketIndicatorRequest) SetCandleType(v string) {
	o.CandleType.Set(&v)
}

// SetCandleTypeNil sets the value for CandleType to be an explicit nil
func (o *PiMarketDataDomainModelsRequestsMarketIndicatorRequest) SetCandleTypeNil() {
	o.CandleType.Set(nil)
}

// UnsetCandleType ensures that no value is present for CandleType, not even an explicit nil
func (o *PiMarketDataDomainModelsRequestsMarketIndicatorRequest) UnsetCandleType() {
	o.CandleType.Unset()
}

// GetCompleteTradingDay returns the CompleteTradingDay field value if set, zero value otherwise.
func (o *PiMarketDataDomainModelsRequestsMarketIndicatorRequest) GetCompleteTradingDay() bool {
	if o == nil || IsNil(o.CompleteTradingDay) {
		var ret bool
		return ret
	}
	return *o.CompleteTradingDay
}

// GetCompleteTradingDayOk returns a tuple with the CompleteTradingDay field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PiMarketDataDomainModelsRequestsMarketIndicatorRequest) GetCompleteTradingDayOk() (*bool, bool) {
	if o == nil || IsNil(o.CompleteTradingDay) {
		return nil, false
	}
	return o.CompleteTradingDay, true
}

// HasCompleteTradingDay returns a boolean if a field has been set.
func (o *PiMarketDataDomainModelsRequestsMarketIndicatorRequest) HasCompleteTradingDay() bool {
	if o != nil && !IsNil(o.CompleteTradingDay) {
		return true
	}

	return false
}

// SetCompleteTradingDay gets a reference to the given bool and assigns it to the CompleteTradingDay field.
func (o *PiMarketDataDomainModelsRequestsMarketIndicatorRequest) SetCompleteTradingDay(v bool) {
	o.CompleteTradingDay = &v
}

// GetLimit returns the Limit field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiMarketDataDomainModelsRequestsMarketIndicatorRequest) GetLimit() int32 {
	if o == nil || IsNil(o.Limit.Get()) {
		var ret int32
		return ret
	}
	return *o.Limit.Get()
}

// GetLimitOk returns a tuple with the Limit field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiMarketDataDomainModelsRequestsMarketIndicatorRequest) GetLimitOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.Limit.Get(), o.Limit.IsSet()
}

// HasLimit returns a boolean if a field has been set.
func (o *PiMarketDataDomainModelsRequestsMarketIndicatorRequest) HasLimit() bool {
	if o != nil && o.Limit.IsSet() {
		return true
	}

	return false
}

// SetLimit gets a reference to the given NullableInt32 and assigns it to the Limit field.
func (o *PiMarketDataDomainModelsRequestsMarketIndicatorRequest) SetLimit(v int32) {
	o.Limit.Set(&v)
}

// SetLimitNil sets the value for Limit to be an explicit nil
func (o *PiMarketDataDomainModelsRequestsMarketIndicatorRequest) SetLimitNil() {
	o.Limit.Set(nil)
}

// UnsetLimit ensures that no value is present for Limit, not even an explicit nil
func (o *PiMarketDataDomainModelsRequestsMarketIndicatorRequest) UnsetLimit() {
	o.Limit.Unset()
}

// GetFromTimestamp returns the FromTimestamp field value if set, zero value otherwise.
func (o *PiMarketDataDomainModelsRequestsMarketIndicatorRequest) GetFromTimestamp() int32 {
	if o == nil || IsNil(o.FromTimestamp) {
		var ret int32
		return ret
	}
	return *o.FromTimestamp
}

// GetFromTimestampOk returns a tuple with the FromTimestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PiMarketDataDomainModelsRequestsMarketIndicatorRequest) GetFromTimestampOk() (*int32, bool) {
	if o == nil || IsNil(o.FromTimestamp) {
		return nil, false
	}
	return o.FromTimestamp, true
}

// HasFromTimestamp returns a boolean if a field has been set.
func (o *PiMarketDataDomainModelsRequestsMarketIndicatorRequest) HasFromTimestamp() bool {
	if o != nil && !IsNil(o.FromTimestamp) {
		return true
	}

	return false
}

// SetFromTimestamp gets a reference to the given int32 and assigns it to the FromTimestamp field.
func (o *PiMarketDataDomainModelsRequestsMarketIndicatorRequest) SetFromTimestamp(v int32) {
	o.FromTimestamp = &v
}

// GetIndicators returns the Indicators field value if set, zero value otherwise.
func (o *PiMarketDataDomainModelsRequestsMarketIndicatorRequest) GetIndicators() PiMarketDataDomainModelsRequestsIndicators {
	if o == nil || IsNil(o.Indicators) {
		var ret PiMarketDataDomainModelsRequestsIndicators
		return ret
	}
	return *o.Indicators
}

// GetIndicatorsOk returns a tuple with the Indicators field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PiMarketDataDomainModelsRequestsMarketIndicatorRequest) GetIndicatorsOk() (*PiMarketDataDomainModelsRequestsIndicators, bool) {
	if o == nil || IsNil(o.Indicators) {
		return nil, false
	}
	return o.Indicators, true
}

// HasIndicators returns a boolean if a field has been set.
func (o *PiMarketDataDomainModelsRequestsMarketIndicatorRequest) HasIndicators() bool {
	if o != nil && !IsNil(o.Indicators) {
		return true
	}

	return false
}

// SetIndicators gets a reference to the given PiMarketDataDomainModelsRequestsIndicators and assigns it to the Indicators field.
func (o *PiMarketDataDomainModelsRequestsMarketIndicatorRequest) SetIndicators(v PiMarketDataDomainModelsRequestsIndicators) {
	o.Indicators = &v
}

// GetToTimestamp returns the ToTimestamp field value if set, zero value otherwise.
func (o *PiMarketDataDomainModelsRequestsMarketIndicatorRequest) GetToTimestamp() int32 {
	if o == nil || IsNil(o.ToTimestamp) {
		var ret int32
		return ret
	}
	return *o.ToTimestamp
}

// GetToTimestampOk returns a tuple with the ToTimestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PiMarketDataDomainModelsRequestsMarketIndicatorRequest) GetToTimestampOk() (*int32, bool) {
	if o == nil || IsNil(o.ToTimestamp) {
		return nil, false
	}
	return o.ToTimestamp, true
}

// HasToTimestamp returns a boolean if a field has been set.
func (o *PiMarketDataDomainModelsRequestsMarketIndicatorRequest) HasToTimestamp() bool {
	if o != nil && !IsNil(o.ToTimestamp) {
		return true
	}

	return false
}

// SetToTimestamp gets a reference to the given int32 and assigns it to the ToTimestamp field.
func (o *PiMarketDataDomainModelsRequestsMarketIndicatorRequest) SetToTimestamp(v int32) {
	o.ToTimestamp = &v
}

func (o PiMarketDataDomainModelsRequestsMarketIndicatorRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PiMarketDataDomainModelsRequestsMarketIndicatorRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Symbol.IsSet() {
		toSerialize["symbol"] = o.Symbol.Get()
	}
	if o.Venue.IsSet() {
		toSerialize["venue"] = o.Venue.Get()
	}
	if o.CandleType.IsSet() {
		toSerialize["candleType"] = o.CandleType.Get()
	}
	if !IsNil(o.CompleteTradingDay) {
		toSerialize["completeTradingDay"] = o.CompleteTradingDay
	}
	if o.Limit.IsSet() {
		toSerialize["limit"] = o.Limit.Get()
	}
	if !IsNil(o.FromTimestamp) {
		toSerialize["fromTimestamp"] = o.FromTimestamp
	}
	if !IsNil(o.Indicators) {
		toSerialize["indicators"] = o.Indicators
	}
	if !IsNil(o.ToTimestamp) {
		toSerialize["toTimestamp"] = o.ToTimestamp
	}
	return toSerialize, nil
}

type NullablePiMarketDataDomainModelsRequestsMarketIndicatorRequest struct {
	value *PiMarketDataDomainModelsRequestsMarketIndicatorRequest
	isSet bool
}

func (v NullablePiMarketDataDomainModelsRequestsMarketIndicatorRequest) Get() *PiMarketDataDomainModelsRequestsMarketIndicatorRequest {
	return v.value
}

func (v *NullablePiMarketDataDomainModelsRequestsMarketIndicatorRequest) Set(val *PiMarketDataDomainModelsRequestsMarketIndicatorRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePiMarketDataDomainModelsRequestsMarketIndicatorRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePiMarketDataDomainModelsRequestsMarketIndicatorRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePiMarketDataDomainModelsRequestsMarketIndicatorRequest(val *PiMarketDataDomainModelsRequestsMarketIndicatorRequest) *NullablePiMarketDataDomainModelsRequestsMarketIndicatorRequest {
	return &NullablePiMarketDataDomainModelsRequestsMarketIndicatorRequest{value: val, isSet: true}
}

func (v NullablePiMarketDataDomainModelsRequestsMarketIndicatorRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePiMarketDataDomainModelsRequestsMarketIndicatorRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
