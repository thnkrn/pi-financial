/*
MarketData Migration Proxy API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package go_client

import (
	"encoding/json"
)

// checks if the PiMarketDataDomainModelsResponseTickerBody type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PiMarketDataDomainModelsResponseTickerBody{}

// PiMarketDataDomainModelsResponseTickerBody struct for PiMarketDataDomainModelsResponseTickerBody
type PiMarketDataDomainModelsResponseTickerBody struct {
	Symbol             NullableString                                   `json:"symbol,omitempty"`
	Venue              NullableString                                   `json:"venue,omitempty"`
	Price              NullableString                                   `json:"price,omitempty"`
	Currency           NullableString                                   `json:"currency,omitempty"`
	AuctionPrice       NullableString                                   `json:"auctionPrice,omitempty"`
	AuctionVolume      NullableString                                   `json:"auctionVolume,omitempty"`
	Open               NullableString                                   `json:"open,omitempty"`
	High24H            NullableString                                   `json:"high24H,omitempty"`
	Low24H             NullableString                                   `json:"low24H,omitempty"`
	High52W            NullableString                                   `json:"high52W,omitempty"`
	Low52W             NullableString                                   `json:"low52W,omitempty"`
	PriceChanged       NullableString                                   `json:"priceChanged,omitempty"`
	PriceChangedRate   NullableString                                   `json:"priceChangedRate,omitempty"`
	Volume             NullableString                                   `json:"volume,omitempty"`
	Amount             NullableString                                   `json:"amount,omitempty"`
	ChangeAmount       NullableString                                   `json:"changeAmount,omitempty"`
	ChangeVolume       NullableString                                   `json:"changeVolume,omitempty"`
	TurnoverRate       NullableString                                   `json:"turnoverRate,omitempty"`
	Open2              NullableString                                   `json:"open2,omitempty"`
	Ceiling            NullableString                                   `json:"ceiling,omitempty"`
	Floor              NullableString                                   `json:"floor,omitempty"`
	Average            NullableString                                   `json:"average,omitempty"`
	AverageBuy         NullableString                                   `json:"averageBuy,omitempty"`
	AverageSell        NullableString                                   `json:"averageSell,omitempty"`
	Aggressor          NullableString                                   `json:"aggressor,omitempty"`
	PreClose           NullableString                                   `json:"preClose,omitempty"`
	Status             NullableString                                   `json:"status,omitempty"`
	Yield              NullableString                                   `json:"yield,omitempty"`
	Pe                 NullableString                                   `json:"pe,omitempty"`
	Pb                 NullableString                                   `json:"pb,omitempty"`
	TotalAmount        NullableString                                   `json:"totalAmount,omitempty"`
	TotalAmountK       NullableString                                   `json:"totalAmountK,omitempty"`
	TotalVolume        NullableString                                   `json:"totalVolume,omitempty"`
	TotalVolumeK       NullableString                                   `json:"totalVolumeK,omitempty"`
	TradableEquity     NullableString                                   `json:"tradableEquity,omitempty"`
	TradableAmount     NullableString                                   `json:"tradableAmount,omitempty"`
	Eps                NullableString                                   `json:"eps,omitempty"`
	PublicTrades       [][]interface{}                                  `json:"publicTrades,omitempty"`
	OrderBook          *PiMarketDataDomainModelsResponseTickerOrderBook `json:"orderBook,omitempty"`
	SecurityType       NullableString                                   `json:"securityType,omitempty"`
	InstrumentType     NullableString                                   `json:"instrumentType,omitempty"`
	Market             NullableString                                   `json:"market,omitempty"`
	LastTrade          NullableString                                   `json:"lastTrade,omitempty"`
	ToLastTrade        *int32                                           `json:"toLastTrade,omitempty"`
	Moneyness          NullableString                                   `json:"moneyness,omitempty"`
	MaturityDate       NullableString                                   `json:"maturityDate,omitempty"`
	Multiplier         NullableString                                   `json:"multiplier,omitempty"`
	ExercisePrice      NullableString                                   `json:"exercisePrice,omitempty"`
	IntrinsicValue     NullableString                                   `json:"intrinsicValue,omitempty"`
	PSettle            NullableString                                   `json:"pSettle,omitempty"`
	Poi                NullableString                                   `json:"poi,omitempty"`
	Underlying         NullableString                                   `json:"underlying,omitempty"`
	Open0              NullableString                                   `json:"open0,omitempty"`
	Open1              NullableString                                   `json:"open1,omitempty"`
	Basis              NullableString                                   `json:"basis,omitempty"`
	Settle             NullableString                                   `json:"settle,omitempty"`
	InstrumentCategory NullableString                                   `json:"instrumentCategory,omitempty"`
	FriendlyName       NullableString                                   `json:"friendlyName,omitempty"`
	Logo               NullableString                                   `json:"logo,omitempty"`
	ExchangeTimezone   NullableString                                   `json:"exchangeTimezone,omitempty"`
	Country            NullableString                                   `json:"country,omitempty"`
	OffsetSeconds      *int32                                           `json:"offsetSeconds,omitempty"`
	IsProjected        *bool                                            `json:"isProjected,omitempty"`
	LastPriceTime      *int64                                           `json:"lastPriceTime,omitempty"`
}

// NewPiMarketDataDomainModelsResponseTickerBody instantiates a new PiMarketDataDomainModelsResponseTickerBody object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPiMarketDataDomainModelsResponseTickerBody() *PiMarketDataDomainModelsResponseTickerBody {
	this := PiMarketDataDomainModelsResponseTickerBody{}
	return &this
}

// NewPiMarketDataDomainModelsResponseTickerBodyWithDefaults instantiates a new PiMarketDataDomainModelsResponseTickerBody object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPiMarketDataDomainModelsResponseTickerBodyWithDefaults() *PiMarketDataDomainModelsResponseTickerBody {
	this := PiMarketDataDomainModelsResponseTickerBody{}
	return &this
}

// GetSymbol returns the Symbol field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiMarketDataDomainModelsResponseTickerBody) GetSymbol() string {
	if o == nil || IsNil(o.Symbol.Get()) {
		var ret string
		return ret
	}
	return *o.Symbol.Get()
}

// GetSymbolOk returns a tuple with the Symbol field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiMarketDataDomainModelsResponseTickerBody) GetSymbolOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Symbol.Get(), o.Symbol.IsSet()
}

// HasSymbol returns a boolean if a field has been set.
func (o *PiMarketDataDomainModelsResponseTickerBody) HasSymbol() bool {
	if o != nil && o.Symbol.IsSet() {
		return true
	}

	return false
}

// SetSymbol gets a reference to the given NullableString and assigns it to the Symbol field.
func (o *PiMarketDataDomainModelsResponseTickerBody) SetSymbol(v string) {
	o.Symbol.Set(&v)
}

// SetSymbolNil sets the value for Symbol to be an explicit nil
func (o *PiMarketDataDomainModelsResponseTickerBody) SetSymbolNil() {
	o.Symbol.Set(nil)
}

// UnsetSymbol ensures that no value is present for Symbol, not even an explicit nil
func (o *PiMarketDataDomainModelsResponseTickerBody) UnsetSymbol() {
	o.Symbol.Unset()
}

// GetVenue returns the Venue field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiMarketDataDomainModelsResponseTickerBody) GetVenue() string {
	if o == nil || IsNil(o.Venue.Get()) {
		var ret string
		return ret
	}
	return *o.Venue.Get()
}

// GetVenueOk returns a tuple with the Venue field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiMarketDataDomainModelsResponseTickerBody) GetVenueOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Venue.Get(), o.Venue.IsSet()
}

// HasVenue returns a boolean if a field has been set.
func (o *PiMarketDataDomainModelsResponseTickerBody) HasVenue() bool {
	if o != nil && o.Venue.IsSet() {
		return true
	}

	return false
}

// SetVenue gets a reference to the given NullableString and assigns it to the Venue field.
func (o *PiMarketDataDomainModelsResponseTickerBody) SetVenue(v string) {
	o.Venue.Set(&v)
}

// SetVenueNil sets the value for Venue to be an explicit nil
func (o *PiMarketDataDomainModelsResponseTickerBody) SetVenueNil() {
	o.Venue.Set(nil)
}

// UnsetVenue ensures that no value is present for Venue, not even an explicit nil
func (o *PiMarketDataDomainModelsResponseTickerBody) UnsetVenue() {
	o.Venue.Unset()
}

// GetPrice returns the Price field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiMarketDataDomainModelsResponseTickerBody) GetPrice() string {
	if o == nil || IsNil(o.Price.Get()) {
		var ret string
		return ret
	}
	return *o.Price.Get()
}

// GetPriceOk returns a tuple with the Price field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiMarketDataDomainModelsResponseTickerBody) GetPriceOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Price.Get(), o.Price.IsSet()
}

// HasPrice returns a boolean if a field has been set.
func (o *PiMarketDataDomainModelsResponseTickerBody) HasPrice() bool {
	if o != nil && o.Price.IsSet() {
		return true
	}

	return false
}

// SetPrice gets a reference to the given NullableString and assigns it to the Price field.
func (o *PiMarketDataDomainModelsResponseTickerBody) SetPrice(v string) {
	o.Price.Set(&v)
}

// SetPriceNil sets the value for Price to be an explicit nil
func (o *PiMarketDataDomainModelsResponseTickerBody) SetPriceNil() {
	o.Price.Set(nil)
}

// UnsetPrice ensures that no value is present for Price, not even an explicit nil
func (o *PiMarketDataDomainModelsResponseTickerBody) UnsetPrice() {
	o.Price.Unset()
}

// GetCurrency returns the Currency field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiMarketDataDomainModelsResponseTickerBody) GetCurrency() string {
	if o == nil || IsNil(o.Currency.Get()) {
		var ret string
		return ret
	}
	return *o.Currency.Get()
}

// GetCurrencyOk returns a tuple with the Currency field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiMarketDataDomainModelsResponseTickerBody) GetCurrencyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Currency.Get(), o.Currency.IsSet()
}

// HasCurrency returns a boolean if a field has been set.
func (o *PiMarketDataDomainModelsResponseTickerBody) HasCurrency() bool {
	if o != nil && o.Currency.IsSet() {
		return true
	}

	return false
}

// SetCurrency gets a reference to the given NullableString and assigns it to the Currency field.
func (o *PiMarketDataDomainModelsResponseTickerBody) SetCurrency(v string) {
	o.Currency.Set(&v)
}

// SetCurrencyNil sets the value for Currency to be an explicit nil
func (o *PiMarketDataDomainModelsResponseTickerBody) SetCurrencyNil() {
	o.Currency.Set(nil)
}

// UnsetCurrency ensures that no value is present for Currency, not even an explicit nil
func (o *PiMarketDataDomainModelsResponseTickerBody) UnsetCurrency() {
	o.Currency.Unset()
}

// GetAuctionPrice returns the AuctionPrice field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiMarketDataDomainModelsResponseTickerBody) GetAuctionPrice() string {
	if o == nil || IsNil(o.AuctionPrice.Get()) {
		var ret string
		return ret
	}
	return *o.AuctionPrice.Get()
}

// GetAuctionPriceOk returns a tuple with the AuctionPrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiMarketDataDomainModelsResponseTickerBody) GetAuctionPriceOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AuctionPrice.Get(), o.AuctionPrice.IsSet()
}

// HasAuctionPrice returns a boolean if a field has been set.
func (o *PiMarketDataDomainModelsResponseTickerBody) HasAuctionPrice() bool {
	if o != nil && o.AuctionPrice.IsSet() {
		return true
	}

	return false
}

// SetAuctionPrice gets a reference to the given NullableString and assigns it to the AuctionPrice field.
func (o *PiMarketDataDomainModelsResponseTickerBody) SetAuctionPrice(v string) {
	o.AuctionPrice.Set(&v)
}

// SetAuctionPriceNil sets the value for AuctionPrice to be an explicit nil
func (o *PiMarketDataDomainModelsResponseTickerBody) SetAuctionPriceNil() {
	o.AuctionPrice.Set(nil)
}

// UnsetAuctionPrice ensures that no value is present for AuctionPrice, not even an explicit nil
func (o *PiMarketDataDomainModelsResponseTickerBody) UnsetAuctionPrice() {
	o.AuctionPrice.Unset()
}

// GetAuctionVolume returns the AuctionVolume field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiMarketDataDomainModelsResponseTickerBody) GetAuctionVolume() string {
	if o == nil || IsNil(o.AuctionVolume.Get()) {
		var ret string
		return ret
	}
	return *o.AuctionVolume.Get()
}

// GetAuctionVolumeOk returns a tuple with the AuctionVolume field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiMarketDataDomainModelsResponseTickerBody) GetAuctionVolumeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AuctionVolume.Get(), o.AuctionVolume.IsSet()
}

// HasAuctionVolume returns a boolean if a field has been set.
func (o *PiMarketDataDomainModelsResponseTickerBody) HasAuctionVolume() bool {
	if o != nil && o.AuctionVolume.IsSet() {
		return true
	}

	return false
}

// SetAuctionVolume gets a reference to the given NullableString and assigns it to the AuctionVolume field.
func (o *PiMarketDataDomainModelsResponseTickerBody) SetAuctionVolume(v string) {
	o.AuctionVolume.Set(&v)
}

// SetAuctionVolumeNil sets the value for AuctionVolume to be an explicit nil
func (o *PiMarketDataDomainModelsResponseTickerBody) SetAuctionVolumeNil() {
	o.AuctionVolume.Set(nil)
}

// UnsetAuctionVolume ensures that no value is present for AuctionVolume, not even an explicit nil
func (o *PiMarketDataDomainModelsResponseTickerBody) UnsetAuctionVolume() {
	o.AuctionVolume.Unset()
}

// GetOpen returns the Open field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiMarketDataDomainModelsResponseTickerBody) GetOpen() string {
	if o == nil || IsNil(o.Open.Get()) {
		var ret string
		return ret
	}
	return *o.Open.Get()
}

// GetOpenOk returns a tuple with the Open field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiMarketDataDomainModelsResponseTickerBody) GetOpenOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Open.Get(), o.Open.IsSet()
}

// HasOpen returns a boolean if a field has been set.
func (o *PiMarketDataDomainModelsResponseTickerBody) HasOpen() bool {
	if o != nil && o.Open.IsSet() {
		return true
	}

	return false
}

// SetOpen gets a reference to the given NullableString and assigns it to the Open field.
func (o *PiMarketDataDomainModelsResponseTickerBody) SetOpen(v string) {
	o.Open.Set(&v)
}

// SetOpenNil sets the value for Open to be an explicit nil
func (o *PiMarketDataDomainModelsResponseTickerBody) SetOpenNil() {
	o.Open.Set(nil)
}

// UnsetOpen ensures that no value is present for Open, not even an explicit nil
func (o *PiMarketDataDomainModelsResponseTickerBody) UnsetOpen() {
	o.Open.Unset()
}

// GetHigh24H returns the High24H field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiMarketDataDomainModelsResponseTickerBody) GetHigh24H() string {
	if o == nil || IsNil(o.High24H.Get()) {
		var ret string
		return ret
	}
	return *o.High24H.Get()
}

// GetHigh24HOk returns a tuple with the High24H field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiMarketDataDomainModelsResponseTickerBody) GetHigh24HOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.High24H.Get(), o.High24H.IsSet()
}

// HasHigh24H returns a boolean if a field has been set.
func (o *PiMarketDataDomainModelsResponseTickerBody) HasHigh24H() bool {
	if o != nil && o.High24H.IsSet() {
		return true
	}

	return false
}

// SetHigh24H gets a reference to the given NullableString and assigns it to the High24H field.
func (o *PiMarketDataDomainModelsResponseTickerBody) SetHigh24H(v string) {
	o.High24H.Set(&v)
}

// SetHigh24HNil sets the value for High24H to be an explicit nil
func (o *PiMarketDataDomainModelsResponseTickerBody) SetHigh24HNil() {
	o.High24H.Set(nil)
}

// UnsetHigh24H ensures that no value is present for High24H, not even an explicit nil
func (o *PiMarketDataDomainModelsResponseTickerBody) UnsetHigh24H() {
	o.High24H.Unset()
}

// GetLow24H returns the Low24H field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiMarketDataDomainModelsResponseTickerBody) GetLow24H() string {
	if o == nil || IsNil(o.Low24H.Get()) {
		var ret string
		return ret
	}
	return *o.Low24H.Get()
}

// GetLow24HOk returns a tuple with the Low24H field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiMarketDataDomainModelsResponseTickerBody) GetLow24HOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Low24H.Get(), o.Low24H.IsSet()
}

// HasLow24H returns a boolean if a field has been set.
func (o *PiMarketDataDomainModelsResponseTickerBody) HasLow24H() bool {
	if o != nil && o.Low24H.IsSet() {
		return true
	}

	return false
}

// SetLow24H gets a reference to the given NullableString and assigns it to the Low24H field.
func (o *PiMarketDataDomainModelsResponseTickerBody) SetLow24H(v string) {
	o.Low24H.Set(&v)
}

// SetLow24HNil sets the value for Low24H to be an explicit nil
func (o *PiMarketDataDomainModelsResponseTickerBody) SetLow24HNil() {
	o.Low24H.Set(nil)
}

// UnsetLow24H ensures that no value is present for Low24H, not even an explicit nil
func (o *PiMarketDataDomainModelsResponseTickerBody) UnsetLow24H() {
	o.Low24H.Unset()
}

// GetHigh52W returns the High52W field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiMarketDataDomainModelsResponseTickerBody) GetHigh52W() string {
	if o == nil || IsNil(o.High52W.Get()) {
		var ret string
		return ret
	}
	return *o.High52W.Get()
}

// GetHigh52WOk returns a tuple with the High52W field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiMarketDataDomainModelsResponseTickerBody) GetHigh52WOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.High52W.Get(), o.High52W.IsSet()
}

// HasHigh52W returns a boolean if a field has been set.
func (o *PiMarketDataDomainModelsResponseTickerBody) HasHigh52W() bool {
	if o != nil && o.High52W.IsSet() {
		return true
	}

	return false
}

// SetHigh52W gets a reference to the given NullableString and assigns it to the High52W field.
func (o *PiMarketDataDomainModelsResponseTickerBody) SetHigh52W(v string) {
	o.High52W.Set(&v)
}

// SetHigh52WNil sets the value for High52W to be an explicit nil
func (o *PiMarketDataDomainModelsResponseTickerBody) SetHigh52WNil() {
	o.High52W.Set(nil)
}

// UnsetHigh52W ensures that no value is present for High52W, not even an explicit nil
func (o *PiMarketDataDomainModelsResponseTickerBody) UnsetHigh52W() {
	o.High52W.Unset()
}

// GetLow52W returns the Low52W field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiMarketDataDomainModelsResponseTickerBody) GetLow52W() string {
	if o == nil || IsNil(o.Low52W.Get()) {
		var ret string
		return ret
	}
	return *o.Low52W.Get()
}

// GetLow52WOk returns a tuple with the Low52W field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiMarketDataDomainModelsResponseTickerBody) GetLow52WOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Low52W.Get(), o.Low52W.IsSet()
}

// HasLow52W returns a boolean if a field has been set.
func (o *PiMarketDataDomainModelsResponseTickerBody) HasLow52W() bool {
	if o != nil && o.Low52W.IsSet() {
		return true
	}

	return false
}

// SetLow52W gets a reference to the given NullableString and assigns it to the Low52W field.
func (o *PiMarketDataDomainModelsResponseTickerBody) SetLow52W(v string) {
	o.Low52W.Set(&v)
}

// SetLow52WNil sets the value for Low52W to be an explicit nil
func (o *PiMarketDataDomainModelsResponseTickerBody) SetLow52WNil() {
	o.Low52W.Set(nil)
}

// UnsetLow52W ensures that no value is present for Low52W, not even an explicit nil
func (o *PiMarketDataDomainModelsResponseTickerBody) UnsetLow52W() {
	o.Low52W.Unset()
}

// GetPriceChanged returns the PriceChanged field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiMarketDataDomainModelsResponseTickerBody) GetPriceChanged() string {
	if o == nil || IsNil(o.PriceChanged.Get()) {
		var ret string
		return ret
	}
	return *o.PriceChanged.Get()
}

// GetPriceChangedOk returns a tuple with the PriceChanged field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiMarketDataDomainModelsResponseTickerBody) GetPriceChangedOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PriceChanged.Get(), o.PriceChanged.IsSet()
}

// HasPriceChanged returns a boolean if a field has been set.
func (o *PiMarketDataDomainModelsResponseTickerBody) HasPriceChanged() bool {
	if o != nil && o.PriceChanged.IsSet() {
		return true
	}

	return false
}

// SetPriceChanged gets a reference to the given NullableString and assigns it to the PriceChanged field.
func (o *PiMarketDataDomainModelsResponseTickerBody) SetPriceChanged(v string) {
	o.PriceChanged.Set(&v)
}

// SetPriceChangedNil sets the value for PriceChanged to be an explicit nil
func (o *PiMarketDataDomainModelsResponseTickerBody) SetPriceChangedNil() {
	o.PriceChanged.Set(nil)
}

// UnsetPriceChanged ensures that no value is present for PriceChanged, not even an explicit nil
func (o *PiMarketDataDomainModelsResponseTickerBody) UnsetPriceChanged() {
	o.PriceChanged.Unset()
}

// GetPriceChangedRate returns the PriceChangedRate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiMarketDataDomainModelsResponseTickerBody) GetPriceChangedRate() string {
	if o == nil || IsNil(o.PriceChangedRate.Get()) {
		var ret string
		return ret
	}
	return *o.PriceChangedRate.Get()
}

// GetPriceChangedRateOk returns a tuple with the PriceChangedRate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiMarketDataDomainModelsResponseTickerBody) GetPriceChangedRateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PriceChangedRate.Get(), o.PriceChangedRate.IsSet()
}

// HasPriceChangedRate returns a boolean if a field has been set.
func (o *PiMarketDataDomainModelsResponseTickerBody) HasPriceChangedRate() bool {
	if o != nil && o.PriceChangedRate.IsSet() {
		return true
	}

	return false
}

// SetPriceChangedRate gets a reference to the given NullableString and assigns it to the PriceChangedRate field.
func (o *PiMarketDataDomainModelsResponseTickerBody) SetPriceChangedRate(v string) {
	o.PriceChangedRate.Set(&v)
}

// SetPriceChangedRateNil sets the value for PriceChangedRate to be an explicit nil
func (o *PiMarketDataDomainModelsResponseTickerBody) SetPriceChangedRateNil() {
	o.PriceChangedRate.Set(nil)
}

// UnsetPriceChangedRate ensures that no value is present for PriceChangedRate, not even an explicit nil
func (o *PiMarketDataDomainModelsResponseTickerBody) UnsetPriceChangedRate() {
	o.PriceChangedRate.Unset()
}

// GetVolume returns the Volume field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiMarketDataDomainModelsResponseTickerBody) GetVolume() string {
	if o == nil || IsNil(o.Volume.Get()) {
		var ret string
		return ret
	}
	return *o.Volume.Get()
}

// GetVolumeOk returns a tuple with the Volume field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiMarketDataDomainModelsResponseTickerBody) GetVolumeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Volume.Get(), o.Volume.IsSet()
}

// HasVolume returns a boolean if a field has been set.
func (o *PiMarketDataDomainModelsResponseTickerBody) HasVolume() bool {
	if o != nil && o.Volume.IsSet() {
		return true
	}

	return false
}

// SetVolume gets a reference to the given NullableString and assigns it to the Volume field.
func (o *PiMarketDataDomainModelsResponseTickerBody) SetVolume(v string) {
	o.Volume.Set(&v)
}

// SetVolumeNil sets the value for Volume to be an explicit nil
func (o *PiMarketDataDomainModelsResponseTickerBody) SetVolumeNil() {
	o.Volume.Set(nil)
}

// UnsetVolume ensures that no value is present for Volume, not even an explicit nil
func (o *PiMarketDataDomainModelsResponseTickerBody) UnsetVolume() {
	o.Volume.Unset()
}

// GetAmount returns the Amount field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiMarketDataDomainModelsResponseTickerBody) GetAmount() string {
	if o == nil || IsNil(o.Amount.Get()) {
		var ret string
		return ret
	}
	return *o.Amount.Get()
}

// GetAmountOk returns a tuple with the Amount field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiMarketDataDomainModelsResponseTickerBody) GetAmountOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Amount.Get(), o.Amount.IsSet()
}

// HasAmount returns a boolean if a field has been set.
func (o *PiMarketDataDomainModelsResponseTickerBody) HasAmount() bool {
	if o != nil && o.Amount.IsSet() {
		return true
	}

	return false
}

// SetAmount gets a reference to the given NullableString and assigns it to the Amount field.
func (o *PiMarketDataDomainModelsResponseTickerBody) SetAmount(v string) {
	o.Amount.Set(&v)
}

// SetAmountNil sets the value for Amount to be an explicit nil
func (o *PiMarketDataDomainModelsResponseTickerBody) SetAmountNil() {
	o.Amount.Set(nil)
}

// UnsetAmount ensures that no value is present for Amount, not even an explicit nil
func (o *PiMarketDataDomainModelsResponseTickerBody) UnsetAmount() {
	o.Amount.Unset()
}

// GetChangeAmount returns the ChangeAmount field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiMarketDataDomainModelsResponseTickerBody) GetChangeAmount() string {
	if o == nil || IsNil(o.ChangeAmount.Get()) {
		var ret string
		return ret
	}
	return *o.ChangeAmount.Get()
}

// GetChangeAmountOk returns a tuple with the ChangeAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiMarketDataDomainModelsResponseTickerBody) GetChangeAmountOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ChangeAmount.Get(), o.ChangeAmount.IsSet()
}

// HasChangeAmount returns a boolean if a field has been set.
func (o *PiMarketDataDomainModelsResponseTickerBody) HasChangeAmount() bool {
	if o != nil && o.ChangeAmount.IsSet() {
		return true
	}

	return false
}

// SetChangeAmount gets a reference to the given NullableString and assigns it to the ChangeAmount field.
func (o *PiMarketDataDomainModelsResponseTickerBody) SetChangeAmount(v string) {
	o.ChangeAmount.Set(&v)
}

// SetChangeAmountNil sets the value for ChangeAmount to be an explicit nil
func (o *PiMarketDataDomainModelsResponseTickerBody) SetChangeAmountNil() {
	o.ChangeAmount.Set(nil)
}

// UnsetChangeAmount ensures that no value is present for ChangeAmount, not even an explicit nil
func (o *PiMarketDataDomainModelsResponseTickerBody) UnsetChangeAmount() {
	o.ChangeAmount.Unset()
}

// GetChangeVolume returns the ChangeVolume field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiMarketDataDomainModelsResponseTickerBody) GetChangeVolume() string {
	if o == nil || IsNil(o.ChangeVolume.Get()) {
		var ret string
		return ret
	}
	return *o.ChangeVolume.Get()
}

// GetChangeVolumeOk returns a tuple with the ChangeVolume field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiMarketDataDomainModelsResponseTickerBody) GetChangeVolumeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ChangeVolume.Get(), o.ChangeVolume.IsSet()
}

// HasChangeVolume returns a boolean if a field has been set.
func (o *PiMarketDataDomainModelsResponseTickerBody) HasChangeVolume() bool {
	if o != nil && o.ChangeVolume.IsSet() {
		return true
	}

	return false
}

// SetChangeVolume gets a reference to the given NullableString and assigns it to the ChangeVolume field.
func (o *PiMarketDataDomainModelsResponseTickerBody) SetChangeVolume(v string) {
	o.ChangeVolume.Set(&v)
}

// SetChangeVolumeNil sets the value for ChangeVolume to be an explicit nil
func (o *PiMarketDataDomainModelsResponseTickerBody) SetChangeVolumeNil() {
	o.ChangeVolume.Set(nil)
}

// UnsetChangeVolume ensures that no value is present for ChangeVolume, not even an explicit nil
func (o *PiMarketDataDomainModelsResponseTickerBody) UnsetChangeVolume() {
	o.ChangeVolume.Unset()
}

// GetTurnoverRate returns the TurnoverRate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiMarketDataDomainModelsResponseTickerBody) GetTurnoverRate() string {
	if o == nil || IsNil(o.TurnoverRate.Get()) {
		var ret string
		return ret
	}
	return *o.TurnoverRate.Get()
}

// GetTurnoverRateOk returns a tuple with the TurnoverRate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiMarketDataDomainModelsResponseTickerBody) GetTurnoverRateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TurnoverRate.Get(), o.TurnoverRate.IsSet()
}

// HasTurnoverRate returns a boolean if a field has been set.
func (o *PiMarketDataDomainModelsResponseTickerBody) HasTurnoverRate() bool {
	if o != nil && o.TurnoverRate.IsSet() {
		return true
	}

	return false
}

// SetTurnoverRate gets a reference to the given NullableString and assigns it to the TurnoverRate field.
func (o *PiMarketDataDomainModelsResponseTickerBody) SetTurnoverRate(v string) {
	o.TurnoverRate.Set(&v)
}

// SetTurnoverRateNil sets the value for TurnoverRate to be an explicit nil
func (o *PiMarketDataDomainModelsResponseTickerBody) SetTurnoverRateNil() {
	o.TurnoverRate.Set(nil)
}

// UnsetTurnoverRate ensures that no value is present for TurnoverRate, not even an explicit nil
func (o *PiMarketDataDomainModelsResponseTickerBody) UnsetTurnoverRate() {
	o.TurnoverRate.Unset()
}

// GetOpen2 returns the Open2 field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiMarketDataDomainModelsResponseTickerBody) GetOpen2() string {
	if o == nil || IsNil(o.Open2.Get()) {
		var ret string
		return ret
	}
	return *o.Open2.Get()
}

// GetOpen2Ok returns a tuple with the Open2 field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiMarketDataDomainModelsResponseTickerBody) GetOpen2Ok() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Open2.Get(), o.Open2.IsSet()
}

// HasOpen2 returns a boolean if a field has been set.
func (o *PiMarketDataDomainModelsResponseTickerBody) HasOpen2() bool {
	if o != nil && o.Open2.IsSet() {
		return true
	}

	return false
}

// SetOpen2 gets a reference to the given NullableString and assigns it to the Open2 field.
func (o *PiMarketDataDomainModelsResponseTickerBody) SetOpen2(v string) {
	o.Open2.Set(&v)
}

// SetOpen2Nil sets the value for Open2 to be an explicit nil
func (o *PiMarketDataDomainModelsResponseTickerBody) SetOpen2Nil() {
	o.Open2.Set(nil)
}

// UnsetOpen2 ensures that no value is present for Open2, not even an explicit nil
func (o *PiMarketDataDomainModelsResponseTickerBody) UnsetOpen2() {
	o.Open2.Unset()
}

// GetCeiling returns the Ceiling field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiMarketDataDomainModelsResponseTickerBody) GetCeiling() string {
	if o == nil || IsNil(o.Ceiling.Get()) {
		var ret string
		return ret
	}
	return *o.Ceiling.Get()
}

// GetCeilingOk returns a tuple with the Ceiling field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiMarketDataDomainModelsResponseTickerBody) GetCeilingOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Ceiling.Get(), o.Ceiling.IsSet()
}

// HasCeiling returns a boolean if a field has been set.
func (o *PiMarketDataDomainModelsResponseTickerBody) HasCeiling() bool {
	if o != nil && o.Ceiling.IsSet() {
		return true
	}

	return false
}

// SetCeiling gets a reference to the given NullableString and assigns it to the Ceiling field.
func (o *PiMarketDataDomainModelsResponseTickerBody) SetCeiling(v string) {
	o.Ceiling.Set(&v)
}

// SetCeilingNil sets the value for Ceiling to be an explicit nil
func (o *PiMarketDataDomainModelsResponseTickerBody) SetCeilingNil() {
	o.Ceiling.Set(nil)
}

// UnsetCeiling ensures that no value is present for Ceiling, not even an explicit nil
func (o *PiMarketDataDomainModelsResponseTickerBody) UnsetCeiling() {
	o.Ceiling.Unset()
}

// GetFloor returns the Floor field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiMarketDataDomainModelsResponseTickerBody) GetFloor() string {
	if o == nil || IsNil(o.Floor.Get()) {
		var ret string
		return ret
	}
	return *o.Floor.Get()
}

// GetFloorOk returns a tuple with the Floor field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiMarketDataDomainModelsResponseTickerBody) GetFloorOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Floor.Get(), o.Floor.IsSet()
}

// HasFloor returns a boolean if a field has been set.
func (o *PiMarketDataDomainModelsResponseTickerBody) HasFloor() bool {
	if o != nil && o.Floor.IsSet() {
		return true
	}

	return false
}

// SetFloor gets a reference to the given NullableString and assigns it to the Floor field.
func (o *PiMarketDataDomainModelsResponseTickerBody) SetFloor(v string) {
	o.Floor.Set(&v)
}

// SetFloorNil sets the value for Floor to be an explicit nil
func (o *PiMarketDataDomainModelsResponseTickerBody) SetFloorNil() {
	o.Floor.Set(nil)
}

// UnsetFloor ensures that no value is present for Floor, not even an explicit nil
func (o *PiMarketDataDomainModelsResponseTickerBody) UnsetFloor() {
	o.Floor.Unset()
}

// GetAverage returns the Average field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiMarketDataDomainModelsResponseTickerBody) GetAverage() string {
	if o == nil || IsNil(o.Average.Get()) {
		var ret string
		return ret
	}
	return *o.Average.Get()
}

// GetAverageOk returns a tuple with the Average field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiMarketDataDomainModelsResponseTickerBody) GetAverageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Average.Get(), o.Average.IsSet()
}

// HasAverage returns a boolean if a field has been set.
func (o *PiMarketDataDomainModelsResponseTickerBody) HasAverage() bool {
	if o != nil && o.Average.IsSet() {
		return true
	}

	return false
}

// SetAverage gets a reference to the given NullableString and assigns it to the Average field.
func (o *PiMarketDataDomainModelsResponseTickerBody) SetAverage(v string) {
	o.Average.Set(&v)
}

// SetAverageNil sets the value for Average to be an explicit nil
func (o *PiMarketDataDomainModelsResponseTickerBody) SetAverageNil() {
	o.Average.Set(nil)
}

// UnsetAverage ensures that no value is present for Average, not even an explicit nil
func (o *PiMarketDataDomainModelsResponseTickerBody) UnsetAverage() {
	o.Average.Unset()
}

// GetAverageBuy returns the AverageBuy field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiMarketDataDomainModelsResponseTickerBody) GetAverageBuy() string {
	if o == nil || IsNil(o.AverageBuy.Get()) {
		var ret string
		return ret
	}
	return *o.AverageBuy.Get()
}

// GetAverageBuyOk returns a tuple with the AverageBuy field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiMarketDataDomainModelsResponseTickerBody) GetAverageBuyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AverageBuy.Get(), o.AverageBuy.IsSet()
}

// HasAverageBuy returns a boolean if a field has been set.
func (o *PiMarketDataDomainModelsResponseTickerBody) HasAverageBuy() bool {
	if o != nil && o.AverageBuy.IsSet() {
		return true
	}

	return false
}

// SetAverageBuy gets a reference to the given NullableString and assigns it to the AverageBuy field.
func (o *PiMarketDataDomainModelsResponseTickerBody) SetAverageBuy(v string) {
	o.AverageBuy.Set(&v)
}

// SetAverageBuyNil sets the value for AverageBuy to be an explicit nil
func (o *PiMarketDataDomainModelsResponseTickerBody) SetAverageBuyNil() {
	o.AverageBuy.Set(nil)
}

// UnsetAverageBuy ensures that no value is present for AverageBuy, not even an explicit nil
func (o *PiMarketDataDomainModelsResponseTickerBody) UnsetAverageBuy() {
	o.AverageBuy.Unset()
}

// GetAverageSell returns the AverageSell field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiMarketDataDomainModelsResponseTickerBody) GetAverageSell() string {
	if o == nil || IsNil(o.AverageSell.Get()) {
		var ret string
		return ret
	}
	return *o.AverageSell.Get()
}

// GetAverageSellOk returns a tuple with the AverageSell field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiMarketDataDomainModelsResponseTickerBody) GetAverageSellOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AverageSell.Get(), o.AverageSell.IsSet()
}

// HasAverageSell returns a boolean if a field has been set.
func (o *PiMarketDataDomainModelsResponseTickerBody) HasAverageSell() bool {
	if o != nil && o.AverageSell.IsSet() {
		return true
	}

	return false
}

// SetAverageSell gets a reference to the given NullableString and assigns it to the AverageSell field.
func (o *PiMarketDataDomainModelsResponseTickerBody) SetAverageSell(v string) {
	o.AverageSell.Set(&v)
}

// SetAverageSellNil sets the value for AverageSell to be an explicit nil
func (o *PiMarketDataDomainModelsResponseTickerBody) SetAverageSellNil() {
	o.AverageSell.Set(nil)
}

// UnsetAverageSell ensures that no value is present for AverageSell, not even an explicit nil
func (o *PiMarketDataDomainModelsResponseTickerBody) UnsetAverageSell() {
	o.AverageSell.Unset()
}

// GetAggressor returns the Aggressor field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiMarketDataDomainModelsResponseTickerBody) GetAggressor() string {
	if o == nil || IsNil(o.Aggressor.Get()) {
		var ret string
		return ret
	}
	return *o.Aggressor.Get()
}

// GetAggressorOk returns a tuple with the Aggressor field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiMarketDataDomainModelsResponseTickerBody) GetAggressorOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Aggressor.Get(), o.Aggressor.IsSet()
}

// HasAggressor returns a boolean if a field has been set.
func (o *PiMarketDataDomainModelsResponseTickerBody) HasAggressor() bool {
	if o != nil && o.Aggressor.IsSet() {
		return true
	}

	return false
}

// SetAggressor gets a reference to the given NullableString and assigns it to the Aggressor field.
func (o *PiMarketDataDomainModelsResponseTickerBody) SetAggressor(v string) {
	o.Aggressor.Set(&v)
}

// SetAggressorNil sets the value for Aggressor to be an explicit nil
func (o *PiMarketDataDomainModelsResponseTickerBody) SetAggressorNil() {
	o.Aggressor.Set(nil)
}

// UnsetAggressor ensures that no value is present for Aggressor, not even an explicit nil
func (o *PiMarketDataDomainModelsResponseTickerBody) UnsetAggressor() {
	o.Aggressor.Unset()
}

// GetPreClose returns the PreClose field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiMarketDataDomainModelsResponseTickerBody) GetPreClose() string {
	if o == nil || IsNil(o.PreClose.Get()) {
		var ret string
		return ret
	}
	return *o.PreClose.Get()
}

// GetPreCloseOk returns a tuple with the PreClose field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiMarketDataDomainModelsResponseTickerBody) GetPreCloseOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PreClose.Get(), o.PreClose.IsSet()
}

// HasPreClose returns a boolean if a field has been set.
func (o *PiMarketDataDomainModelsResponseTickerBody) HasPreClose() bool {
	if o != nil && o.PreClose.IsSet() {
		return true
	}

	return false
}

// SetPreClose gets a reference to the given NullableString and assigns it to the PreClose field.
func (o *PiMarketDataDomainModelsResponseTickerBody) SetPreClose(v string) {
	o.PreClose.Set(&v)
}

// SetPreCloseNil sets the value for PreClose to be an explicit nil
func (o *PiMarketDataDomainModelsResponseTickerBody) SetPreCloseNil() {
	o.PreClose.Set(nil)
}

// UnsetPreClose ensures that no value is present for PreClose, not even an explicit nil
func (o *PiMarketDataDomainModelsResponseTickerBody) UnsetPreClose() {
	o.PreClose.Unset()
}

// GetStatus returns the Status field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiMarketDataDomainModelsResponseTickerBody) GetStatus() string {
	if o == nil || IsNil(o.Status.Get()) {
		var ret string
		return ret
	}
	return *o.Status.Get()
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiMarketDataDomainModelsResponseTickerBody) GetStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Status.Get(), o.Status.IsSet()
}

// HasStatus returns a boolean if a field has been set.
func (o *PiMarketDataDomainModelsResponseTickerBody) HasStatus() bool {
	if o != nil && o.Status.IsSet() {
		return true
	}

	return false
}

// SetStatus gets a reference to the given NullableString and assigns it to the Status field.
func (o *PiMarketDataDomainModelsResponseTickerBody) SetStatus(v string) {
	o.Status.Set(&v)
}

// SetStatusNil sets the value for Status to be an explicit nil
func (o *PiMarketDataDomainModelsResponseTickerBody) SetStatusNil() {
	o.Status.Set(nil)
}

// UnsetStatus ensures that no value is present for Status, not even an explicit nil
func (o *PiMarketDataDomainModelsResponseTickerBody) UnsetStatus() {
	o.Status.Unset()
}

// GetYield returns the Yield field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiMarketDataDomainModelsResponseTickerBody) GetYield() string {
	if o == nil || IsNil(o.Yield.Get()) {
		var ret string
		return ret
	}
	return *o.Yield.Get()
}

// GetYieldOk returns a tuple with the Yield field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiMarketDataDomainModelsResponseTickerBody) GetYieldOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Yield.Get(), o.Yield.IsSet()
}

// HasYield returns a boolean if a field has been set.
func (o *PiMarketDataDomainModelsResponseTickerBody) HasYield() bool {
	if o != nil && o.Yield.IsSet() {
		return true
	}

	return false
}

// SetYield gets a reference to the given NullableString and assigns it to the Yield field.
func (o *PiMarketDataDomainModelsResponseTickerBody) SetYield(v string) {
	o.Yield.Set(&v)
}

// SetYieldNil sets the value for Yield to be an explicit nil
func (o *PiMarketDataDomainModelsResponseTickerBody) SetYieldNil() {
	o.Yield.Set(nil)
}

// UnsetYield ensures that no value is present for Yield, not even an explicit nil
func (o *PiMarketDataDomainModelsResponseTickerBody) UnsetYield() {
	o.Yield.Unset()
}

// GetPe returns the Pe field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiMarketDataDomainModelsResponseTickerBody) GetPe() string {
	if o == nil || IsNil(o.Pe.Get()) {
		var ret string
		return ret
	}
	return *o.Pe.Get()
}

// GetPeOk returns a tuple with the Pe field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiMarketDataDomainModelsResponseTickerBody) GetPeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Pe.Get(), o.Pe.IsSet()
}

// HasPe returns a boolean if a field has been set.
func (o *PiMarketDataDomainModelsResponseTickerBody) HasPe() bool {
	if o != nil && o.Pe.IsSet() {
		return true
	}

	return false
}

// SetPe gets a reference to the given NullableString and assigns it to the Pe field.
func (o *PiMarketDataDomainModelsResponseTickerBody) SetPe(v string) {
	o.Pe.Set(&v)
}

// SetPeNil sets the value for Pe to be an explicit nil
func (o *PiMarketDataDomainModelsResponseTickerBody) SetPeNil() {
	o.Pe.Set(nil)
}

// UnsetPe ensures that no value is present for Pe, not even an explicit nil
func (o *PiMarketDataDomainModelsResponseTickerBody) UnsetPe() {
	o.Pe.Unset()
}

// GetPb returns the Pb field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiMarketDataDomainModelsResponseTickerBody) GetPb() string {
	if o == nil || IsNil(o.Pb.Get()) {
		var ret string
		return ret
	}
	return *o.Pb.Get()
}

// GetPbOk returns a tuple with the Pb field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiMarketDataDomainModelsResponseTickerBody) GetPbOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Pb.Get(), o.Pb.IsSet()
}

// HasPb returns a boolean if a field has been set.
func (o *PiMarketDataDomainModelsResponseTickerBody) HasPb() bool {
	if o != nil && o.Pb.IsSet() {
		return true
	}

	return false
}

// SetPb gets a reference to the given NullableString and assigns it to the Pb field.
func (o *PiMarketDataDomainModelsResponseTickerBody) SetPb(v string) {
	o.Pb.Set(&v)
}

// SetPbNil sets the value for Pb to be an explicit nil
func (o *PiMarketDataDomainModelsResponseTickerBody) SetPbNil() {
	o.Pb.Set(nil)
}

// UnsetPb ensures that no value is present for Pb, not even an explicit nil
func (o *PiMarketDataDomainModelsResponseTickerBody) UnsetPb() {
	o.Pb.Unset()
}

// GetTotalAmount returns the TotalAmount field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiMarketDataDomainModelsResponseTickerBody) GetTotalAmount() string {
	if o == nil || IsNil(o.TotalAmount.Get()) {
		var ret string
		return ret
	}
	return *o.TotalAmount.Get()
}

// GetTotalAmountOk returns a tuple with the TotalAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiMarketDataDomainModelsResponseTickerBody) GetTotalAmountOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TotalAmount.Get(), o.TotalAmount.IsSet()
}

// HasTotalAmount returns a boolean if a field has been set.
func (o *PiMarketDataDomainModelsResponseTickerBody) HasTotalAmount() bool {
	if o != nil && o.TotalAmount.IsSet() {
		return true
	}

	return false
}

// SetTotalAmount gets a reference to the given NullableString and assigns it to the TotalAmount field.
func (o *PiMarketDataDomainModelsResponseTickerBody) SetTotalAmount(v string) {
	o.TotalAmount.Set(&v)
}

// SetTotalAmountNil sets the value for TotalAmount to be an explicit nil
func (o *PiMarketDataDomainModelsResponseTickerBody) SetTotalAmountNil() {
	o.TotalAmount.Set(nil)
}

// UnsetTotalAmount ensures that no value is present for TotalAmount, not even an explicit nil
func (o *PiMarketDataDomainModelsResponseTickerBody) UnsetTotalAmount() {
	o.TotalAmount.Unset()
}

// GetTotalAmountK returns the TotalAmountK field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiMarketDataDomainModelsResponseTickerBody) GetTotalAmountK() string {
	if o == nil || IsNil(o.TotalAmountK.Get()) {
		var ret string
		return ret
	}
	return *o.TotalAmountK.Get()
}

// GetTotalAmountKOk returns a tuple with the TotalAmountK field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiMarketDataDomainModelsResponseTickerBody) GetTotalAmountKOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TotalAmountK.Get(), o.TotalAmountK.IsSet()
}

// HasTotalAmountK returns a boolean if a field has been set.
func (o *PiMarketDataDomainModelsResponseTickerBody) HasTotalAmountK() bool {
	if o != nil && o.TotalAmountK.IsSet() {
		return true
	}

	return false
}

// SetTotalAmountK gets a reference to the given NullableString and assigns it to the TotalAmountK field.
func (o *PiMarketDataDomainModelsResponseTickerBody) SetTotalAmountK(v string) {
	o.TotalAmountK.Set(&v)
}

// SetTotalAmountKNil sets the value for TotalAmountK to be an explicit nil
func (o *PiMarketDataDomainModelsResponseTickerBody) SetTotalAmountKNil() {
	o.TotalAmountK.Set(nil)
}

// UnsetTotalAmountK ensures that no value is present for TotalAmountK, not even an explicit nil
func (o *PiMarketDataDomainModelsResponseTickerBody) UnsetTotalAmountK() {
	o.TotalAmountK.Unset()
}

// GetTotalVolume returns the TotalVolume field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiMarketDataDomainModelsResponseTickerBody) GetTotalVolume() string {
	if o == nil || IsNil(o.TotalVolume.Get()) {
		var ret string
		return ret
	}
	return *o.TotalVolume.Get()
}

// GetTotalVolumeOk returns a tuple with the TotalVolume field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiMarketDataDomainModelsResponseTickerBody) GetTotalVolumeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TotalVolume.Get(), o.TotalVolume.IsSet()
}

// HasTotalVolume returns a boolean if a field has been set.
func (o *PiMarketDataDomainModelsResponseTickerBody) HasTotalVolume() bool {
	if o != nil && o.TotalVolume.IsSet() {
		return true
	}

	return false
}

// SetTotalVolume gets a reference to the given NullableString and assigns it to the TotalVolume field.
func (o *PiMarketDataDomainModelsResponseTickerBody) SetTotalVolume(v string) {
	o.TotalVolume.Set(&v)
}

// SetTotalVolumeNil sets the value for TotalVolume to be an explicit nil
func (o *PiMarketDataDomainModelsResponseTickerBody) SetTotalVolumeNil() {
	o.TotalVolume.Set(nil)
}

// UnsetTotalVolume ensures that no value is present for TotalVolume, not even an explicit nil
func (o *PiMarketDataDomainModelsResponseTickerBody) UnsetTotalVolume() {
	o.TotalVolume.Unset()
}

// GetTotalVolumeK returns the TotalVolumeK field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiMarketDataDomainModelsResponseTickerBody) GetTotalVolumeK() string {
	if o == nil || IsNil(o.TotalVolumeK.Get()) {
		var ret string
		return ret
	}
	return *o.TotalVolumeK.Get()
}

// GetTotalVolumeKOk returns a tuple with the TotalVolumeK field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiMarketDataDomainModelsResponseTickerBody) GetTotalVolumeKOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TotalVolumeK.Get(), o.TotalVolumeK.IsSet()
}

// HasTotalVolumeK returns a boolean if a field has been set.
func (o *PiMarketDataDomainModelsResponseTickerBody) HasTotalVolumeK() bool {
	if o != nil && o.TotalVolumeK.IsSet() {
		return true
	}

	return false
}

// SetTotalVolumeK gets a reference to the given NullableString and assigns it to the TotalVolumeK field.
func (o *PiMarketDataDomainModelsResponseTickerBody) SetTotalVolumeK(v string) {
	o.TotalVolumeK.Set(&v)
}

// SetTotalVolumeKNil sets the value for TotalVolumeK to be an explicit nil
func (o *PiMarketDataDomainModelsResponseTickerBody) SetTotalVolumeKNil() {
	o.TotalVolumeK.Set(nil)
}

// UnsetTotalVolumeK ensures that no value is present for TotalVolumeK, not even an explicit nil
func (o *PiMarketDataDomainModelsResponseTickerBody) UnsetTotalVolumeK() {
	o.TotalVolumeK.Unset()
}

// GetTradableEquity returns the TradableEquity field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiMarketDataDomainModelsResponseTickerBody) GetTradableEquity() string {
	if o == nil || IsNil(o.TradableEquity.Get()) {
		var ret string
		return ret
	}
	return *o.TradableEquity.Get()
}

// GetTradableEquityOk returns a tuple with the TradableEquity field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiMarketDataDomainModelsResponseTickerBody) GetTradableEquityOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TradableEquity.Get(), o.TradableEquity.IsSet()
}

// HasTradableEquity returns a boolean if a field has been set.
func (o *PiMarketDataDomainModelsResponseTickerBody) HasTradableEquity() bool {
	if o != nil && o.TradableEquity.IsSet() {
		return true
	}

	return false
}

// SetTradableEquity gets a reference to the given NullableString and assigns it to the TradableEquity field.
func (o *PiMarketDataDomainModelsResponseTickerBody) SetTradableEquity(v string) {
	o.TradableEquity.Set(&v)
}

// SetTradableEquityNil sets the value for TradableEquity to be an explicit nil
func (o *PiMarketDataDomainModelsResponseTickerBody) SetTradableEquityNil() {
	o.TradableEquity.Set(nil)
}

// UnsetTradableEquity ensures that no value is present for TradableEquity, not even an explicit nil
func (o *PiMarketDataDomainModelsResponseTickerBody) UnsetTradableEquity() {
	o.TradableEquity.Unset()
}

// GetTradableAmount returns the TradableAmount field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiMarketDataDomainModelsResponseTickerBody) GetTradableAmount() string {
	if o == nil || IsNil(o.TradableAmount.Get()) {
		var ret string
		return ret
	}
	return *o.TradableAmount.Get()
}

// GetTradableAmountOk returns a tuple with the TradableAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiMarketDataDomainModelsResponseTickerBody) GetTradableAmountOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TradableAmount.Get(), o.TradableAmount.IsSet()
}

// HasTradableAmount returns a boolean if a field has been set.
func (o *PiMarketDataDomainModelsResponseTickerBody) HasTradableAmount() bool {
	if o != nil && o.TradableAmount.IsSet() {
		return true
	}

	return false
}

// SetTradableAmount gets a reference to the given NullableString and assigns it to the TradableAmount field.
func (o *PiMarketDataDomainModelsResponseTickerBody) SetTradableAmount(v string) {
	o.TradableAmount.Set(&v)
}

// SetTradableAmountNil sets the value for TradableAmount to be an explicit nil
func (o *PiMarketDataDomainModelsResponseTickerBody) SetTradableAmountNil() {
	o.TradableAmount.Set(nil)
}

// UnsetTradableAmount ensures that no value is present for TradableAmount, not even an explicit nil
func (o *PiMarketDataDomainModelsResponseTickerBody) UnsetTradableAmount() {
	o.TradableAmount.Unset()
}

// GetEps returns the Eps field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiMarketDataDomainModelsResponseTickerBody) GetEps() string {
	if o == nil || IsNil(o.Eps.Get()) {
		var ret string
		return ret
	}
	return *o.Eps.Get()
}

// GetEpsOk returns a tuple with the Eps field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiMarketDataDomainModelsResponseTickerBody) GetEpsOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Eps.Get(), o.Eps.IsSet()
}

// HasEps returns a boolean if a field has been set.
func (o *PiMarketDataDomainModelsResponseTickerBody) HasEps() bool {
	if o != nil && o.Eps.IsSet() {
		return true
	}

	return false
}

// SetEps gets a reference to the given NullableString and assigns it to the Eps field.
func (o *PiMarketDataDomainModelsResponseTickerBody) SetEps(v string) {
	o.Eps.Set(&v)
}

// SetEpsNil sets the value for Eps to be an explicit nil
func (o *PiMarketDataDomainModelsResponseTickerBody) SetEpsNil() {
	o.Eps.Set(nil)
}

// UnsetEps ensures that no value is present for Eps, not even an explicit nil
func (o *PiMarketDataDomainModelsResponseTickerBody) UnsetEps() {
	o.Eps.Unset()
}

// GetPublicTrades returns the PublicTrades field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiMarketDataDomainModelsResponseTickerBody) GetPublicTrades() [][]interface{} {
	if o == nil {
		var ret [][]interface{}
		return ret
	}
	return o.PublicTrades
}

// GetPublicTradesOk returns a tuple with the PublicTrades field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiMarketDataDomainModelsResponseTickerBody) GetPublicTradesOk() ([][]interface{}, bool) {
	if o == nil || IsNil(o.PublicTrades) {
		return nil, false
	}
	return o.PublicTrades, true
}

// HasPublicTrades returns a boolean if a field has been set.
func (o *PiMarketDataDomainModelsResponseTickerBody) HasPublicTrades() bool {
	if o != nil && !IsNil(o.PublicTrades) {
		return true
	}

	return false
}

// SetPublicTrades gets a reference to the given [][]interface{} and assigns it to the PublicTrades field.
func (o *PiMarketDataDomainModelsResponseTickerBody) SetPublicTrades(v [][]interface{}) {
	o.PublicTrades = v
}

// GetOrderBook returns the OrderBook field value if set, zero value otherwise.
func (o *PiMarketDataDomainModelsResponseTickerBody) GetOrderBook() PiMarketDataDomainModelsResponseTickerOrderBook {
	if o == nil || IsNil(o.OrderBook) {
		var ret PiMarketDataDomainModelsResponseTickerOrderBook
		return ret
	}
	return *o.OrderBook
}

// GetOrderBookOk returns a tuple with the OrderBook field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PiMarketDataDomainModelsResponseTickerBody) GetOrderBookOk() (*PiMarketDataDomainModelsResponseTickerOrderBook, bool) {
	if o == nil || IsNil(o.OrderBook) {
		return nil, false
	}
	return o.OrderBook, true
}

// HasOrderBook returns a boolean if a field has been set.
func (o *PiMarketDataDomainModelsResponseTickerBody) HasOrderBook() bool {
	if o != nil && !IsNil(o.OrderBook) {
		return true
	}

	return false
}

// SetOrderBook gets a reference to the given PiMarketDataDomainModelsResponseTickerOrderBook and assigns it to the OrderBook field.
func (o *PiMarketDataDomainModelsResponseTickerBody) SetOrderBook(v PiMarketDataDomainModelsResponseTickerOrderBook) {
	o.OrderBook = &v
}

// GetSecurityType returns the SecurityType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiMarketDataDomainModelsResponseTickerBody) GetSecurityType() string {
	if o == nil || IsNil(o.SecurityType.Get()) {
		var ret string
		return ret
	}
	return *o.SecurityType.Get()
}

// GetSecurityTypeOk returns a tuple with the SecurityType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiMarketDataDomainModelsResponseTickerBody) GetSecurityTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SecurityType.Get(), o.SecurityType.IsSet()
}

// HasSecurityType returns a boolean if a field has been set.
func (o *PiMarketDataDomainModelsResponseTickerBody) HasSecurityType() bool {
	if o != nil && o.SecurityType.IsSet() {
		return true
	}

	return false
}

// SetSecurityType gets a reference to the given NullableString and assigns it to the SecurityType field.
func (o *PiMarketDataDomainModelsResponseTickerBody) SetSecurityType(v string) {
	o.SecurityType.Set(&v)
}

// SetSecurityTypeNil sets the value for SecurityType to be an explicit nil
func (o *PiMarketDataDomainModelsResponseTickerBody) SetSecurityTypeNil() {
	o.SecurityType.Set(nil)
}

// UnsetSecurityType ensures that no value is present for SecurityType, not even an explicit nil
func (o *PiMarketDataDomainModelsResponseTickerBody) UnsetSecurityType() {
	o.SecurityType.Unset()
}

// GetInstrumentType returns the InstrumentType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiMarketDataDomainModelsResponseTickerBody) GetInstrumentType() string {
	if o == nil || IsNil(o.InstrumentType.Get()) {
		var ret string
		return ret
	}
	return *o.InstrumentType.Get()
}

// GetInstrumentTypeOk returns a tuple with the InstrumentType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiMarketDataDomainModelsResponseTickerBody) GetInstrumentTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.InstrumentType.Get(), o.InstrumentType.IsSet()
}

// HasInstrumentType returns a boolean if a field has been set.
func (o *PiMarketDataDomainModelsResponseTickerBody) HasInstrumentType() bool {
	if o != nil && o.InstrumentType.IsSet() {
		return true
	}

	return false
}

// SetInstrumentType gets a reference to the given NullableString and assigns it to the InstrumentType field.
func (o *PiMarketDataDomainModelsResponseTickerBody) SetInstrumentType(v string) {
	o.InstrumentType.Set(&v)
}

// SetInstrumentTypeNil sets the value for InstrumentType to be an explicit nil
func (o *PiMarketDataDomainModelsResponseTickerBody) SetInstrumentTypeNil() {
	o.InstrumentType.Set(nil)
}

// UnsetInstrumentType ensures that no value is present for InstrumentType, not even an explicit nil
func (o *PiMarketDataDomainModelsResponseTickerBody) UnsetInstrumentType() {
	o.InstrumentType.Unset()
}

// GetMarket returns the Market field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiMarketDataDomainModelsResponseTickerBody) GetMarket() string {
	if o == nil || IsNil(o.Market.Get()) {
		var ret string
		return ret
	}
	return *o.Market.Get()
}

// GetMarketOk returns a tuple with the Market field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiMarketDataDomainModelsResponseTickerBody) GetMarketOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Market.Get(), o.Market.IsSet()
}

// HasMarket returns a boolean if a field has been set.
func (o *PiMarketDataDomainModelsResponseTickerBody) HasMarket() bool {
	if o != nil && o.Market.IsSet() {
		return true
	}

	return false
}

// SetMarket gets a reference to the given NullableString and assigns it to the Market field.
func (o *PiMarketDataDomainModelsResponseTickerBody) SetMarket(v string) {
	o.Market.Set(&v)
}

// SetMarketNil sets the value for Market to be an explicit nil
func (o *PiMarketDataDomainModelsResponseTickerBody) SetMarketNil() {
	o.Market.Set(nil)
}

// UnsetMarket ensures that no value is present for Market, not even an explicit nil
func (o *PiMarketDataDomainModelsResponseTickerBody) UnsetMarket() {
	o.Market.Unset()
}

// GetLastTrade returns the LastTrade field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiMarketDataDomainModelsResponseTickerBody) GetLastTrade() string {
	if o == nil || IsNil(o.LastTrade.Get()) {
		var ret string
		return ret
	}
	return *o.LastTrade.Get()
}

// GetLastTradeOk returns a tuple with the LastTrade field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiMarketDataDomainModelsResponseTickerBody) GetLastTradeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.LastTrade.Get(), o.LastTrade.IsSet()
}

// HasLastTrade returns a boolean if a field has been set.
func (o *PiMarketDataDomainModelsResponseTickerBody) HasLastTrade() bool {
	if o != nil && o.LastTrade.IsSet() {
		return true
	}

	return false
}

// SetLastTrade gets a reference to the given NullableString and assigns it to the LastTrade field.
func (o *PiMarketDataDomainModelsResponseTickerBody) SetLastTrade(v string) {
	o.LastTrade.Set(&v)
}

// SetLastTradeNil sets the value for LastTrade to be an explicit nil
func (o *PiMarketDataDomainModelsResponseTickerBody) SetLastTradeNil() {
	o.LastTrade.Set(nil)
}

// UnsetLastTrade ensures that no value is present for LastTrade, not even an explicit nil
func (o *PiMarketDataDomainModelsResponseTickerBody) UnsetLastTrade() {
	o.LastTrade.Unset()
}

// GetToLastTrade returns the ToLastTrade field value if set, zero value otherwise.
func (o *PiMarketDataDomainModelsResponseTickerBody) GetToLastTrade() int32 {
	if o == nil || IsNil(o.ToLastTrade) {
		var ret int32
		return ret
	}
	return *o.ToLastTrade
}

// GetToLastTradeOk returns a tuple with the ToLastTrade field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PiMarketDataDomainModelsResponseTickerBody) GetToLastTradeOk() (*int32, bool) {
	if o == nil || IsNil(o.ToLastTrade) {
		return nil, false
	}
	return o.ToLastTrade, true
}

// HasToLastTrade returns a boolean if a field has been set.
func (o *PiMarketDataDomainModelsResponseTickerBody) HasToLastTrade() bool {
	if o != nil && !IsNil(o.ToLastTrade) {
		return true
	}

	return false
}

// SetToLastTrade gets a reference to the given int32 and assigns it to the ToLastTrade field.
func (o *PiMarketDataDomainModelsResponseTickerBody) SetToLastTrade(v int32) {
	o.ToLastTrade = &v
}

// GetMoneyness returns the Moneyness field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiMarketDataDomainModelsResponseTickerBody) GetMoneyness() string {
	if o == nil || IsNil(o.Moneyness.Get()) {
		var ret string
		return ret
	}
	return *o.Moneyness.Get()
}

// GetMoneynessOk returns a tuple with the Moneyness field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiMarketDataDomainModelsResponseTickerBody) GetMoneynessOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Moneyness.Get(), o.Moneyness.IsSet()
}

// HasMoneyness returns a boolean if a field has been set.
func (o *PiMarketDataDomainModelsResponseTickerBody) HasMoneyness() bool {
	if o != nil && o.Moneyness.IsSet() {
		return true
	}

	return false
}

// SetMoneyness gets a reference to the given NullableString and assigns it to the Moneyness field.
func (o *PiMarketDataDomainModelsResponseTickerBody) SetMoneyness(v string) {
	o.Moneyness.Set(&v)
}

// SetMoneynessNil sets the value for Moneyness to be an explicit nil
func (o *PiMarketDataDomainModelsResponseTickerBody) SetMoneynessNil() {
	o.Moneyness.Set(nil)
}

// UnsetMoneyness ensures that no value is present for Moneyness, not even an explicit nil
func (o *PiMarketDataDomainModelsResponseTickerBody) UnsetMoneyness() {
	o.Moneyness.Unset()
}

// GetMaturityDate returns the MaturityDate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiMarketDataDomainModelsResponseTickerBody) GetMaturityDate() string {
	if o == nil || IsNil(o.MaturityDate.Get()) {
		var ret string
		return ret
	}
	return *o.MaturityDate.Get()
}

// GetMaturityDateOk returns a tuple with the MaturityDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiMarketDataDomainModelsResponseTickerBody) GetMaturityDateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.MaturityDate.Get(), o.MaturityDate.IsSet()
}

// HasMaturityDate returns a boolean if a field has been set.
func (o *PiMarketDataDomainModelsResponseTickerBody) HasMaturityDate() bool {
	if o != nil && o.MaturityDate.IsSet() {
		return true
	}

	return false
}

// SetMaturityDate gets a reference to the given NullableString and assigns it to the MaturityDate field.
func (o *PiMarketDataDomainModelsResponseTickerBody) SetMaturityDate(v string) {
	o.MaturityDate.Set(&v)
}

// SetMaturityDateNil sets the value for MaturityDate to be an explicit nil
func (o *PiMarketDataDomainModelsResponseTickerBody) SetMaturityDateNil() {
	o.MaturityDate.Set(nil)
}

// UnsetMaturityDate ensures that no value is present for MaturityDate, not even an explicit nil
func (o *PiMarketDataDomainModelsResponseTickerBody) UnsetMaturityDate() {
	o.MaturityDate.Unset()
}

// GetMultiplier returns the Multiplier field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiMarketDataDomainModelsResponseTickerBody) GetMultiplier() string {
	if o == nil || IsNil(o.Multiplier.Get()) {
		var ret string
		return ret
	}
	return *o.Multiplier.Get()
}

// GetMultiplierOk returns a tuple with the Multiplier field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiMarketDataDomainModelsResponseTickerBody) GetMultiplierOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Multiplier.Get(), o.Multiplier.IsSet()
}

// HasMultiplier returns a boolean if a field has been set.
func (o *PiMarketDataDomainModelsResponseTickerBody) HasMultiplier() bool {
	if o != nil && o.Multiplier.IsSet() {
		return true
	}

	return false
}

// SetMultiplier gets a reference to the given NullableString and assigns it to the Multiplier field.
func (o *PiMarketDataDomainModelsResponseTickerBody) SetMultiplier(v string) {
	o.Multiplier.Set(&v)
}

// SetMultiplierNil sets the value for Multiplier to be an explicit nil
func (o *PiMarketDataDomainModelsResponseTickerBody) SetMultiplierNil() {
	o.Multiplier.Set(nil)
}

// UnsetMultiplier ensures that no value is present for Multiplier, not even an explicit nil
func (o *PiMarketDataDomainModelsResponseTickerBody) UnsetMultiplier() {
	o.Multiplier.Unset()
}

// GetExercisePrice returns the ExercisePrice field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiMarketDataDomainModelsResponseTickerBody) GetExercisePrice() string {
	if o == nil || IsNil(o.ExercisePrice.Get()) {
		var ret string
		return ret
	}
	return *o.ExercisePrice.Get()
}

// GetExercisePriceOk returns a tuple with the ExercisePrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiMarketDataDomainModelsResponseTickerBody) GetExercisePriceOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ExercisePrice.Get(), o.ExercisePrice.IsSet()
}

// HasExercisePrice returns a boolean if a field has been set.
func (o *PiMarketDataDomainModelsResponseTickerBody) HasExercisePrice() bool {
	if o != nil && o.ExercisePrice.IsSet() {
		return true
	}

	return false
}

// SetExercisePrice gets a reference to the given NullableString and assigns it to the ExercisePrice field.
func (o *PiMarketDataDomainModelsResponseTickerBody) SetExercisePrice(v string) {
	o.ExercisePrice.Set(&v)
}

// SetExercisePriceNil sets the value for ExercisePrice to be an explicit nil
func (o *PiMarketDataDomainModelsResponseTickerBody) SetExercisePriceNil() {
	o.ExercisePrice.Set(nil)
}

// UnsetExercisePrice ensures that no value is present for ExercisePrice, not even an explicit nil
func (o *PiMarketDataDomainModelsResponseTickerBody) UnsetExercisePrice() {
	o.ExercisePrice.Unset()
}

// GetIntrinsicValue returns the IntrinsicValue field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiMarketDataDomainModelsResponseTickerBody) GetIntrinsicValue() string {
	if o == nil || IsNil(o.IntrinsicValue.Get()) {
		var ret string
		return ret
	}
	return *o.IntrinsicValue.Get()
}

// GetIntrinsicValueOk returns a tuple with the IntrinsicValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiMarketDataDomainModelsResponseTickerBody) GetIntrinsicValueOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.IntrinsicValue.Get(), o.IntrinsicValue.IsSet()
}

// HasIntrinsicValue returns a boolean if a field has been set.
func (o *PiMarketDataDomainModelsResponseTickerBody) HasIntrinsicValue() bool {
	if o != nil && o.IntrinsicValue.IsSet() {
		return true
	}

	return false
}

// SetIntrinsicValue gets a reference to the given NullableString and assigns it to the IntrinsicValue field.
func (o *PiMarketDataDomainModelsResponseTickerBody) SetIntrinsicValue(v string) {
	o.IntrinsicValue.Set(&v)
}

// SetIntrinsicValueNil sets the value for IntrinsicValue to be an explicit nil
func (o *PiMarketDataDomainModelsResponseTickerBody) SetIntrinsicValueNil() {
	o.IntrinsicValue.Set(nil)
}

// UnsetIntrinsicValue ensures that no value is present for IntrinsicValue, not even an explicit nil
func (o *PiMarketDataDomainModelsResponseTickerBody) UnsetIntrinsicValue() {
	o.IntrinsicValue.Unset()
}

// GetPSettle returns the PSettle field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiMarketDataDomainModelsResponseTickerBody) GetPSettle() string {
	if o == nil || IsNil(o.PSettle.Get()) {
		var ret string
		return ret
	}
	return *o.PSettle.Get()
}

// GetPSettleOk returns a tuple with the PSettle field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiMarketDataDomainModelsResponseTickerBody) GetPSettleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PSettle.Get(), o.PSettle.IsSet()
}

// HasPSettle returns a boolean if a field has been set.
func (o *PiMarketDataDomainModelsResponseTickerBody) HasPSettle() bool {
	if o != nil && o.PSettle.IsSet() {
		return true
	}

	return false
}

// SetPSettle gets a reference to the given NullableString and assigns it to the PSettle field.
func (o *PiMarketDataDomainModelsResponseTickerBody) SetPSettle(v string) {
	o.PSettle.Set(&v)
}

// SetPSettleNil sets the value for PSettle to be an explicit nil
func (o *PiMarketDataDomainModelsResponseTickerBody) SetPSettleNil() {
	o.PSettle.Set(nil)
}

// UnsetPSettle ensures that no value is present for PSettle, not even an explicit nil
func (o *PiMarketDataDomainModelsResponseTickerBody) UnsetPSettle() {
	o.PSettle.Unset()
}

// GetPoi returns the Poi field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiMarketDataDomainModelsResponseTickerBody) GetPoi() string {
	if o == nil || IsNil(o.Poi.Get()) {
		var ret string
		return ret
	}
	return *o.Poi.Get()
}

// GetPoiOk returns a tuple with the Poi field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiMarketDataDomainModelsResponseTickerBody) GetPoiOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Poi.Get(), o.Poi.IsSet()
}

// HasPoi returns a boolean if a field has been set.
func (o *PiMarketDataDomainModelsResponseTickerBody) HasPoi() bool {
	if o != nil && o.Poi.IsSet() {
		return true
	}

	return false
}

// SetPoi gets a reference to the given NullableString and assigns it to the Poi field.
func (o *PiMarketDataDomainModelsResponseTickerBody) SetPoi(v string) {
	o.Poi.Set(&v)
}

// SetPoiNil sets the value for Poi to be an explicit nil
func (o *PiMarketDataDomainModelsResponseTickerBody) SetPoiNil() {
	o.Poi.Set(nil)
}

// UnsetPoi ensures that no value is present for Poi, not even an explicit nil
func (o *PiMarketDataDomainModelsResponseTickerBody) UnsetPoi() {
	o.Poi.Unset()
}

// GetUnderlying returns the Underlying field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiMarketDataDomainModelsResponseTickerBody) GetUnderlying() string {
	if o == nil || IsNil(o.Underlying.Get()) {
		var ret string
		return ret
	}
	return *o.Underlying.Get()
}

// GetUnderlyingOk returns a tuple with the Underlying field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiMarketDataDomainModelsResponseTickerBody) GetUnderlyingOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Underlying.Get(), o.Underlying.IsSet()
}

// HasUnderlying returns a boolean if a field has been set.
func (o *PiMarketDataDomainModelsResponseTickerBody) HasUnderlying() bool {
	if o != nil && o.Underlying.IsSet() {
		return true
	}

	return false
}

// SetUnderlying gets a reference to the given NullableString and assigns it to the Underlying field.
func (o *PiMarketDataDomainModelsResponseTickerBody) SetUnderlying(v string) {
	o.Underlying.Set(&v)
}

// SetUnderlyingNil sets the value for Underlying to be an explicit nil
func (o *PiMarketDataDomainModelsResponseTickerBody) SetUnderlyingNil() {
	o.Underlying.Set(nil)
}

// UnsetUnderlying ensures that no value is present for Underlying, not even an explicit nil
func (o *PiMarketDataDomainModelsResponseTickerBody) UnsetUnderlying() {
	o.Underlying.Unset()
}

// GetOpen0 returns the Open0 field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiMarketDataDomainModelsResponseTickerBody) GetOpen0() string {
	if o == nil || IsNil(o.Open0.Get()) {
		var ret string
		return ret
	}
	return *o.Open0.Get()
}

// GetOpen0Ok returns a tuple with the Open0 field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiMarketDataDomainModelsResponseTickerBody) GetOpen0Ok() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Open0.Get(), o.Open0.IsSet()
}

// HasOpen0 returns a boolean if a field has been set.
func (o *PiMarketDataDomainModelsResponseTickerBody) HasOpen0() bool {
	if o != nil && o.Open0.IsSet() {
		return true
	}

	return false
}

// SetOpen0 gets a reference to the given NullableString and assigns it to the Open0 field.
func (o *PiMarketDataDomainModelsResponseTickerBody) SetOpen0(v string) {
	o.Open0.Set(&v)
}

// SetOpen0Nil sets the value for Open0 to be an explicit nil
func (o *PiMarketDataDomainModelsResponseTickerBody) SetOpen0Nil() {
	o.Open0.Set(nil)
}

// UnsetOpen0 ensures that no value is present for Open0, not even an explicit nil
func (o *PiMarketDataDomainModelsResponseTickerBody) UnsetOpen0() {
	o.Open0.Unset()
}

// GetOpen1 returns the Open1 field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiMarketDataDomainModelsResponseTickerBody) GetOpen1() string {
	if o == nil || IsNil(o.Open1.Get()) {
		var ret string
		return ret
	}
	return *o.Open1.Get()
}

// GetOpen1Ok returns a tuple with the Open1 field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiMarketDataDomainModelsResponseTickerBody) GetOpen1Ok() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Open1.Get(), o.Open1.IsSet()
}

// HasOpen1 returns a boolean if a field has been set.
func (o *PiMarketDataDomainModelsResponseTickerBody) HasOpen1() bool {
	if o != nil && o.Open1.IsSet() {
		return true
	}

	return false
}

// SetOpen1 gets a reference to the given NullableString and assigns it to the Open1 field.
func (o *PiMarketDataDomainModelsResponseTickerBody) SetOpen1(v string) {
	o.Open1.Set(&v)
}

// SetOpen1Nil sets the value for Open1 to be an explicit nil
func (o *PiMarketDataDomainModelsResponseTickerBody) SetOpen1Nil() {
	o.Open1.Set(nil)
}

// UnsetOpen1 ensures that no value is present for Open1, not even an explicit nil
func (o *PiMarketDataDomainModelsResponseTickerBody) UnsetOpen1() {
	o.Open1.Unset()
}

// GetBasis returns the Basis field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiMarketDataDomainModelsResponseTickerBody) GetBasis() string {
	if o == nil || IsNil(o.Basis.Get()) {
		var ret string
		return ret
	}
	return *o.Basis.Get()
}

// GetBasisOk returns a tuple with the Basis field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiMarketDataDomainModelsResponseTickerBody) GetBasisOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Basis.Get(), o.Basis.IsSet()
}

// HasBasis returns a boolean if a field has been set.
func (o *PiMarketDataDomainModelsResponseTickerBody) HasBasis() bool {
	if o != nil && o.Basis.IsSet() {
		return true
	}

	return false
}

// SetBasis gets a reference to the given NullableString and assigns it to the Basis field.
func (o *PiMarketDataDomainModelsResponseTickerBody) SetBasis(v string) {
	o.Basis.Set(&v)
}

// SetBasisNil sets the value for Basis to be an explicit nil
func (o *PiMarketDataDomainModelsResponseTickerBody) SetBasisNil() {
	o.Basis.Set(nil)
}

// UnsetBasis ensures that no value is present for Basis, not even an explicit nil
func (o *PiMarketDataDomainModelsResponseTickerBody) UnsetBasis() {
	o.Basis.Unset()
}

// GetSettle returns the Settle field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiMarketDataDomainModelsResponseTickerBody) GetSettle() string {
	if o == nil || IsNil(o.Settle.Get()) {
		var ret string
		return ret
	}
	return *o.Settle.Get()
}

// GetSettleOk returns a tuple with the Settle field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiMarketDataDomainModelsResponseTickerBody) GetSettleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Settle.Get(), o.Settle.IsSet()
}

// HasSettle returns a boolean if a field has been set.
func (o *PiMarketDataDomainModelsResponseTickerBody) HasSettle() bool {
	if o != nil && o.Settle.IsSet() {
		return true
	}

	return false
}

// SetSettle gets a reference to the given NullableString and assigns it to the Settle field.
func (o *PiMarketDataDomainModelsResponseTickerBody) SetSettle(v string) {
	o.Settle.Set(&v)
}

// SetSettleNil sets the value for Settle to be an explicit nil
func (o *PiMarketDataDomainModelsResponseTickerBody) SetSettleNil() {
	o.Settle.Set(nil)
}

// UnsetSettle ensures that no value is present for Settle, not even an explicit nil
func (o *PiMarketDataDomainModelsResponseTickerBody) UnsetSettle() {
	o.Settle.Unset()
}

// GetInstrumentCategory returns the InstrumentCategory field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiMarketDataDomainModelsResponseTickerBody) GetInstrumentCategory() string {
	if o == nil || IsNil(o.InstrumentCategory.Get()) {
		var ret string
		return ret
	}
	return *o.InstrumentCategory.Get()
}

// GetInstrumentCategoryOk returns a tuple with the InstrumentCategory field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiMarketDataDomainModelsResponseTickerBody) GetInstrumentCategoryOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.InstrumentCategory.Get(), o.InstrumentCategory.IsSet()
}

// HasInstrumentCategory returns a boolean if a field has been set.
func (o *PiMarketDataDomainModelsResponseTickerBody) HasInstrumentCategory() bool {
	if o != nil && o.InstrumentCategory.IsSet() {
		return true
	}

	return false
}

// SetInstrumentCategory gets a reference to the given NullableString and assigns it to the InstrumentCategory field.
func (o *PiMarketDataDomainModelsResponseTickerBody) SetInstrumentCategory(v string) {
	o.InstrumentCategory.Set(&v)
}

// SetInstrumentCategoryNil sets the value for InstrumentCategory to be an explicit nil
func (o *PiMarketDataDomainModelsResponseTickerBody) SetInstrumentCategoryNil() {
	o.InstrumentCategory.Set(nil)
}

// UnsetInstrumentCategory ensures that no value is present for InstrumentCategory, not even an explicit nil
func (o *PiMarketDataDomainModelsResponseTickerBody) UnsetInstrumentCategory() {
	o.InstrumentCategory.Unset()
}

// GetFriendlyName returns the FriendlyName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiMarketDataDomainModelsResponseTickerBody) GetFriendlyName() string {
	if o == nil || IsNil(o.FriendlyName.Get()) {
		var ret string
		return ret
	}
	return *o.FriendlyName.Get()
}

// GetFriendlyNameOk returns a tuple with the FriendlyName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiMarketDataDomainModelsResponseTickerBody) GetFriendlyNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.FriendlyName.Get(), o.FriendlyName.IsSet()
}

// HasFriendlyName returns a boolean if a field has been set.
func (o *PiMarketDataDomainModelsResponseTickerBody) HasFriendlyName() bool {
	if o != nil && o.FriendlyName.IsSet() {
		return true
	}

	return false
}

// SetFriendlyName gets a reference to the given NullableString and assigns it to the FriendlyName field.
func (o *PiMarketDataDomainModelsResponseTickerBody) SetFriendlyName(v string) {
	o.FriendlyName.Set(&v)
}

// SetFriendlyNameNil sets the value for FriendlyName to be an explicit nil
func (o *PiMarketDataDomainModelsResponseTickerBody) SetFriendlyNameNil() {
	o.FriendlyName.Set(nil)
}

// UnsetFriendlyName ensures that no value is present for FriendlyName, not even an explicit nil
func (o *PiMarketDataDomainModelsResponseTickerBody) UnsetFriendlyName() {
	o.FriendlyName.Unset()
}

// GetLogo returns the Logo field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiMarketDataDomainModelsResponseTickerBody) GetLogo() string {
	if o == nil || IsNil(o.Logo.Get()) {
		var ret string
		return ret
	}
	return *o.Logo.Get()
}

// GetLogoOk returns a tuple with the Logo field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiMarketDataDomainModelsResponseTickerBody) GetLogoOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Logo.Get(), o.Logo.IsSet()
}

// HasLogo returns a boolean if a field has been set.
func (o *PiMarketDataDomainModelsResponseTickerBody) HasLogo() bool {
	if o != nil && o.Logo.IsSet() {
		return true
	}

	return false
}

// SetLogo gets a reference to the given NullableString and assigns it to the Logo field.
func (o *PiMarketDataDomainModelsResponseTickerBody) SetLogo(v string) {
	o.Logo.Set(&v)
}

// SetLogoNil sets the value for Logo to be an explicit nil
func (o *PiMarketDataDomainModelsResponseTickerBody) SetLogoNil() {
	o.Logo.Set(nil)
}

// UnsetLogo ensures that no value is present for Logo, not even an explicit nil
func (o *PiMarketDataDomainModelsResponseTickerBody) UnsetLogo() {
	o.Logo.Unset()
}

// GetExchangeTimezone returns the ExchangeTimezone field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiMarketDataDomainModelsResponseTickerBody) GetExchangeTimezone() string {
	if o == nil || IsNil(o.ExchangeTimezone.Get()) {
		var ret string
		return ret
	}
	return *o.ExchangeTimezone.Get()
}

// GetExchangeTimezoneOk returns a tuple with the ExchangeTimezone field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiMarketDataDomainModelsResponseTickerBody) GetExchangeTimezoneOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ExchangeTimezone.Get(), o.ExchangeTimezone.IsSet()
}

// HasExchangeTimezone returns a boolean if a field has been set.
func (o *PiMarketDataDomainModelsResponseTickerBody) HasExchangeTimezone() bool {
	if o != nil && o.ExchangeTimezone.IsSet() {
		return true
	}

	return false
}

// SetExchangeTimezone gets a reference to the given NullableString and assigns it to the ExchangeTimezone field.
func (o *PiMarketDataDomainModelsResponseTickerBody) SetExchangeTimezone(v string) {
	o.ExchangeTimezone.Set(&v)
}

// SetExchangeTimezoneNil sets the value for ExchangeTimezone to be an explicit nil
func (o *PiMarketDataDomainModelsResponseTickerBody) SetExchangeTimezoneNil() {
	o.ExchangeTimezone.Set(nil)
}

// UnsetExchangeTimezone ensures that no value is present for ExchangeTimezone, not even an explicit nil
func (o *PiMarketDataDomainModelsResponseTickerBody) UnsetExchangeTimezone() {
	o.ExchangeTimezone.Unset()
}

// GetCountry returns the Country field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiMarketDataDomainModelsResponseTickerBody) GetCountry() string {
	if o == nil || IsNil(o.Country.Get()) {
		var ret string
		return ret
	}
	return *o.Country.Get()
}

// GetCountryOk returns a tuple with the Country field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiMarketDataDomainModelsResponseTickerBody) GetCountryOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Country.Get(), o.Country.IsSet()
}

// HasCountry returns a boolean if a field has been set.
func (o *PiMarketDataDomainModelsResponseTickerBody) HasCountry() bool {
	if o != nil && o.Country.IsSet() {
		return true
	}

	return false
}

// SetCountry gets a reference to the given NullableString and assigns it to the Country field.
func (o *PiMarketDataDomainModelsResponseTickerBody) SetCountry(v string) {
	o.Country.Set(&v)
}

// SetCountryNil sets the value for Country to be an explicit nil
func (o *PiMarketDataDomainModelsResponseTickerBody) SetCountryNil() {
	o.Country.Set(nil)
}

// UnsetCountry ensures that no value is present for Country, not even an explicit nil
func (o *PiMarketDataDomainModelsResponseTickerBody) UnsetCountry() {
	o.Country.Unset()
}

// GetOffsetSeconds returns the OffsetSeconds field value if set, zero value otherwise.
func (o *PiMarketDataDomainModelsResponseTickerBody) GetOffsetSeconds() int32 {
	if o == nil || IsNil(o.OffsetSeconds) {
		var ret int32
		return ret
	}
	return *o.OffsetSeconds
}

// GetOffsetSecondsOk returns a tuple with the OffsetSeconds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PiMarketDataDomainModelsResponseTickerBody) GetOffsetSecondsOk() (*int32, bool) {
	if o == nil || IsNil(o.OffsetSeconds) {
		return nil, false
	}
	return o.OffsetSeconds, true
}

// HasOffsetSeconds returns a boolean if a field has been set.
func (o *PiMarketDataDomainModelsResponseTickerBody) HasOffsetSeconds() bool {
	if o != nil && !IsNil(o.OffsetSeconds) {
		return true
	}

	return false
}

// SetOffsetSeconds gets a reference to the given int32 and assigns it to the OffsetSeconds field.
func (o *PiMarketDataDomainModelsResponseTickerBody) SetOffsetSeconds(v int32) {
	o.OffsetSeconds = &v
}

// GetIsProjected returns the IsProjected field value if set, zero value otherwise.
func (o *PiMarketDataDomainModelsResponseTickerBody) GetIsProjected() bool {
	if o == nil || IsNil(o.IsProjected) {
		var ret bool
		return ret
	}
	return *o.IsProjected
}

// GetIsProjectedOk returns a tuple with the IsProjected field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PiMarketDataDomainModelsResponseTickerBody) GetIsProjectedOk() (*bool, bool) {
	if o == nil || IsNil(o.IsProjected) {
		return nil, false
	}
	return o.IsProjected, true
}

// HasIsProjected returns a boolean if a field has been set.
func (o *PiMarketDataDomainModelsResponseTickerBody) HasIsProjected() bool {
	if o != nil && !IsNil(o.IsProjected) {
		return true
	}

	return false
}

// SetIsProjected gets a reference to the given bool and assigns it to the IsProjected field.
func (o *PiMarketDataDomainModelsResponseTickerBody) SetIsProjected(v bool) {
	o.IsProjected = &v
}

// GetLastPriceTime returns the LastPriceTime field value if set, zero value otherwise.
func (o *PiMarketDataDomainModelsResponseTickerBody) GetLastPriceTime() int64 {
	if o == nil || IsNil(o.LastPriceTime) {
		var ret int64
		return ret
	}
	return *o.LastPriceTime
}

// GetLastPriceTimeOk returns a tuple with the LastPriceTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PiMarketDataDomainModelsResponseTickerBody) GetLastPriceTimeOk() (*int64, bool) {
	if o == nil || IsNil(o.LastPriceTime) {
		return nil, false
	}
	return o.LastPriceTime, true
}

// HasLastPriceTime returns a boolean if a field has been set.
func (o *PiMarketDataDomainModelsResponseTickerBody) HasLastPriceTime() bool {
	if o != nil && !IsNil(o.LastPriceTime) {
		return true
	}

	return false
}

// SetLastPriceTime gets a reference to the given int64 and assigns it to the LastPriceTime field.
func (o *PiMarketDataDomainModelsResponseTickerBody) SetLastPriceTime(v int64) {
	o.LastPriceTime = &v
}

func (o PiMarketDataDomainModelsResponseTickerBody) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PiMarketDataDomainModelsResponseTickerBody) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Symbol.IsSet() {
		toSerialize["symbol"] = o.Symbol.Get()
	}
	if o.Venue.IsSet() {
		toSerialize["venue"] = o.Venue.Get()
	}
	if o.Price.IsSet() {
		toSerialize["price"] = o.Price.Get()
	}
	if o.Currency.IsSet() {
		toSerialize["currency"] = o.Currency.Get()
	}
	if o.AuctionPrice.IsSet() {
		toSerialize["auctionPrice"] = o.AuctionPrice.Get()
	}
	if o.AuctionVolume.IsSet() {
		toSerialize["auctionVolume"] = o.AuctionVolume.Get()
	}
	if o.Open.IsSet() {
		toSerialize["open"] = o.Open.Get()
	}
	if o.High24H.IsSet() {
		toSerialize["high24H"] = o.High24H.Get()
	}
	if o.Low24H.IsSet() {
		toSerialize["low24H"] = o.Low24H.Get()
	}
	if o.High52W.IsSet() {
		toSerialize["high52W"] = o.High52W.Get()
	}
	if o.Low52W.IsSet() {
		toSerialize["low52W"] = o.Low52W.Get()
	}
	if o.PriceChanged.IsSet() {
		toSerialize["priceChanged"] = o.PriceChanged.Get()
	}
	if o.PriceChangedRate.IsSet() {
		toSerialize["priceChangedRate"] = o.PriceChangedRate.Get()
	}
	if o.Volume.IsSet() {
		toSerialize["volume"] = o.Volume.Get()
	}
	if o.Amount.IsSet() {
		toSerialize["amount"] = o.Amount.Get()
	}
	if o.ChangeAmount.IsSet() {
		toSerialize["changeAmount"] = o.ChangeAmount.Get()
	}
	if o.ChangeVolume.IsSet() {
		toSerialize["changeVolume"] = o.ChangeVolume.Get()
	}
	if o.TurnoverRate.IsSet() {
		toSerialize["turnoverRate"] = o.TurnoverRate.Get()
	}
	if o.Open2.IsSet() {
		toSerialize["open2"] = o.Open2.Get()
	}
	if o.Ceiling.IsSet() {
		toSerialize["ceiling"] = o.Ceiling.Get()
	}
	if o.Floor.IsSet() {
		toSerialize["floor"] = o.Floor.Get()
	}
	if o.Average.IsSet() {
		toSerialize["average"] = o.Average.Get()
	}
	if o.AverageBuy.IsSet() {
		toSerialize["averageBuy"] = o.AverageBuy.Get()
	}
	if o.AverageSell.IsSet() {
		toSerialize["averageSell"] = o.AverageSell.Get()
	}
	if o.Aggressor.IsSet() {
		toSerialize["aggressor"] = o.Aggressor.Get()
	}
	if o.PreClose.IsSet() {
		toSerialize["preClose"] = o.PreClose.Get()
	}
	if o.Status.IsSet() {
		toSerialize["status"] = o.Status.Get()
	}
	if o.Yield.IsSet() {
		toSerialize["yield"] = o.Yield.Get()
	}
	if o.Pe.IsSet() {
		toSerialize["pe"] = o.Pe.Get()
	}
	if o.Pb.IsSet() {
		toSerialize["pb"] = o.Pb.Get()
	}
	if o.TotalAmount.IsSet() {
		toSerialize["totalAmount"] = o.TotalAmount.Get()
	}
	if o.TotalAmountK.IsSet() {
		toSerialize["totalAmountK"] = o.TotalAmountK.Get()
	}
	if o.TotalVolume.IsSet() {
		toSerialize["totalVolume"] = o.TotalVolume.Get()
	}
	if o.TotalVolumeK.IsSet() {
		toSerialize["totalVolumeK"] = o.TotalVolumeK.Get()
	}
	if o.TradableEquity.IsSet() {
		toSerialize["tradableEquity"] = o.TradableEquity.Get()
	}
	if o.TradableAmount.IsSet() {
		toSerialize["tradableAmount"] = o.TradableAmount.Get()
	}
	if o.Eps.IsSet() {
		toSerialize["eps"] = o.Eps.Get()
	}
	if o.PublicTrades != nil {
		toSerialize["publicTrades"] = o.PublicTrades
	}
	if !IsNil(o.OrderBook) {
		toSerialize["orderBook"] = o.OrderBook
	}
	if o.SecurityType.IsSet() {
		toSerialize["securityType"] = o.SecurityType.Get()
	}
	if o.InstrumentType.IsSet() {
		toSerialize["instrumentType"] = o.InstrumentType.Get()
	}
	if o.Market.IsSet() {
		toSerialize["market"] = o.Market.Get()
	}
	if o.LastTrade.IsSet() {
		toSerialize["lastTrade"] = o.LastTrade.Get()
	}
	if !IsNil(o.ToLastTrade) {
		toSerialize["toLastTrade"] = o.ToLastTrade
	}
	if o.Moneyness.IsSet() {
		toSerialize["moneyness"] = o.Moneyness.Get()
	}
	if o.MaturityDate.IsSet() {
		toSerialize["maturityDate"] = o.MaturityDate.Get()
	}
	if o.Multiplier.IsSet() {
		toSerialize["multiplier"] = o.Multiplier.Get()
	}
	if o.ExercisePrice.IsSet() {
		toSerialize["exercisePrice"] = o.ExercisePrice.Get()
	}
	if o.IntrinsicValue.IsSet() {
		toSerialize["intrinsicValue"] = o.IntrinsicValue.Get()
	}
	if o.PSettle.IsSet() {
		toSerialize["pSettle"] = o.PSettle.Get()
	}
	if o.Poi.IsSet() {
		toSerialize["poi"] = o.Poi.Get()
	}
	if o.Underlying.IsSet() {
		toSerialize["underlying"] = o.Underlying.Get()
	}
	if o.Open0.IsSet() {
		toSerialize["open0"] = o.Open0.Get()
	}
	if o.Open1.IsSet() {
		toSerialize["open1"] = o.Open1.Get()
	}
	if o.Basis.IsSet() {
		toSerialize["basis"] = o.Basis.Get()
	}
	if o.Settle.IsSet() {
		toSerialize["settle"] = o.Settle.Get()
	}
	if o.InstrumentCategory.IsSet() {
		toSerialize["instrumentCategory"] = o.InstrumentCategory.Get()
	}
	if o.FriendlyName.IsSet() {
		toSerialize["friendlyName"] = o.FriendlyName.Get()
	}
	if o.Logo.IsSet() {
		toSerialize["logo"] = o.Logo.Get()
	}
	if o.ExchangeTimezone.IsSet() {
		toSerialize["exchangeTimezone"] = o.ExchangeTimezone.Get()
	}
	if o.Country.IsSet() {
		toSerialize["country"] = o.Country.Get()
	}
	if !IsNil(o.OffsetSeconds) {
		toSerialize["offsetSeconds"] = o.OffsetSeconds
	}
	if !IsNil(o.IsProjected) {
		toSerialize["isProjected"] = o.IsProjected
	}
	if !IsNil(o.LastPriceTime) {
		toSerialize["lastPriceTime"] = o.LastPriceTime
	}
	return toSerialize, nil
}

type NullablePiMarketDataDomainModelsResponseTickerBody struct {
	value *PiMarketDataDomainModelsResponseTickerBody
	isSet bool
}

func (v NullablePiMarketDataDomainModelsResponseTickerBody) Get() *PiMarketDataDomainModelsResponseTickerBody {
	return v.value
}

func (v *NullablePiMarketDataDomainModelsResponseTickerBody) Set(val *PiMarketDataDomainModelsResponseTickerBody) {
	v.value = val
	v.isSet = true
}

func (v NullablePiMarketDataDomainModelsResponseTickerBody) IsSet() bool {
	return v.isSet
}

func (v *NullablePiMarketDataDomainModelsResponseTickerBody) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePiMarketDataDomainModelsResponseTickerBody(val *PiMarketDataDomainModelsResponseTickerBody) *NullablePiMarketDataDomainModelsResponseTickerBody {
	return &NullablePiMarketDataDomainModelsResponseTickerBody{value: val, isSet: true}
}

func (v NullablePiMarketDataDomainModelsResponseTickerBody) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePiMarketDataDomainModelsResponseTickerBody) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
