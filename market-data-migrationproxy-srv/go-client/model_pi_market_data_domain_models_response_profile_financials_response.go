/*
MarketData Migration Proxy API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package go_client

import (
	"encoding/json"
)

// checks if the PiMarketDataDomainModelsResponseProfileFinancialsResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PiMarketDataDomainModelsResponseProfileFinancialsResponse{}

// PiMarketDataDomainModelsResponseProfileFinancialsResponse struct for PiMarketDataDomainModelsResponseProfileFinancialsResponse
type PiMarketDataDomainModelsResponseProfileFinancialsResponse struct {
	Sales               *PiMarketDataDomainModelsResponseSales               `json:"sales,omitempty"`
	OperatingIncome     *PiMarketDataDomainModelsResponseOperatingIncome     `json:"operatingIncome,omitempty"`
	NetIncome           *PiMarketDataDomainModelsResponseNetIncome           `json:"netIncome,omitempty"`
	EarningsPerShare    *PiMarketDataDomainModelsResponseEarningsPerShare    `json:"earningsPerShare,omitempty"`
	DividendPerShare    *PiMarketDataDomainModelsResponseDividendPerShare    `json:"dividendPerShare,omitempty"`
	CashflowPerShare    *PiMarketDataDomainModelsResponseCashflowPerShare    `json:"cashflowPerShare,omitempty"`
	TotalAssets         *PiMarketDataDomainModelsResponseTotalAssets         `json:"totalAssets,omitempty"`
	TotalLiabilities    *PiMarketDataDomainModelsResponseTotalLiabilities    `json:"totalLiabilities,omitempty"`
	OperatingMargin     *PiMarketDataDomainModelsResponseOperatingMargin     `json:"operatingMargin,omitempty"`
	LiabilitiesToAssets *PiMarketDataDomainModelsResponseLiabilitiesToAssets `json:"liabilitiesToAssets,omitempty"`
	AverageShareCount   *PiMarketDataDomainModelsResponseAverageShareCount   `json:"averageShareCount,omitempty"`
	Units               NullableString                                       `json:"units,omitempty"`
	LatestFinancials    NullableString                                       `json:"latestFinancials,omitempty"`
	Source              NullableString                                       `json:"source,omitempty"`
}

// NewPiMarketDataDomainModelsResponseProfileFinancialsResponse instantiates a new PiMarketDataDomainModelsResponseProfileFinancialsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPiMarketDataDomainModelsResponseProfileFinancialsResponse() *PiMarketDataDomainModelsResponseProfileFinancialsResponse {
	this := PiMarketDataDomainModelsResponseProfileFinancialsResponse{}
	return &this
}

// NewPiMarketDataDomainModelsResponseProfileFinancialsResponseWithDefaults instantiates a new PiMarketDataDomainModelsResponseProfileFinancialsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPiMarketDataDomainModelsResponseProfileFinancialsResponseWithDefaults() *PiMarketDataDomainModelsResponseProfileFinancialsResponse {
	this := PiMarketDataDomainModelsResponseProfileFinancialsResponse{}
	return &this
}

// GetSales returns the Sales field value if set, zero value otherwise.
func (o *PiMarketDataDomainModelsResponseProfileFinancialsResponse) GetSales() PiMarketDataDomainModelsResponseSales {
	if o == nil || IsNil(o.Sales) {
		var ret PiMarketDataDomainModelsResponseSales
		return ret
	}
	return *o.Sales
}

// GetSalesOk returns a tuple with the Sales field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PiMarketDataDomainModelsResponseProfileFinancialsResponse) GetSalesOk() (*PiMarketDataDomainModelsResponseSales, bool) {
	if o == nil || IsNil(o.Sales) {
		return nil, false
	}
	return o.Sales, true
}

// HasSales returns a boolean if a field has been set.
func (o *PiMarketDataDomainModelsResponseProfileFinancialsResponse) HasSales() bool {
	if o != nil && !IsNil(o.Sales) {
		return true
	}

	return false
}

// SetSales gets a reference to the given PiMarketDataDomainModelsResponseSales and assigns it to the Sales field.
func (o *PiMarketDataDomainModelsResponseProfileFinancialsResponse) SetSales(v PiMarketDataDomainModelsResponseSales) {
	o.Sales = &v
}

// GetOperatingIncome returns the OperatingIncome field value if set, zero value otherwise.
func (o *PiMarketDataDomainModelsResponseProfileFinancialsResponse) GetOperatingIncome() PiMarketDataDomainModelsResponseOperatingIncome {
	if o == nil || IsNil(o.OperatingIncome) {
		var ret PiMarketDataDomainModelsResponseOperatingIncome
		return ret
	}
	return *o.OperatingIncome
}

// GetOperatingIncomeOk returns a tuple with the OperatingIncome field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PiMarketDataDomainModelsResponseProfileFinancialsResponse) GetOperatingIncomeOk() (*PiMarketDataDomainModelsResponseOperatingIncome, bool) {
	if o == nil || IsNil(o.OperatingIncome) {
		return nil, false
	}
	return o.OperatingIncome, true
}

// HasOperatingIncome returns a boolean if a field has been set.
func (o *PiMarketDataDomainModelsResponseProfileFinancialsResponse) HasOperatingIncome() bool {
	if o != nil && !IsNil(o.OperatingIncome) {
		return true
	}

	return false
}

// SetOperatingIncome gets a reference to the given PiMarketDataDomainModelsResponseOperatingIncome and assigns it to the OperatingIncome field.
func (o *PiMarketDataDomainModelsResponseProfileFinancialsResponse) SetOperatingIncome(v PiMarketDataDomainModelsResponseOperatingIncome) {
	o.OperatingIncome = &v
}

// GetNetIncome returns the NetIncome field value if set, zero value otherwise.
func (o *PiMarketDataDomainModelsResponseProfileFinancialsResponse) GetNetIncome() PiMarketDataDomainModelsResponseNetIncome {
	if o == nil || IsNil(o.NetIncome) {
		var ret PiMarketDataDomainModelsResponseNetIncome
		return ret
	}
	return *o.NetIncome
}

// GetNetIncomeOk returns a tuple with the NetIncome field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PiMarketDataDomainModelsResponseProfileFinancialsResponse) GetNetIncomeOk() (*PiMarketDataDomainModelsResponseNetIncome, bool) {
	if o == nil || IsNil(o.NetIncome) {
		return nil, false
	}
	return o.NetIncome, true
}

// HasNetIncome returns a boolean if a field has been set.
func (o *PiMarketDataDomainModelsResponseProfileFinancialsResponse) HasNetIncome() bool {
	if o != nil && !IsNil(o.NetIncome) {
		return true
	}

	return false
}

// SetNetIncome gets a reference to the given PiMarketDataDomainModelsResponseNetIncome and assigns it to the NetIncome field.
func (o *PiMarketDataDomainModelsResponseProfileFinancialsResponse) SetNetIncome(v PiMarketDataDomainModelsResponseNetIncome) {
	o.NetIncome = &v
}

// GetEarningsPerShare returns the EarningsPerShare field value if set, zero value otherwise.
func (o *PiMarketDataDomainModelsResponseProfileFinancialsResponse) GetEarningsPerShare() PiMarketDataDomainModelsResponseEarningsPerShare {
	if o == nil || IsNil(o.EarningsPerShare) {
		var ret PiMarketDataDomainModelsResponseEarningsPerShare
		return ret
	}
	return *o.EarningsPerShare
}

// GetEarningsPerShareOk returns a tuple with the EarningsPerShare field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PiMarketDataDomainModelsResponseProfileFinancialsResponse) GetEarningsPerShareOk() (*PiMarketDataDomainModelsResponseEarningsPerShare, bool) {
	if o == nil || IsNil(o.EarningsPerShare) {
		return nil, false
	}
	return o.EarningsPerShare, true
}

// HasEarningsPerShare returns a boolean if a field has been set.
func (o *PiMarketDataDomainModelsResponseProfileFinancialsResponse) HasEarningsPerShare() bool {
	if o != nil && !IsNil(o.EarningsPerShare) {
		return true
	}

	return false
}

// SetEarningsPerShare gets a reference to the given PiMarketDataDomainModelsResponseEarningsPerShare and assigns it to the EarningsPerShare field.
func (o *PiMarketDataDomainModelsResponseProfileFinancialsResponse) SetEarningsPerShare(v PiMarketDataDomainModelsResponseEarningsPerShare) {
	o.EarningsPerShare = &v
}

// GetDividendPerShare returns the DividendPerShare field value if set, zero value otherwise.
func (o *PiMarketDataDomainModelsResponseProfileFinancialsResponse) GetDividendPerShare() PiMarketDataDomainModelsResponseDividendPerShare {
	if o == nil || IsNil(o.DividendPerShare) {
		var ret PiMarketDataDomainModelsResponseDividendPerShare
		return ret
	}
	return *o.DividendPerShare
}

// GetDividendPerShareOk returns a tuple with the DividendPerShare field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PiMarketDataDomainModelsResponseProfileFinancialsResponse) GetDividendPerShareOk() (*PiMarketDataDomainModelsResponseDividendPerShare, bool) {
	if o == nil || IsNil(o.DividendPerShare) {
		return nil, false
	}
	return o.DividendPerShare, true
}

// HasDividendPerShare returns a boolean if a field has been set.
func (o *PiMarketDataDomainModelsResponseProfileFinancialsResponse) HasDividendPerShare() bool {
	if o != nil && !IsNil(o.DividendPerShare) {
		return true
	}

	return false
}

// SetDividendPerShare gets a reference to the given PiMarketDataDomainModelsResponseDividendPerShare and assigns it to the DividendPerShare field.
func (o *PiMarketDataDomainModelsResponseProfileFinancialsResponse) SetDividendPerShare(v PiMarketDataDomainModelsResponseDividendPerShare) {
	o.DividendPerShare = &v
}

// GetCashflowPerShare returns the CashflowPerShare field value if set, zero value otherwise.
func (o *PiMarketDataDomainModelsResponseProfileFinancialsResponse) GetCashflowPerShare() PiMarketDataDomainModelsResponseCashflowPerShare {
	if o == nil || IsNil(o.CashflowPerShare) {
		var ret PiMarketDataDomainModelsResponseCashflowPerShare
		return ret
	}
	return *o.CashflowPerShare
}

// GetCashflowPerShareOk returns a tuple with the CashflowPerShare field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PiMarketDataDomainModelsResponseProfileFinancialsResponse) GetCashflowPerShareOk() (*PiMarketDataDomainModelsResponseCashflowPerShare, bool) {
	if o == nil || IsNil(o.CashflowPerShare) {
		return nil, false
	}
	return o.CashflowPerShare, true
}

// HasCashflowPerShare returns a boolean if a field has been set.
func (o *PiMarketDataDomainModelsResponseProfileFinancialsResponse) HasCashflowPerShare() bool {
	if o != nil && !IsNil(o.CashflowPerShare) {
		return true
	}

	return false
}

// SetCashflowPerShare gets a reference to the given PiMarketDataDomainModelsResponseCashflowPerShare and assigns it to the CashflowPerShare field.
func (o *PiMarketDataDomainModelsResponseProfileFinancialsResponse) SetCashflowPerShare(v PiMarketDataDomainModelsResponseCashflowPerShare) {
	o.CashflowPerShare = &v
}

// GetTotalAssets returns the TotalAssets field value if set, zero value otherwise.
func (o *PiMarketDataDomainModelsResponseProfileFinancialsResponse) GetTotalAssets() PiMarketDataDomainModelsResponseTotalAssets {
	if o == nil || IsNil(o.TotalAssets) {
		var ret PiMarketDataDomainModelsResponseTotalAssets
		return ret
	}
	return *o.TotalAssets
}

// GetTotalAssetsOk returns a tuple with the TotalAssets field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PiMarketDataDomainModelsResponseProfileFinancialsResponse) GetTotalAssetsOk() (*PiMarketDataDomainModelsResponseTotalAssets, bool) {
	if o == nil || IsNil(o.TotalAssets) {
		return nil, false
	}
	return o.TotalAssets, true
}

// HasTotalAssets returns a boolean if a field has been set.
func (o *PiMarketDataDomainModelsResponseProfileFinancialsResponse) HasTotalAssets() bool {
	if o != nil && !IsNil(o.TotalAssets) {
		return true
	}

	return false
}

// SetTotalAssets gets a reference to the given PiMarketDataDomainModelsResponseTotalAssets and assigns it to the TotalAssets field.
func (o *PiMarketDataDomainModelsResponseProfileFinancialsResponse) SetTotalAssets(v PiMarketDataDomainModelsResponseTotalAssets) {
	o.TotalAssets = &v
}

// GetTotalLiabilities returns the TotalLiabilities field value if set, zero value otherwise.
func (o *PiMarketDataDomainModelsResponseProfileFinancialsResponse) GetTotalLiabilities() PiMarketDataDomainModelsResponseTotalLiabilities {
	if o == nil || IsNil(o.TotalLiabilities) {
		var ret PiMarketDataDomainModelsResponseTotalLiabilities
		return ret
	}
	return *o.TotalLiabilities
}

// GetTotalLiabilitiesOk returns a tuple with the TotalLiabilities field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PiMarketDataDomainModelsResponseProfileFinancialsResponse) GetTotalLiabilitiesOk() (*PiMarketDataDomainModelsResponseTotalLiabilities, bool) {
	if o == nil || IsNil(o.TotalLiabilities) {
		return nil, false
	}
	return o.TotalLiabilities, true
}

// HasTotalLiabilities returns a boolean if a field has been set.
func (o *PiMarketDataDomainModelsResponseProfileFinancialsResponse) HasTotalLiabilities() bool {
	if o != nil && !IsNil(o.TotalLiabilities) {
		return true
	}

	return false
}

// SetTotalLiabilities gets a reference to the given PiMarketDataDomainModelsResponseTotalLiabilities and assigns it to the TotalLiabilities field.
func (o *PiMarketDataDomainModelsResponseProfileFinancialsResponse) SetTotalLiabilities(v PiMarketDataDomainModelsResponseTotalLiabilities) {
	o.TotalLiabilities = &v
}

// GetOperatingMargin returns the OperatingMargin field value if set, zero value otherwise.
func (o *PiMarketDataDomainModelsResponseProfileFinancialsResponse) GetOperatingMargin() PiMarketDataDomainModelsResponseOperatingMargin {
	if o == nil || IsNil(o.OperatingMargin) {
		var ret PiMarketDataDomainModelsResponseOperatingMargin
		return ret
	}
	return *o.OperatingMargin
}

// GetOperatingMarginOk returns a tuple with the OperatingMargin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PiMarketDataDomainModelsResponseProfileFinancialsResponse) GetOperatingMarginOk() (*PiMarketDataDomainModelsResponseOperatingMargin, bool) {
	if o == nil || IsNil(o.OperatingMargin) {
		return nil, false
	}
	return o.OperatingMargin, true
}

// HasOperatingMargin returns a boolean if a field has been set.
func (o *PiMarketDataDomainModelsResponseProfileFinancialsResponse) HasOperatingMargin() bool {
	if o != nil && !IsNil(o.OperatingMargin) {
		return true
	}

	return false
}

// SetOperatingMargin gets a reference to the given PiMarketDataDomainModelsResponseOperatingMargin and assigns it to the OperatingMargin field.
func (o *PiMarketDataDomainModelsResponseProfileFinancialsResponse) SetOperatingMargin(v PiMarketDataDomainModelsResponseOperatingMargin) {
	o.OperatingMargin = &v
}

// GetLiabilitiesToAssets returns the LiabilitiesToAssets field value if set, zero value otherwise.
func (o *PiMarketDataDomainModelsResponseProfileFinancialsResponse) GetLiabilitiesToAssets() PiMarketDataDomainModelsResponseLiabilitiesToAssets {
	if o == nil || IsNil(o.LiabilitiesToAssets) {
		var ret PiMarketDataDomainModelsResponseLiabilitiesToAssets
		return ret
	}
	return *o.LiabilitiesToAssets
}

// GetLiabilitiesToAssetsOk returns a tuple with the LiabilitiesToAssets field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PiMarketDataDomainModelsResponseProfileFinancialsResponse) GetLiabilitiesToAssetsOk() (*PiMarketDataDomainModelsResponseLiabilitiesToAssets, bool) {
	if o == nil || IsNil(o.LiabilitiesToAssets) {
		return nil, false
	}
	return o.LiabilitiesToAssets, true
}

// HasLiabilitiesToAssets returns a boolean if a field has been set.
func (o *PiMarketDataDomainModelsResponseProfileFinancialsResponse) HasLiabilitiesToAssets() bool {
	if o != nil && !IsNil(o.LiabilitiesToAssets) {
		return true
	}

	return false
}

// SetLiabilitiesToAssets gets a reference to the given PiMarketDataDomainModelsResponseLiabilitiesToAssets and assigns it to the LiabilitiesToAssets field.
func (o *PiMarketDataDomainModelsResponseProfileFinancialsResponse) SetLiabilitiesToAssets(v PiMarketDataDomainModelsResponseLiabilitiesToAssets) {
	o.LiabilitiesToAssets = &v
}

// GetAverageShareCount returns the AverageShareCount field value if set, zero value otherwise.
func (o *PiMarketDataDomainModelsResponseProfileFinancialsResponse) GetAverageShareCount() PiMarketDataDomainModelsResponseAverageShareCount {
	if o == nil || IsNil(o.AverageShareCount) {
		var ret PiMarketDataDomainModelsResponseAverageShareCount
		return ret
	}
	return *o.AverageShareCount
}

// GetAverageShareCountOk returns a tuple with the AverageShareCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PiMarketDataDomainModelsResponseProfileFinancialsResponse) GetAverageShareCountOk() (*PiMarketDataDomainModelsResponseAverageShareCount, bool) {
	if o == nil || IsNil(o.AverageShareCount) {
		return nil, false
	}
	return o.AverageShareCount, true
}

// HasAverageShareCount returns a boolean if a field has been set.
func (o *PiMarketDataDomainModelsResponseProfileFinancialsResponse) HasAverageShareCount() bool {
	if o != nil && !IsNil(o.AverageShareCount) {
		return true
	}

	return false
}

// SetAverageShareCount gets a reference to the given PiMarketDataDomainModelsResponseAverageShareCount and assigns it to the AverageShareCount field.
func (o *PiMarketDataDomainModelsResponseProfileFinancialsResponse) SetAverageShareCount(v PiMarketDataDomainModelsResponseAverageShareCount) {
	o.AverageShareCount = &v
}

// GetUnits returns the Units field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiMarketDataDomainModelsResponseProfileFinancialsResponse) GetUnits() string {
	if o == nil || IsNil(o.Units.Get()) {
		var ret string
		return ret
	}
	return *o.Units.Get()
}

// GetUnitsOk returns a tuple with the Units field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiMarketDataDomainModelsResponseProfileFinancialsResponse) GetUnitsOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Units.Get(), o.Units.IsSet()
}

// HasUnits returns a boolean if a field has been set.
func (o *PiMarketDataDomainModelsResponseProfileFinancialsResponse) HasUnits() bool {
	if o != nil && o.Units.IsSet() {
		return true
	}

	return false
}

// SetUnits gets a reference to the given NullableString and assigns it to the Units field.
func (o *PiMarketDataDomainModelsResponseProfileFinancialsResponse) SetUnits(v string) {
	o.Units.Set(&v)
}

// SetUnitsNil sets the value for Units to be an explicit nil
func (o *PiMarketDataDomainModelsResponseProfileFinancialsResponse) SetUnitsNil() {
	o.Units.Set(nil)
}

// UnsetUnits ensures that no value is present for Units, not even an explicit nil
func (o *PiMarketDataDomainModelsResponseProfileFinancialsResponse) UnsetUnits() {
	o.Units.Unset()
}

// GetLatestFinancials returns the LatestFinancials field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiMarketDataDomainModelsResponseProfileFinancialsResponse) GetLatestFinancials() string {
	if o == nil || IsNil(o.LatestFinancials.Get()) {
		var ret string
		return ret
	}
	return *o.LatestFinancials.Get()
}

// GetLatestFinancialsOk returns a tuple with the LatestFinancials field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiMarketDataDomainModelsResponseProfileFinancialsResponse) GetLatestFinancialsOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.LatestFinancials.Get(), o.LatestFinancials.IsSet()
}

// HasLatestFinancials returns a boolean if a field has been set.
func (o *PiMarketDataDomainModelsResponseProfileFinancialsResponse) HasLatestFinancials() bool {
	if o != nil && o.LatestFinancials.IsSet() {
		return true
	}

	return false
}

// SetLatestFinancials gets a reference to the given NullableString and assigns it to the LatestFinancials field.
func (o *PiMarketDataDomainModelsResponseProfileFinancialsResponse) SetLatestFinancials(v string) {
	o.LatestFinancials.Set(&v)
}

// SetLatestFinancialsNil sets the value for LatestFinancials to be an explicit nil
func (o *PiMarketDataDomainModelsResponseProfileFinancialsResponse) SetLatestFinancialsNil() {
	o.LatestFinancials.Set(nil)
}

// UnsetLatestFinancials ensures that no value is present for LatestFinancials, not even an explicit nil
func (o *PiMarketDataDomainModelsResponseProfileFinancialsResponse) UnsetLatestFinancials() {
	o.LatestFinancials.Unset()
}

// GetSource returns the Source field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiMarketDataDomainModelsResponseProfileFinancialsResponse) GetSource() string {
	if o == nil || IsNil(o.Source.Get()) {
		var ret string
		return ret
	}
	return *o.Source.Get()
}

// GetSourceOk returns a tuple with the Source field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiMarketDataDomainModelsResponseProfileFinancialsResponse) GetSourceOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Source.Get(), o.Source.IsSet()
}

// HasSource returns a boolean if a field has been set.
func (o *PiMarketDataDomainModelsResponseProfileFinancialsResponse) HasSource() bool {
	if o != nil && o.Source.IsSet() {
		return true
	}

	return false
}

// SetSource gets a reference to the given NullableString and assigns it to the Source field.
func (o *PiMarketDataDomainModelsResponseProfileFinancialsResponse) SetSource(v string) {
	o.Source.Set(&v)
}

// SetSourceNil sets the value for Source to be an explicit nil
func (o *PiMarketDataDomainModelsResponseProfileFinancialsResponse) SetSourceNil() {
	o.Source.Set(nil)
}

// UnsetSource ensures that no value is present for Source, not even an explicit nil
func (o *PiMarketDataDomainModelsResponseProfileFinancialsResponse) UnsetSource() {
	o.Source.Unset()
}

func (o PiMarketDataDomainModelsResponseProfileFinancialsResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PiMarketDataDomainModelsResponseProfileFinancialsResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Sales) {
		toSerialize["sales"] = o.Sales
	}
	if !IsNil(o.OperatingIncome) {
		toSerialize["operatingIncome"] = o.OperatingIncome
	}
	if !IsNil(o.NetIncome) {
		toSerialize["netIncome"] = o.NetIncome
	}
	if !IsNil(o.EarningsPerShare) {
		toSerialize["earningsPerShare"] = o.EarningsPerShare
	}
	if !IsNil(o.DividendPerShare) {
		toSerialize["dividendPerShare"] = o.DividendPerShare
	}
	if !IsNil(o.CashflowPerShare) {
		toSerialize["cashflowPerShare"] = o.CashflowPerShare
	}
	if !IsNil(o.TotalAssets) {
		toSerialize["totalAssets"] = o.TotalAssets
	}
	if !IsNil(o.TotalLiabilities) {
		toSerialize["totalLiabilities"] = o.TotalLiabilities
	}
	if !IsNil(o.OperatingMargin) {
		toSerialize["operatingMargin"] = o.OperatingMargin
	}
	if !IsNil(o.LiabilitiesToAssets) {
		toSerialize["liabilitiesToAssets"] = o.LiabilitiesToAssets
	}
	if !IsNil(o.AverageShareCount) {
		toSerialize["averageShareCount"] = o.AverageShareCount
	}
	if o.Units.IsSet() {
		toSerialize["units"] = o.Units.Get()
	}
	if o.LatestFinancials.IsSet() {
		toSerialize["latestFinancials"] = o.LatestFinancials.Get()
	}
	if o.Source.IsSet() {
		toSerialize["source"] = o.Source.Get()
	}
	return toSerialize, nil
}

type NullablePiMarketDataDomainModelsResponseProfileFinancialsResponse struct {
	value *PiMarketDataDomainModelsResponseProfileFinancialsResponse
	isSet bool
}

func (v NullablePiMarketDataDomainModelsResponseProfileFinancialsResponse) Get() *PiMarketDataDomainModelsResponseProfileFinancialsResponse {
	return v.value
}

func (v *NullablePiMarketDataDomainModelsResponseProfileFinancialsResponse) Set(val *PiMarketDataDomainModelsResponseProfileFinancialsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullablePiMarketDataDomainModelsResponseProfileFinancialsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullablePiMarketDataDomainModelsResponseProfileFinancialsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePiMarketDataDomainModelsResponseProfileFinancialsResponse(val *PiMarketDataDomainModelsResponseProfileFinancialsResponse) *NullablePiMarketDataDomainModelsResponseProfileFinancialsResponse {
	return &NullablePiMarketDataDomainModelsResponseProfileFinancialsResponse{value: val, isSet: true}
}

func (v NullablePiMarketDataDomainModelsResponseProfileFinancialsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePiMarketDataDomainModelsResponseProfileFinancialsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
