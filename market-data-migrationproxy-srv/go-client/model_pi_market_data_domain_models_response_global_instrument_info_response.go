/*
MarketData Migration Proxy API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package go_client

import (
	"encoding/json"
)

// checks if the PiMarketDataDomainModelsResponseGlobalInstrumentInfoResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PiMarketDataDomainModelsResponseGlobalInstrumentInfoResponse{}

// PiMarketDataDomainModelsResponseGlobalInstrumentInfoResponse struct for PiMarketDataDomainModelsResponseGlobalInstrumentInfoResponse
type PiMarketDataDomainModelsResponseGlobalInstrumentInfoResponse struct {
	MinimalPriceIncrement    NullableString `json:"minimalPriceIncrement,omitempty"`
	MinimalQuantityIncrement NullableString `json:"minimalQuantityIncrement,omitempty"`
	Currency                 NullableString `json:"currency,omitempty"`
}

// NewPiMarketDataDomainModelsResponseGlobalInstrumentInfoResponse instantiates a new PiMarketDataDomainModelsResponseGlobalInstrumentInfoResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPiMarketDataDomainModelsResponseGlobalInstrumentInfoResponse() *PiMarketDataDomainModelsResponseGlobalInstrumentInfoResponse {
	this := PiMarketDataDomainModelsResponseGlobalInstrumentInfoResponse{}
	return &this
}

// NewPiMarketDataDomainModelsResponseGlobalInstrumentInfoResponseWithDefaults instantiates a new PiMarketDataDomainModelsResponseGlobalInstrumentInfoResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPiMarketDataDomainModelsResponseGlobalInstrumentInfoResponseWithDefaults() *PiMarketDataDomainModelsResponseGlobalInstrumentInfoResponse {
	this := PiMarketDataDomainModelsResponseGlobalInstrumentInfoResponse{}
	return &this
}

// GetMinimalPriceIncrement returns the MinimalPriceIncrement field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiMarketDataDomainModelsResponseGlobalInstrumentInfoResponse) GetMinimalPriceIncrement() string {
	if o == nil || IsNil(o.MinimalPriceIncrement.Get()) {
		var ret string
		return ret
	}
	return *o.MinimalPriceIncrement.Get()
}

// GetMinimalPriceIncrementOk returns a tuple with the MinimalPriceIncrement field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiMarketDataDomainModelsResponseGlobalInstrumentInfoResponse) GetMinimalPriceIncrementOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.MinimalPriceIncrement.Get(), o.MinimalPriceIncrement.IsSet()
}

// HasMinimalPriceIncrement returns a boolean if a field has been set.
func (o *PiMarketDataDomainModelsResponseGlobalInstrumentInfoResponse) HasMinimalPriceIncrement() bool {
	if o != nil && o.MinimalPriceIncrement.IsSet() {
		return true
	}

	return false
}

// SetMinimalPriceIncrement gets a reference to the given NullableString and assigns it to the MinimalPriceIncrement field.
func (o *PiMarketDataDomainModelsResponseGlobalInstrumentInfoResponse) SetMinimalPriceIncrement(v string) {
	o.MinimalPriceIncrement.Set(&v)
}

// SetMinimalPriceIncrementNil sets the value for MinimalPriceIncrement to be an explicit nil
func (o *PiMarketDataDomainModelsResponseGlobalInstrumentInfoResponse) SetMinimalPriceIncrementNil() {
	o.MinimalPriceIncrement.Set(nil)
}

// UnsetMinimalPriceIncrement ensures that no value is present for MinimalPriceIncrement, not even an explicit nil
func (o *PiMarketDataDomainModelsResponseGlobalInstrumentInfoResponse) UnsetMinimalPriceIncrement() {
	o.MinimalPriceIncrement.Unset()
}

// GetMinimalQuantityIncrement returns the MinimalQuantityIncrement field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiMarketDataDomainModelsResponseGlobalInstrumentInfoResponse) GetMinimalQuantityIncrement() string {
	if o == nil || IsNil(o.MinimalQuantityIncrement.Get()) {
		var ret string
		return ret
	}
	return *o.MinimalQuantityIncrement.Get()
}

// GetMinimalQuantityIncrementOk returns a tuple with the MinimalQuantityIncrement field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiMarketDataDomainModelsResponseGlobalInstrumentInfoResponse) GetMinimalQuantityIncrementOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.MinimalQuantityIncrement.Get(), o.MinimalQuantityIncrement.IsSet()
}

// HasMinimalQuantityIncrement returns a boolean if a field has been set.
func (o *PiMarketDataDomainModelsResponseGlobalInstrumentInfoResponse) HasMinimalQuantityIncrement() bool {
	if o != nil && o.MinimalQuantityIncrement.IsSet() {
		return true
	}

	return false
}

// SetMinimalQuantityIncrement gets a reference to the given NullableString and assigns it to the MinimalQuantityIncrement field.
func (o *PiMarketDataDomainModelsResponseGlobalInstrumentInfoResponse) SetMinimalQuantityIncrement(v string) {
	o.MinimalQuantityIncrement.Set(&v)
}

// SetMinimalQuantityIncrementNil sets the value for MinimalQuantityIncrement to be an explicit nil
func (o *PiMarketDataDomainModelsResponseGlobalInstrumentInfoResponse) SetMinimalQuantityIncrementNil() {
	o.MinimalQuantityIncrement.Set(nil)
}

// UnsetMinimalQuantityIncrement ensures that no value is present for MinimalQuantityIncrement, not even an explicit nil
func (o *PiMarketDataDomainModelsResponseGlobalInstrumentInfoResponse) UnsetMinimalQuantityIncrement() {
	o.MinimalQuantityIncrement.Unset()
}

// GetCurrency returns the Currency field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiMarketDataDomainModelsResponseGlobalInstrumentInfoResponse) GetCurrency() string {
	if o == nil || IsNil(o.Currency.Get()) {
		var ret string
		return ret
	}
	return *o.Currency.Get()
}

// GetCurrencyOk returns a tuple with the Currency field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiMarketDataDomainModelsResponseGlobalInstrumentInfoResponse) GetCurrencyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Currency.Get(), o.Currency.IsSet()
}

// HasCurrency returns a boolean if a field has been set.
func (o *PiMarketDataDomainModelsResponseGlobalInstrumentInfoResponse) HasCurrency() bool {
	if o != nil && o.Currency.IsSet() {
		return true
	}

	return false
}

// SetCurrency gets a reference to the given NullableString and assigns it to the Currency field.
func (o *PiMarketDataDomainModelsResponseGlobalInstrumentInfoResponse) SetCurrency(v string) {
	o.Currency.Set(&v)
}

// SetCurrencyNil sets the value for Currency to be an explicit nil
func (o *PiMarketDataDomainModelsResponseGlobalInstrumentInfoResponse) SetCurrencyNil() {
	o.Currency.Set(nil)
}

// UnsetCurrency ensures that no value is present for Currency, not even an explicit nil
func (o *PiMarketDataDomainModelsResponseGlobalInstrumentInfoResponse) UnsetCurrency() {
	o.Currency.Unset()
}

func (o PiMarketDataDomainModelsResponseGlobalInstrumentInfoResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PiMarketDataDomainModelsResponseGlobalInstrumentInfoResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.MinimalPriceIncrement.IsSet() {
		toSerialize["minimalPriceIncrement"] = o.MinimalPriceIncrement.Get()
	}
	if o.MinimalQuantityIncrement.IsSet() {
		toSerialize["minimalQuantityIncrement"] = o.MinimalQuantityIncrement.Get()
	}
	if o.Currency.IsSet() {
		toSerialize["currency"] = o.Currency.Get()
	}
	return toSerialize, nil
}

type NullablePiMarketDataDomainModelsResponseGlobalInstrumentInfoResponse struct {
	value *PiMarketDataDomainModelsResponseGlobalInstrumentInfoResponse
	isSet bool
}

func (v NullablePiMarketDataDomainModelsResponseGlobalInstrumentInfoResponse) Get() *PiMarketDataDomainModelsResponseGlobalInstrumentInfoResponse {
	return v.value
}

func (v *NullablePiMarketDataDomainModelsResponseGlobalInstrumentInfoResponse) Set(val *PiMarketDataDomainModelsResponseGlobalInstrumentInfoResponse) {
	v.value = val
	v.isSet = true
}

func (v NullablePiMarketDataDomainModelsResponseGlobalInstrumentInfoResponse) IsSet() bool {
	return v.isSet
}

func (v *NullablePiMarketDataDomainModelsResponseGlobalInstrumentInfoResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePiMarketDataDomainModelsResponseGlobalInstrumentInfoResponse(val *PiMarketDataDomainModelsResponseGlobalInstrumentInfoResponse) *NullablePiMarketDataDomainModelsResponseGlobalInstrumentInfoResponse {
	return &NullablePiMarketDataDomainModelsResponseGlobalInstrumentInfoResponse{value: val, isSet: true}
}

func (v NullablePiMarketDataDomainModelsResponseGlobalInstrumentInfoResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePiMarketDataDomainModelsResponseGlobalInstrumentInfoResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
