/*
MarketData Migration Proxy API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package go_client

import (
	"encoding/json"
)

// checks if the PiMarketDataDomainModelsResponseIndicatorResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PiMarketDataDomainModelsResponseIndicatorResponse{}

// PiMarketDataDomainModelsResponseIndicatorResponse struct for PiMarketDataDomainModelsResponseIndicatorResponse
type PiMarketDataDomainModelsResponseIndicatorResponse struct {
	Meta            *PiMarketDataDomainModelsResponseMeta                        `json:"meta,omitempty"`
	Venue           NullableString                                               `json:"venue,omitempty"`
	Symbol          NullableString                                               `json:"symbol,omitempty"`
	CandleType      NullableString                                               `json:"candleType,omitempty"`
	Candles         [][]interface{}                                              `json:"candles,omitempty"`
	Indicators      *PiMarketDataDomainModelsResponseTechnicalIndicatorsResponse `json:"indicators,omitempty"`
	FirstCandleTime *int32                                                       `json:"firstCandleTime,omitempty"`
}

// NewPiMarketDataDomainModelsResponseIndicatorResponse instantiates a new PiMarketDataDomainModelsResponseIndicatorResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPiMarketDataDomainModelsResponseIndicatorResponse() *PiMarketDataDomainModelsResponseIndicatorResponse {
	this := PiMarketDataDomainModelsResponseIndicatorResponse{}
	return &this
}

// NewPiMarketDataDomainModelsResponseIndicatorResponseWithDefaults instantiates a new PiMarketDataDomainModelsResponseIndicatorResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPiMarketDataDomainModelsResponseIndicatorResponseWithDefaults() *PiMarketDataDomainModelsResponseIndicatorResponse {
	this := PiMarketDataDomainModelsResponseIndicatorResponse{}
	return &this
}

// GetMeta returns the Meta field value if set, zero value otherwise.
func (o *PiMarketDataDomainModelsResponseIndicatorResponse) GetMeta() PiMarketDataDomainModelsResponseMeta {
	if o == nil || IsNil(o.Meta) {
		var ret PiMarketDataDomainModelsResponseMeta
		return ret
	}
	return *o.Meta
}

// GetMetaOk returns a tuple with the Meta field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PiMarketDataDomainModelsResponseIndicatorResponse) GetMetaOk() (*PiMarketDataDomainModelsResponseMeta, bool) {
	if o == nil || IsNil(o.Meta) {
		return nil, false
	}
	return o.Meta, true
}

// HasMeta returns a boolean if a field has been set.
func (o *PiMarketDataDomainModelsResponseIndicatorResponse) HasMeta() bool {
	if o != nil && !IsNil(o.Meta) {
		return true
	}

	return false
}

// SetMeta gets a reference to the given PiMarketDataDomainModelsResponseMeta and assigns it to the Meta field.
func (o *PiMarketDataDomainModelsResponseIndicatorResponse) SetMeta(v PiMarketDataDomainModelsResponseMeta) {
	o.Meta = &v
}

// GetVenue returns the Venue field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiMarketDataDomainModelsResponseIndicatorResponse) GetVenue() string {
	if o == nil || IsNil(o.Venue.Get()) {
		var ret string
		return ret
	}
	return *o.Venue.Get()
}

// GetVenueOk returns a tuple with the Venue field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiMarketDataDomainModelsResponseIndicatorResponse) GetVenueOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Venue.Get(), o.Venue.IsSet()
}

// HasVenue returns a boolean if a field has been set.
func (o *PiMarketDataDomainModelsResponseIndicatorResponse) HasVenue() bool {
	if o != nil && o.Venue.IsSet() {
		return true
	}

	return false
}

// SetVenue gets a reference to the given NullableString and assigns it to the Venue field.
func (o *PiMarketDataDomainModelsResponseIndicatorResponse) SetVenue(v string) {
	o.Venue.Set(&v)
}

// SetVenueNil sets the value for Venue to be an explicit nil
func (o *PiMarketDataDomainModelsResponseIndicatorResponse) SetVenueNil() {
	o.Venue.Set(nil)
}

// UnsetVenue ensures that no value is present for Venue, not even an explicit nil
func (o *PiMarketDataDomainModelsResponseIndicatorResponse) UnsetVenue() {
	o.Venue.Unset()
}

// GetSymbol returns the Symbol field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiMarketDataDomainModelsResponseIndicatorResponse) GetSymbol() string {
	if o == nil || IsNil(o.Symbol.Get()) {
		var ret string
		return ret
	}
	return *o.Symbol.Get()
}

// GetSymbolOk returns a tuple with the Symbol field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiMarketDataDomainModelsResponseIndicatorResponse) GetSymbolOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Symbol.Get(), o.Symbol.IsSet()
}

// HasSymbol returns a boolean if a field has been set.
func (o *PiMarketDataDomainModelsResponseIndicatorResponse) HasSymbol() bool {
	if o != nil && o.Symbol.IsSet() {
		return true
	}

	return false
}

// SetSymbol gets a reference to the given NullableString and assigns it to the Symbol field.
func (o *PiMarketDataDomainModelsResponseIndicatorResponse) SetSymbol(v string) {
	o.Symbol.Set(&v)
}

// SetSymbolNil sets the value for Symbol to be an explicit nil
func (o *PiMarketDataDomainModelsResponseIndicatorResponse) SetSymbolNil() {
	o.Symbol.Set(nil)
}

// UnsetSymbol ensures that no value is present for Symbol, not even an explicit nil
func (o *PiMarketDataDomainModelsResponseIndicatorResponse) UnsetSymbol() {
	o.Symbol.Unset()
}

// GetCandleType returns the CandleType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiMarketDataDomainModelsResponseIndicatorResponse) GetCandleType() string {
	if o == nil || IsNil(o.CandleType.Get()) {
		var ret string
		return ret
	}
	return *o.CandleType.Get()
}

// GetCandleTypeOk returns a tuple with the CandleType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiMarketDataDomainModelsResponseIndicatorResponse) GetCandleTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CandleType.Get(), o.CandleType.IsSet()
}

// HasCandleType returns a boolean if a field has been set.
func (o *PiMarketDataDomainModelsResponseIndicatorResponse) HasCandleType() bool {
	if o != nil && o.CandleType.IsSet() {
		return true
	}

	return false
}

// SetCandleType gets a reference to the given NullableString and assigns it to the CandleType field.
func (o *PiMarketDataDomainModelsResponseIndicatorResponse) SetCandleType(v string) {
	o.CandleType.Set(&v)
}

// SetCandleTypeNil sets the value for CandleType to be an explicit nil
func (o *PiMarketDataDomainModelsResponseIndicatorResponse) SetCandleTypeNil() {
	o.CandleType.Set(nil)
}

// UnsetCandleType ensures that no value is present for CandleType, not even an explicit nil
func (o *PiMarketDataDomainModelsResponseIndicatorResponse) UnsetCandleType() {
	o.CandleType.Unset()
}

// GetCandles returns the Candles field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiMarketDataDomainModelsResponseIndicatorResponse) GetCandles() [][]interface{} {
	if o == nil {
		var ret [][]interface{}
		return ret
	}
	return o.Candles
}

// GetCandlesOk returns a tuple with the Candles field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiMarketDataDomainModelsResponseIndicatorResponse) GetCandlesOk() ([][]interface{}, bool) {
	if o == nil || IsNil(o.Candles) {
		return nil, false
	}
	return o.Candles, true
}

// HasCandles returns a boolean if a field has been set.
func (o *PiMarketDataDomainModelsResponseIndicatorResponse) HasCandles() bool {
	if o != nil && !IsNil(o.Candles) {
		return true
	}

	return false
}

// SetCandles gets a reference to the given [][]interface{} and assigns it to the Candles field.
func (o *PiMarketDataDomainModelsResponseIndicatorResponse) SetCandles(v [][]interface{}) {
	o.Candles = v
}

// GetIndicators returns the Indicators field value if set, zero value otherwise.
func (o *PiMarketDataDomainModelsResponseIndicatorResponse) GetIndicators() PiMarketDataDomainModelsResponseTechnicalIndicatorsResponse {
	if o == nil || IsNil(o.Indicators) {
		var ret PiMarketDataDomainModelsResponseTechnicalIndicatorsResponse
		return ret
	}
	return *o.Indicators
}

// GetIndicatorsOk returns a tuple with the Indicators field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PiMarketDataDomainModelsResponseIndicatorResponse) GetIndicatorsOk() (*PiMarketDataDomainModelsResponseTechnicalIndicatorsResponse, bool) {
	if o == nil || IsNil(o.Indicators) {
		return nil, false
	}
	return o.Indicators, true
}

// HasIndicators returns a boolean if a field has been set.
func (o *PiMarketDataDomainModelsResponseIndicatorResponse) HasIndicators() bool {
	if o != nil && !IsNil(o.Indicators) {
		return true
	}

	return false
}

// SetIndicators gets a reference to the given PiMarketDataDomainModelsResponseTechnicalIndicatorsResponse and assigns it to the Indicators field.
func (o *PiMarketDataDomainModelsResponseIndicatorResponse) SetIndicators(v PiMarketDataDomainModelsResponseTechnicalIndicatorsResponse) {
	o.Indicators = &v
}

// GetFirstCandleTime returns the FirstCandleTime field value if set, zero value otherwise.
func (o *PiMarketDataDomainModelsResponseIndicatorResponse) GetFirstCandleTime() int32 {
	if o == nil || IsNil(o.FirstCandleTime) {
		var ret int32
		return ret
	}
	return *o.FirstCandleTime
}

// GetFirstCandleTimeOk returns a tuple with the FirstCandleTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PiMarketDataDomainModelsResponseIndicatorResponse) GetFirstCandleTimeOk() (*int32, bool) {
	if o == nil || IsNil(o.FirstCandleTime) {
		return nil, false
	}
	return o.FirstCandleTime, true
}

// HasFirstCandleTime returns a boolean if a field has been set.
func (o *PiMarketDataDomainModelsResponseIndicatorResponse) HasFirstCandleTime() bool {
	if o != nil && !IsNil(o.FirstCandleTime) {
		return true
	}

	return false
}

// SetFirstCandleTime gets a reference to the given int32 and assigns it to the FirstCandleTime field.
func (o *PiMarketDataDomainModelsResponseIndicatorResponse) SetFirstCandleTime(v int32) {
	o.FirstCandleTime = &v
}

func (o PiMarketDataDomainModelsResponseIndicatorResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PiMarketDataDomainModelsResponseIndicatorResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Meta) {
		toSerialize["meta"] = o.Meta
	}
	if o.Venue.IsSet() {
		toSerialize["venue"] = o.Venue.Get()
	}
	if o.Symbol.IsSet() {
		toSerialize["symbol"] = o.Symbol.Get()
	}
	if o.CandleType.IsSet() {
		toSerialize["candleType"] = o.CandleType.Get()
	}
	if o.Candles != nil {
		toSerialize["candles"] = o.Candles
	}
	if !IsNil(o.Indicators) {
		toSerialize["indicators"] = o.Indicators
	}
	if !IsNil(o.FirstCandleTime) {
		toSerialize["firstCandleTime"] = o.FirstCandleTime
	}
	return toSerialize, nil
}

type NullablePiMarketDataDomainModelsResponseIndicatorResponse struct {
	value *PiMarketDataDomainModelsResponseIndicatorResponse
	isSet bool
}

func (v NullablePiMarketDataDomainModelsResponseIndicatorResponse) Get() *PiMarketDataDomainModelsResponseIndicatorResponse {
	return v.value
}

func (v *NullablePiMarketDataDomainModelsResponseIndicatorResponse) Set(val *PiMarketDataDomainModelsResponseIndicatorResponse) {
	v.value = val
	v.isSet = true
}

func (v NullablePiMarketDataDomainModelsResponseIndicatorResponse) IsSet() bool {
	return v.isSet
}

func (v *NullablePiMarketDataDomainModelsResponseIndicatorResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePiMarketDataDomainModelsResponseIndicatorResponse(val *PiMarketDataDomainModelsResponseIndicatorResponse) *NullablePiMarketDataDomainModelsResponseIndicatorResponse {
	return &NullablePiMarketDataDomainModelsResponseIndicatorResponse{value: val, isSet: true}
}

func (v NullablePiMarketDataDomainModelsResponseIndicatorResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePiMarketDataDomainModelsResponseIndicatorResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
