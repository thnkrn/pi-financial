/*
MarketData Migration Proxy API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package go_client

import (
	"encoding/json"
)

// checks if the PiMarketDataDomainModelsResponseProfileFundamentalsResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PiMarketDataDomainModelsResponseProfileFundamentalsResponse{}

// PiMarketDataDomainModelsResponseProfileFundamentalsResponse struct for PiMarketDataDomainModelsResponseProfileFundamentalsResponse
type PiMarketDataDomainModelsResponseProfileFundamentalsResponse struct {
	MarketCapitalization         NullableString `json:"marketCapitalization,omitempty"`
	ShareFreeFloat               NullableString `json:"shareFreeFloat,omitempty"`
	Industry                     NullableString `json:"industry,omitempty"`
	Sector                       NullableString `json:"sector,omitempty"`
	Country                      NullableString `json:"country,omitempty"`
	PriceToEarningsRatio         NullableString `json:"priceToEarningsRatio,omitempty"`
	PriceToBookRatio             NullableString `json:"priceToBookRatio,omitempty"`
	PriceToSalesRatio            NullableString `json:"priceToSalesRatio,omitempty"`
	DividendYieldPercentage      NullableString `json:"dividendYieldPercentage,omitempty"`
	ExDividendDate               NullableString `json:"exDividendDate,omitempty"`
	Units                        NullableString `json:"units,omitempty"`
	Source                       NullableString `json:"source,omitempty"`
	UnderlyingSymbol             NullableString `json:"underlyingSymbol,omitempty"`
	IsClickable                  *bool          `json:"isClickable,omitempty"`
	UnderlyingVenue              NullableString `json:"underlyingVenue,omitempty"`
	UnderlyingInstrumentType     NullableString `json:"underlyingInstrumentType,omitempty"`
	UnderlyingInstrumentCategory NullableString `json:"underlyingInstrumentCategory,omitempty"`
	UnderlyingLogo               NullableString `json:"underlyingLogo,omitempty"`
	ExerciseRatio                NullableString `json:"exerciseRatio,omitempty"`
	ExercisePrice                NullableString `json:"exercisePrice,omitempty"`
	ExerciseDate                 NullableString `json:"exerciseDate,omitempty"`
	DaysToExercise               NullableString `json:"daysToExercise,omitempty"`
	Moneyness                    NullableString `json:"moneyness,omitempty"`
	Direction                    NullableString `json:"direction,omitempty"`
	Multiplier                   NullableString `json:"multiplier,omitempty"`
	LastTradingDate              NullableString `json:"lastTradingDate,omitempty"`
	DaysToLastTrade              NullableString `json:"daysToLastTrade,omitempty"`
	MaturityDate                 NullableString `json:"maturityDate,omitempty"`
	IssuerSeries                 NullableString `json:"issuerSeries,omitempty"`
	ForeignCurrency              NullableString `json:"foreignCurrency,omitempty"`
	ConversionRatio              NullableString `json:"conversionRatio,omitempty"`
	UnderlyingPrice              NullableString `json:"underlyingPrice,omitempty"`
	Basis                        NullableString `json:"basis,omitempty"`
	OpenInterest                 NullableString `json:"openInterest,omitempty"`
	ContractSize                 NullableString `json:"contractSize,omitempty"`
	LastNavPerShare              NullableString `json:"lastNavPerShare,omitempty"`
	Objective                    NullableString `json:"objective,omitempty"`
	AssetClassFocus              NullableString `json:"assetClassFocus,omitempty"`
	ExpenseRatioPercentage       NullableString `json:"expenseRatioPercentage,omitempty"`
	StrikePrice                  NullableString `json:"strikePrice,omitempty"`
	TheoreticalPrice             NullableString `json:"theoreticalPrice,omitempty"`
	IntrinsicValue               NullableString `json:"intrinsicValue,omitempty"`
	ImpliedVolatilityPercentage  NullableString `json:"impliedVolatilityPercentage,omitempty"`
}

// NewPiMarketDataDomainModelsResponseProfileFundamentalsResponse instantiates a new PiMarketDataDomainModelsResponseProfileFundamentalsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPiMarketDataDomainModelsResponseProfileFundamentalsResponse() *PiMarketDataDomainModelsResponseProfileFundamentalsResponse {
	this := PiMarketDataDomainModelsResponseProfileFundamentalsResponse{}
	return &this
}

// NewPiMarketDataDomainModelsResponseProfileFundamentalsResponseWithDefaults instantiates a new PiMarketDataDomainModelsResponseProfileFundamentalsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPiMarketDataDomainModelsResponseProfileFundamentalsResponseWithDefaults() *PiMarketDataDomainModelsResponseProfileFundamentalsResponse {
	this := PiMarketDataDomainModelsResponseProfileFundamentalsResponse{}
	return &this
}

// GetMarketCapitalization returns the MarketCapitalization field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiMarketDataDomainModelsResponseProfileFundamentalsResponse) GetMarketCapitalization() string {
	if o == nil || IsNil(o.MarketCapitalization.Get()) {
		var ret string
		return ret
	}
	return *o.MarketCapitalization.Get()
}

// GetMarketCapitalizationOk returns a tuple with the MarketCapitalization field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiMarketDataDomainModelsResponseProfileFundamentalsResponse) GetMarketCapitalizationOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.MarketCapitalization.Get(), o.MarketCapitalization.IsSet()
}

// HasMarketCapitalization returns a boolean if a field has been set.
func (o *PiMarketDataDomainModelsResponseProfileFundamentalsResponse) HasMarketCapitalization() bool {
	if o != nil && o.MarketCapitalization.IsSet() {
		return true
	}

	return false
}

// SetMarketCapitalization gets a reference to the given NullableString and assigns it to the MarketCapitalization field.
func (o *PiMarketDataDomainModelsResponseProfileFundamentalsResponse) SetMarketCapitalization(v string) {
	o.MarketCapitalization.Set(&v)
}

// SetMarketCapitalizationNil sets the value for MarketCapitalization to be an explicit nil
func (o *PiMarketDataDomainModelsResponseProfileFundamentalsResponse) SetMarketCapitalizationNil() {
	o.MarketCapitalization.Set(nil)
}

// UnsetMarketCapitalization ensures that no value is present for MarketCapitalization, not even an explicit nil
func (o *PiMarketDataDomainModelsResponseProfileFundamentalsResponse) UnsetMarketCapitalization() {
	o.MarketCapitalization.Unset()
}

// GetShareFreeFloat returns the ShareFreeFloat field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiMarketDataDomainModelsResponseProfileFundamentalsResponse) GetShareFreeFloat() string {
	if o == nil || IsNil(o.ShareFreeFloat.Get()) {
		var ret string
		return ret
	}
	return *o.ShareFreeFloat.Get()
}

// GetShareFreeFloatOk returns a tuple with the ShareFreeFloat field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiMarketDataDomainModelsResponseProfileFundamentalsResponse) GetShareFreeFloatOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ShareFreeFloat.Get(), o.ShareFreeFloat.IsSet()
}

// HasShareFreeFloat returns a boolean if a field has been set.
func (o *PiMarketDataDomainModelsResponseProfileFundamentalsResponse) HasShareFreeFloat() bool {
	if o != nil && o.ShareFreeFloat.IsSet() {
		return true
	}

	return false
}

// SetShareFreeFloat gets a reference to the given NullableString and assigns it to the ShareFreeFloat field.
func (o *PiMarketDataDomainModelsResponseProfileFundamentalsResponse) SetShareFreeFloat(v string) {
	o.ShareFreeFloat.Set(&v)
}

// SetShareFreeFloatNil sets the value for ShareFreeFloat to be an explicit nil
func (o *PiMarketDataDomainModelsResponseProfileFundamentalsResponse) SetShareFreeFloatNil() {
	o.ShareFreeFloat.Set(nil)
}

// UnsetShareFreeFloat ensures that no value is present for ShareFreeFloat, not even an explicit nil
func (o *PiMarketDataDomainModelsResponseProfileFundamentalsResponse) UnsetShareFreeFloat() {
	o.ShareFreeFloat.Unset()
}

// GetIndustry returns the Industry field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiMarketDataDomainModelsResponseProfileFundamentalsResponse) GetIndustry() string {
	if o == nil || IsNil(o.Industry.Get()) {
		var ret string
		return ret
	}
	return *o.Industry.Get()
}

// GetIndustryOk returns a tuple with the Industry field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiMarketDataDomainModelsResponseProfileFundamentalsResponse) GetIndustryOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Industry.Get(), o.Industry.IsSet()
}

// HasIndustry returns a boolean if a field has been set.
func (o *PiMarketDataDomainModelsResponseProfileFundamentalsResponse) HasIndustry() bool {
	if o != nil && o.Industry.IsSet() {
		return true
	}

	return false
}

// SetIndustry gets a reference to the given NullableString and assigns it to the Industry field.
func (o *PiMarketDataDomainModelsResponseProfileFundamentalsResponse) SetIndustry(v string) {
	o.Industry.Set(&v)
}

// SetIndustryNil sets the value for Industry to be an explicit nil
func (o *PiMarketDataDomainModelsResponseProfileFundamentalsResponse) SetIndustryNil() {
	o.Industry.Set(nil)
}

// UnsetIndustry ensures that no value is present for Industry, not even an explicit nil
func (o *PiMarketDataDomainModelsResponseProfileFundamentalsResponse) UnsetIndustry() {
	o.Industry.Unset()
}

// GetSector returns the Sector field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiMarketDataDomainModelsResponseProfileFundamentalsResponse) GetSector() string {
	if o == nil || IsNil(o.Sector.Get()) {
		var ret string
		return ret
	}
	return *o.Sector.Get()
}

// GetSectorOk returns a tuple with the Sector field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiMarketDataDomainModelsResponseProfileFundamentalsResponse) GetSectorOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Sector.Get(), o.Sector.IsSet()
}

// HasSector returns a boolean if a field has been set.
func (o *PiMarketDataDomainModelsResponseProfileFundamentalsResponse) HasSector() bool {
	if o != nil && o.Sector.IsSet() {
		return true
	}

	return false
}

// SetSector gets a reference to the given NullableString and assigns it to the Sector field.
func (o *PiMarketDataDomainModelsResponseProfileFundamentalsResponse) SetSector(v string) {
	o.Sector.Set(&v)
}

// SetSectorNil sets the value for Sector to be an explicit nil
func (o *PiMarketDataDomainModelsResponseProfileFundamentalsResponse) SetSectorNil() {
	o.Sector.Set(nil)
}

// UnsetSector ensures that no value is present for Sector, not even an explicit nil
func (o *PiMarketDataDomainModelsResponseProfileFundamentalsResponse) UnsetSector() {
	o.Sector.Unset()
}

// GetCountry returns the Country field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiMarketDataDomainModelsResponseProfileFundamentalsResponse) GetCountry() string {
	if o == nil || IsNil(o.Country.Get()) {
		var ret string
		return ret
	}
	return *o.Country.Get()
}

// GetCountryOk returns a tuple with the Country field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiMarketDataDomainModelsResponseProfileFundamentalsResponse) GetCountryOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Country.Get(), o.Country.IsSet()
}

// HasCountry returns a boolean if a field has been set.
func (o *PiMarketDataDomainModelsResponseProfileFundamentalsResponse) HasCountry() bool {
	if o != nil && o.Country.IsSet() {
		return true
	}

	return false
}

// SetCountry gets a reference to the given NullableString and assigns it to the Country field.
func (o *PiMarketDataDomainModelsResponseProfileFundamentalsResponse) SetCountry(v string) {
	o.Country.Set(&v)
}

// SetCountryNil sets the value for Country to be an explicit nil
func (o *PiMarketDataDomainModelsResponseProfileFundamentalsResponse) SetCountryNil() {
	o.Country.Set(nil)
}

// UnsetCountry ensures that no value is present for Country, not even an explicit nil
func (o *PiMarketDataDomainModelsResponseProfileFundamentalsResponse) UnsetCountry() {
	o.Country.Unset()
}

// GetPriceToEarningsRatio returns the PriceToEarningsRatio field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiMarketDataDomainModelsResponseProfileFundamentalsResponse) GetPriceToEarningsRatio() string {
	if o == nil || IsNil(o.PriceToEarningsRatio.Get()) {
		var ret string
		return ret
	}
	return *o.PriceToEarningsRatio.Get()
}

// GetPriceToEarningsRatioOk returns a tuple with the PriceToEarningsRatio field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiMarketDataDomainModelsResponseProfileFundamentalsResponse) GetPriceToEarningsRatioOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PriceToEarningsRatio.Get(), o.PriceToEarningsRatio.IsSet()
}

// HasPriceToEarningsRatio returns a boolean if a field has been set.
func (o *PiMarketDataDomainModelsResponseProfileFundamentalsResponse) HasPriceToEarningsRatio() bool {
	if o != nil && o.PriceToEarningsRatio.IsSet() {
		return true
	}

	return false
}

// SetPriceToEarningsRatio gets a reference to the given NullableString and assigns it to the PriceToEarningsRatio field.
func (o *PiMarketDataDomainModelsResponseProfileFundamentalsResponse) SetPriceToEarningsRatio(v string) {
	o.PriceToEarningsRatio.Set(&v)
}

// SetPriceToEarningsRatioNil sets the value for PriceToEarningsRatio to be an explicit nil
func (o *PiMarketDataDomainModelsResponseProfileFundamentalsResponse) SetPriceToEarningsRatioNil() {
	o.PriceToEarningsRatio.Set(nil)
}

// UnsetPriceToEarningsRatio ensures that no value is present for PriceToEarningsRatio, not even an explicit nil
func (o *PiMarketDataDomainModelsResponseProfileFundamentalsResponse) UnsetPriceToEarningsRatio() {
	o.PriceToEarningsRatio.Unset()
}

// GetPriceToBookRatio returns the PriceToBookRatio field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiMarketDataDomainModelsResponseProfileFundamentalsResponse) GetPriceToBookRatio() string {
	if o == nil || IsNil(o.PriceToBookRatio.Get()) {
		var ret string
		return ret
	}
	return *o.PriceToBookRatio.Get()
}

// GetPriceToBookRatioOk returns a tuple with the PriceToBookRatio field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiMarketDataDomainModelsResponseProfileFundamentalsResponse) GetPriceToBookRatioOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PriceToBookRatio.Get(), o.PriceToBookRatio.IsSet()
}

// HasPriceToBookRatio returns a boolean if a field has been set.
func (o *PiMarketDataDomainModelsResponseProfileFundamentalsResponse) HasPriceToBookRatio() bool {
	if o != nil && o.PriceToBookRatio.IsSet() {
		return true
	}

	return false
}

// SetPriceToBookRatio gets a reference to the given NullableString and assigns it to the PriceToBookRatio field.
func (o *PiMarketDataDomainModelsResponseProfileFundamentalsResponse) SetPriceToBookRatio(v string) {
	o.PriceToBookRatio.Set(&v)
}

// SetPriceToBookRatioNil sets the value for PriceToBookRatio to be an explicit nil
func (o *PiMarketDataDomainModelsResponseProfileFundamentalsResponse) SetPriceToBookRatioNil() {
	o.PriceToBookRatio.Set(nil)
}

// UnsetPriceToBookRatio ensures that no value is present for PriceToBookRatio, not even an explicit nil
func (o *PiMarketDataDomainModelsResponseProfileFundamentalsResponse) UnsetPriceToBookRatio() {
	o.PriceToBookRatio.Unset()
}

// GetPriceToSalesRatio returns the PriceToSalesRatio field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiMarketDataDomainModelsResponseProfileFundamentalsResponse) GetPriceToSalesRatio() string {
	if o == nil || IsNil(o.PriceToSalesRatio.Get()) {
		var ret string
		return ret
	}
	return *o.PriceToSalesRatio.Get()
}

// GetPriceToSalesRatioOk returns a tuple with the PriceToSalesRatio field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiMarketDataDomainModelsResponseProfileFundamentalsResponse) GetPriceToSalesRatioOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PriceToSalesRatio.Get(), o.PriceToSalesRatio.IsSet()
}

// HasPriceToSalesRatio returns a boolean if a field has been set.
func (o *PiMarketDataDomainModelsResponseProfileFundamentalsResponse) HasPriceToSalesRatio() bool {
	if o != nil && o.PriceToSalesRatio.IsSet() {
		return true
	}

	return false
}

// SetPriceToSalesRatio gets a reference to the given NullableString and assigns it to the PriceToSalesRatio field.
func (o *PiMarketDataDomainModelsResponseProfileFundamentalsResponse) SetPriceToSalesRatio(v string) {
	o.PriceToSalesRatio.Set(&v)
}

// SetPriceToSalesRatioNil sets the value for PriceToSalesRatio to be an explicit nil
func (o *PiMarketDataDomainModelsResponseProfileFundamentalsResponse) SetPriceToSalesRatioNil() {
	o.PriceToSalesRatio.Set(nil)
}

// UnsetPriceToSalesRatio ensures that no value is present for PriceToSalesRatio, not even an explicit nil
func (o *PiMarketDataDomainModelsResponseProfileFundamentalsResponse) UnsetPriceToSalesRatio() {
	o.PriceToSalesRatio.Unset()
}

// GetDividendYieldPercentage returns the DividendYieldPercentage field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiMarketDataDomainModelsResponseProfileFundamentalsResponse) GetDividendYieldPercentage() string {
	if o == nil || IsNil(o.DividendYieldPercentage.Get()) {
		var ret string
		return ret
	}
	return *o.DividendYieldPercentage.Get()
}

// GetDividendYieldPercentageOk returns a tuple with the DividendYieldPercentage field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiMarketDataDomainModelsResponseProfileFundamentalsResponse) GetDividendYieldPercentageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.DividendYieldPercentage.Get(), o.DividendYieldPercentage.IsSet()
}

// HasDividendYieldPercentage returns a boolean if a field has been set.
func (o *PiMarketDataDomainModelsResponseProfileFundamentalsResponse) HasDividendYieldPercentage() bool {
	if o != nil && o.DividendYieldPercentage.IsSet() {
		return true
	}

	return false
}

// SetDividendYieldPercentage gets a reference to the given NullableString and assigns it to the DividendYieldPercentage field.
func (o *PiMarketDataDomainModelsResponseProfileFundamentalsResponse) SetDividendYieldPercentage(v string) {
	o.DividendYieldPercentage.Set(&v)
}

// SetDividendYieldPercentageNil sets the value for DividendYieldPercentage to be an explicit nil
func (o *PiMarketDataDomainModelsResponseProfileFundamentalsResponse) SetDividendYieldPercentageNil() {
	o.DividendYieldPercentage.Set(nil)
}

// UnsetDividendYieldPercentage ensures that no value is present for DividendYieldPercentage, not even an explicit nil
func (o *PiMarketDataDomainModelsResponseProfileFundamentalsResponse) UnsetDividendYieldPercentage() {
	o.DividendYieldPercentage.Unset()
}

// GetExDividendDate returns the ExDividendDate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiMarketDataDomainModelsResponseProfileFundamentalsResponse) GetExDividendDate() string {
	if o == nil || IsNil(o.ExDividendDate.Get()) {
		var ret string
		return ret
	}
	return *o.ExDividendDate.Get()
}

// GetExDividendDateOk returns a tuple with the ExDividendDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiMarketDataDomainModelsResponseProfileFundamentalsResponse) GetExDividendDateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ExDividendDate.Get(), o.ExDividendDate.IsSet()
}

// HasExDividendDate returns a boolean if a field has been set.
func (o *PiMarketDataDomainModelsResponseProfileFundamentalsResponse) HasExDividendDate() bool {
	if o != nil && o.ExDividendDate.IsSet() {
		return true
	}

	return false
}

// SetExDividendDate gets a reference to the given NullableString and assigns it to the ExDividendDate field.
func (o *PiMarketDataDomainModelsResponseProfileFundamentalsResponse) SetExDividendDate(v string) {
	o.ExDividendDate.Set(&v)
}

// SetExDividendDateNil sets the value for ExDividendDate to be an explicit nil
func (o *PiMarketDataDomainModelsResponseProfileFundamentalsResponse) SetExDividendDateNil() {
	o.ExDividendDate.Set(nil)
}

// UnsetExDividendDate ensures that no value is present for ExDividendDate, not even an explicit nil
func (o *PiMarketDataDomainModelsResponseProfileFundamentalsResponse) UnsetExDividendDate() {
	o.ExDividendDate.Unset()
}

// GetUnits returns the Units field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiMarketDataDomainModelsResponseProfileFundamentalsResponse) GetUnits() string {
	if o == nil || IsNil(o.Units.Get()) {
		var ret string
		return ret
	}
	return *o.Units.Get()
}

// GetUnitsOk returns a tuple with the Units field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiMarketDataDomainModelsResponseProfileFundamentalsResponse) GetUnitsOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Units.Get(), o.Units.IsSet()
}

// HasUnits returns a boolean if a field has been set.
func (o *PiMarketDataDomainModelsResponseProfileFundamentalsResponse) HasUnits() bool {
	if o != nil && o.Units.IsSet() {
		return true
	}

	return false
}

// SetUnits gets a reference to the given NullableString and assigns it to the Units field.
func (o *PiMarketDataDomainModelsResponseProfileFundamentalsResponse) SetUnits(v string) {
	o.Units.Set(&v)
}

// SetUnitsNil sets the value for Units to be an explicit nil
func (o *PiMarketDataDomainModelsResponseProfileFundamentalsResponse) SetUnitsNil() {
	o.Units.Set(nil)
}

// UnsetUnits ensures that no value is present for Units, not even an explicit nil
func (o *PiMarketDataDomainModelsResponseProfileFundamentalsResponse) UnsetUnits() {
	o.Units.Unset()
}

// GetSource returns the Source field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiMarketDataDomainModelsResponseProfileFundamentalsResponse) GetSource() string {
	if o == nil || IsNil(o.Source.Get()) {
		var ret string
		return ret
	}
	return *o.Source.Get()
}

// GetSourceOk returns a tuple with the Source field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiMarketDataDomainModelsResponseProfileFundamentalsResponse) GetSourceOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Source.Get(), o.Source.IsSet()
}

// HasSource returns a boolean if a field has been set.
func (o *PiMarketDataDomainModelsResponseProfileFundamentalsResponse) HasSource() bool {
	if o != nil && o.Source.IsSet() {
		return true
	}

	return false
}

// SetSource gets a reference to the given NullableString and assigns it to the Source field.
func (o *PiMarketDataDomainModelsResponseProfileFundamentalsResponse) SetSource(v string) {
	o.Source.Set(&v)
}

// SetSourceNil sets the value for Source to be an explicit nil
func (o *PiMarketDataDomainModelsResponseProfileFundamentalsResponse) SetSourceNil() {
	o.Source.Set(nil)
}

// UnsetSource ensures that no value is present for Source, not even an explicit nil
func (o *PiMarketDataDomainModelsResponseProfileFundamentalsResponse) UnsetSource() {
	o.Source.Unset()
}

// GetUnderlyingSymbol returns the UnderlyingSymbol field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiMarketDataDomainModelsResponseProfileFundamentalsResponse) GetUnderlyingSymbol() string {
	if o == nil || IsNil(o.UnderlyingSymbol.Get()) {
		var ret string
		return ret
	}
	return *o.UnderlyingSymbol.Get()
}

// GetUnderlyingSymbolOk returns a tuple with the UnderlyingSymbol field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiMarketDataDomainModelsResponseProfileFundamentalsResponse) GetUnderlyingSymbolOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.UnderlyingSymbol.Get(), o.UnderlyingSymbol.IsSet()
}

// HasUnderlyingSymbol returns a boolean if a field has been set.
func (o *PiMarketDataDomainModelsResponseProfileFundamentalsResponse) HasUnderlyingSymbol() bool {
	if o != nil && o.UnderlyingSymbol.IsSet() {
		return true
	}

	return false
}

// SetUnderlyingSymbol gets a reference to the given NullableString and assigns it to the UnderlyingSymbol field.
func (o *PiMarketDataDomainModelsResponseProfileFundamentalsResponse) SetUnderlyingSymbol(v string) {
	o.UnderlyingSymbol.Set(&v)
}

// SetUnderlyingSymbolNil sets the value for UnderlyingSymbol to be an explicit nil
func (o *PiMarketDataDomainModelsResponseProfileFundamentalsResponse) SetUnderlyingSymbolNil() {
	o.UnderlyingSymbol.Set(nil)
}

// UnsetUnderlyingSymbol ensures that no value is present for UnderlyingSymbol, not even an explicit nil
func (o *PiMarketDataDomainModelsResponseProfileFundamentalsResponse) UnsetUnderlyingSymbol() {
	o.UnderlyingSymbol.Unset()
}

// GetIsClickable returns the IsClickable field value if set, zero value otherwise.
func (o *PiMarketDataDomainModelsResponseProfileFundamentalsResponse) GetIsClickable() bool {
	if o == nil || IsNil(o.IsClickable) {
		var ret bool
		return ret
	}
	return *o.IsClickable
}

// GetIsClickableOk returns a tuple with the IsClickable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PiMarketDataDomainModelsResponseProfileFundamentalsResponse) GetIsClickableOk() (*bool, bool) {
	if o == nil || IsNil(o.IsClickable) {
		return nil, false
	}
	return o.IsClickable, true
}

// HasIsClickable returns a boolean if a field has been set.
func (o *PiMarketDataDomainModelsResponseProfileFundamentalsResponse) HasIsClickable() bool {
	if o != nil && !IsNil(o.IsClickable) {
		return true
	}

	return false
}

// SetIsClickable gets a reference to the given bool and assigns it to the IsClickable field.
func (o *PiMarketDataDomainModelsResponseProfileFundamentalsResponse) SetIsClickable(v bool) {
	o.IsClickable = &v
}

// GetUnderlyingVenue returns the UnderlyingVenue field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiMarketDataDomainModelsResponseProfileFundamentalsResponse) GetUnderlyingVenue() string {
	if o == nil || IsNil(o.UnderlyingVenue.Get()) {
		var ret string
		return ret
	}
	return *o.UnderlyingVenue.Get()
}

// GetUnderlyingVenueOk returns a tuple with the UnderlyingVenue field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiMarketDataDomainModelsResponseProfileFundamentalsResponse) GetUnderlyingVenueOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.UnderlyingVenue.Get(), o.UnderlyingVenue.IsSet()
}

// HasUnderlyingVenue returns a boolean if a field has been set.
func (o *PiMarketDataDomainModelsResponseProfileFundamentalsResponse) HasUnderlyingVenue() bool {
	if o != nil && o.UnderlyingVenue.IsSet() {
		return true
	}

	return false
}

// SetUnderlyingVenue gets a reference to the given NullableString and assigns it to the UnderlyingVenue field.
func (o *PiMarketDataDomainModelsResponseProfileFundamentalsResponse) SetUnderlyingVenue(v string) {
	o.UnderlyingVenue.Set(&v)
}

// SetUnderlyingVenueNil sets the value for UnderlyingVenue to be an explicit nil
func (o *PiMarketDataDomainModelsResponseProfileFundamentalsResponse) SetUnderlyingVenueNil() {
	o.UnderlyingVenue.Set(nil)
}

// UnsetUnderlyingVenue ensures that no value is present for UnderlyingVenue, not even an explicit nil
func (o *PiMarketDataDomainModelsResponseProfileFundamentalsResponse) UnsetUnderlyingVenue() {
	o.UnderlyingVenue.Unset()
}

// GetUnderlyingInstrumentType returns the UnderlyingInstrumentType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiMarketDataDomainModelsResponseProfileFundamentalsResponse) GetUnderlyingInstrumentType() string {
	if o == nil || IsNil(o.UnderlyingInstrumentType.Get()) {
		var ret string
		return ret
	}
	return *o.UnderlyingInstrumentType.Get()
}

// GetUnderlyingInstrumentTypeOk returns a tuple with the UnderlyingInstrumentType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiMarketDataDomainModelsResponseProfileFundamentalsResponse) GetUnderlyingInstrumentTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.UnderlyingInstrumentType.Get(), o.UnderlyingInstrumentType.IsSet()
}

// HasUnderlyingInstrumentType returns a boolean if a field has been set.
func (o *PiMarketDataDomainModelsResponseProfileFundamentalsResponse) HasUnderlyingInstrumentType() bool {
	if o != nil && o.UnderlyingInstrumentType.IsSet() {
		return true
	}

	return false
}

// SetUnderlyingInstrumentType gets a reference to the given NullableString and assigns it to the UnderlyingInstrumentType field.
func (o *PiMarketDataDomainModelsResponseProfileFundamentalsResponse) SetUnderlyingInstrumentType(v string) {
	o.UnderlyingInstrumentType.Set(&v)
}

// SetUnderlyingInstrumentTypeNil sets the value for UnderlyingInstrumentType to be an explicit nil
func (o *PiMarketDataDomainModelsResponseProfileFundamentalsResponse) SetUnderlyingInstrumentTypeNil() {
	o.UnderlyingInstrumentType.Set(nil)
}

// UnsetUnderlyingInstrumentType ensures that no value is present for UnderlyingInstrumentType, not even an explicit nil
func (o *PiMarketDataDomainModelsResponseProfileFundamentalsResponse) UnsetUnderlyingInstrumentType() {
	o.UnderlyingInstrumentType.Unset()
}

// GetUnderlyingInstrumentCategory returns the UnderlyingInstrumentCategory field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiMarketDataDomainModelsResponseProfileFundamentalsResponse) GetUnderlyingInstrumentCategory() string {
	if o == nil || IsNil(o.UnderlyingInstrumentCategory.Get()) {
		var ret string
		return ret
	}
	return *o.UnderlyingInstrumentCategory.Get()
}

// GetUnderlyingInstrumentCategoryOk returns a tuple with the UnderlyingInstrumentCategory field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiMarketDataDomainModelsResponseProfileFundamentalsResponse) GetUnderlyingInstrumentCategoryOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.UnderlyingInstrumentCategory.Get(), o.UnderlyingInstrumentCategory.IsSet()
}

// HasUnderlyingInstrumentCategory returns a boolean if a field has been set.
func (o *PiMarketDataDomainModelsResponseProfileFundamentalsResponse) HasUnderlyingInstrumentCategory() bool {
	if o != nil && o.UnderlyingInstrumentCategory.IsSet() {
		return true
	}

	return false
}

// SetUnderlyingInstrumentCategory gets a reference to the given NullableString and assigns it to the UnderlyingInstrumentCategory field.
func (o *PiMarketDataDomainModelsResponseProfileFundamentalsResponse) SetUnderlyingInstrumentCategory(v string) {
	o.UnderlyingInstrumentCategory.Set(&v)
}

// SetUnderlyingInstrumentCategoryNil sets the value for UnderlyingInstrumentCategory to be an explicit nil
func (o *PiMarketDataDomainModelsResponseProfileFundamentalsResponse) SetUnderlyingInstrumentCategoryNil() {
	o.UnderlyingInstrumentCategory.Set(nil)
}

// UnsetUnderlyingInstrumentCategory ensures that no value is present for UnderlyingInstrumentCategory, not even an explicit nil
func (o *PiMarketDataDomainModelsResponseProfileFundamentalsResponse) UnsetUnderlyingInstrumentCategory() {
	o.UnderlyingInstrumentCategory.Unset()
}

// GetUnderlyingLogo returns the UnderlyingLogo field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiMarketDataDomainModelsResponseProfileFundamentalsResponse) GetUnderlyingLogo() string {
	if o == nil || IsNil(o.UnderlyingLogo.Get()) {
		var ret string
		return ret
	}
	return *o.UnderlyingLogo.Get()
}

// GetUnderlyingLogoOk returns a tuple with the UnderlyingLogo field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiMarketDataDomainModelsResponseProfileFundamentalsResponse) GetUnderlyingLogoOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.UnderlyingLogo.Get(), o.UnderlyingLogo.IsSet()
}

// HasUnderlyingLogo returns a boolean if a field has been set.
func (o *PiMarketDataDomainModelsResponseProfileFundamentalsResponse) HasUnderlyingLogo() bool {
	if o != nil && o.UnderlyingLogo.IsSet() {
		return true
	}

	return false
}

// SetUnderlyingLogo gets a reference to the given NullableString and assigns it to the UnderlyingLogo field.
func (o *PiMarketDataDomainModelsResponseProfileFundamentalsResponse) SetUnderlyingLogo(v string) {
	o.UnderlyingLogo.Set(&v)
}

// SetUnderlyingLogoNil sets the value for UnderlyingLogo to be an explicit nil
func (o *PiMarketDataDomainModelsResponseProfileFundamentalsResponse) SetUnderlyingLogoNil() {
	o.UnderlyingLogo.Set(nil)
}

// UnsetUnderlyingLogo ensures that no value is present for UnderlyingLogo, not even an explicit nil
func (o *PiMarketDataDomainModelsResponseProfileFundamentalsResponse) UnsetUnderlyingLogo() {
	o.UnderlyingLogo.Unset()
}

// GetExerciseRatio returns the ExerciseRatio field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiMarketDataDomainModelsResponseProfileFundamentalsResponse) GetExerciseRatio() string {
	if o == nil || IsNil(o.ExerciseRatio.Get()) {
		var ret string
		return ret
	}
	return *o.ExerciseRatio.Get()
}

// GetExerciseRatioOk returns a tuple with the ExerciseRatio field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiMarketDataDomainModelsResponseProfileFundamentalsResponse) GetExerciseRatioOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ExerciseRatio.Get(), o.ExerciseRatio.IsSet()
}

// HasExerciseRatio returns a boolean if a field has been set.
func (o *PiMarketDataDomainModelsResponseProfileFundamentalsResponse) HasExerciseRatio() bool {
	if o != nil && o.ExerciseRatio.IsSet() {
		return true
	}

	return false
}

// SetExerciseRatio gets a reference to the given NullableString and assigns it to the ExerciseRatio field.
func (o *PiMarketDataDomainModelsResponseProfileFundamentalsResponse) SetExerciseRatio(v string) {
	o.ExerciseRatio.Set(&v)
}

// SetExerciseRatioNil sets the value for ExerciseRatio to be an explicit nil
func (o *PiMarketDataDomainModelsResponseProfileFundamentalsResponse) SetExerciseRatioNil() {
	o.ExerciseRatio.Set(nil)
}

// UnsetExerciseRatio ensures that no value is present for ExerciseRatio, not even an explicit nil
func (o *PiMarketDataDomainModelsResponseProfileFundamentalsResponse) UnsetExerciseRatio() {
	o.ExerciseRatio.Unset()
}

// GetExercisePrice returns the ExercisePrice field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiMarketDataDomainModelsResponseProfileFundamentalsResponse) GetExercisePrice() string {
	if o == nil || IsNil(o.ExercisePrice.Get()) {
		var ret string
		return ret
	}
	return *o.ExercisePrice.Get()
}

// GetExercisePriceOk returns a tuple with the ExercisePrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiMarketDataDomainModelsResponseProfileFundamentalsResponse) GetExercisePriceOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ExercisePrice.Get(), o.ExercisePrice.IsSet()
}

// HasExercisePrice returns a boolean if a field has been set.
func (o *PiMarketDataDomainModelsResponseProfileFundamentalsResponse) HasExercisePrice() bool {
	if o != nil && o.ExercisePrice.IsSet() {
		return true
	}

	return false
}

// SetExercisePrice gets a reference to the given NullableString and assigns it to the ExercisePrice field.
func (o *PiMarketDataDomainModelsResponseProfileFundamentalsResponse) SetExercisePrice(v string) {
	o.ExercisePrice.Set(&v)
}

// SetExercisePriceNil sets the value for ExercisePrice to be an explicit nil
func (o *PiMarketDataDomainModelsResponseProfileFundamentalsResponse) SetExercisePriceNil() {
	o.ExercisePrice.Set(nil)
}

// UnsetExercisePrice ensures that no value is present for ExercisePrice, not even an explicit nil
func (o *PiMarketDataDomainModelsResponseProfileFundamentalsResponse) UnsetExercisePrice() {
	o.ExercisePrice.Unset()
}

// GetExerciseDate returns the ExerciseDate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiMarketDataDomainModelsResponseProfileFundamentalsResponse) GetExerciseDate() string {
	if o == nil || IsNil(o.ExerciseDate.Get()) {
		var ret string
		return ret
	}
	return *o.ExerciseDate.Get()
}

// GetExerciseDateOk returns a tuple with the ExerciseDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiMarketDataDomainModelsResponseProfileFundamentalsResponse) GetExerciseDateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ExerciseDate.Get(), o.ExerciseDate.IsSet()
}

// HasExerciseDate returns a boolean if a field has been set.
func (o *PiMarketDataDomainModelsResponseProfileFundamentalsResponse) HasExerciseDate() bool {
	if o != nil && o.ExerciseDate.IsSet() {
		return true
	}

	return false
}

// SetExerciseDate gets a reference to the given NullableString and assigns it to the ExerciseDate field.
func (o *PiMarketDataDomainModelsResponseProfileFundamentalsResponse) SetExerciseDate(v string) {
	o.ExerciseDate.Set(&v)
}

// SetExerciseDateNil sets the value for ExerciseDate to be an explicit nil
func (o *PiMarketDataDomainModelsResponseProfileFundamentalsResponse) SetExerciseDateNil() {
	o.ExerciseDate.Set(nil)
}

// UnsetExerciseDate ensures that no value is present for ExerciseDate, not even an explicit nil
func (o *PiMarketDataDomainModelsResponseProfileFundamentalsResponse) UnsetExerciseDate() {
	o.ExerciseDate.Unset()
}

// GetDaysToExercise returns the DaysToExercise field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiMarketDataDomainModelsResponseProfileFundamentalsResponse) GetDaysToExercise() string {
	if o == nil || IsNil(o.DaysToExercise.Get()) {
		var ret string
		return ret
	}
	return *o.DaysToExercise.Get()
}

// GetDaysToExerciseOk returns a tuple with the DaysToExercise field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiMarketDataDomainModelsResponseProfileFundamentalsResponse) GetDaysToExerciseOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.DaysToExercise.Get(), o.DaysToExercise.IsSet()
}

// HasDaysToExercise returns a boolean if a field has been set.
func (o *PiMarketDataDomainModelsResponseProfileFundamentalsResponse) HasDaysToExercise() bool {
	if o != nil && o.DaysToExercise.IsSet() {
		return true
	}

	return false
}

// SetDaysToExercise gets a reference to the given NullableString and assigns it to the DaysToExercise field.
func (o *PiMarketDataDomainModelsResponseProfileFundamentalsResponse) SetDaysToExercise(v string) {
	o.DaysToExercise.Set(&v)
}

// SetDaysToExerciseNil sets the value for DaysToExercise to be an explicit nil
func (o *PiMarketDataDomainModelsResponseProfileFundamentalsResponse) SetDaysToExerciseNil() {
	o.DaysToExercise.Set(nil)
}

// UnsetDaysToExercise ensures that no value is present for DaysToExercise, not even an explicit nil
func (o *PiMarketDataDomainModelsResponseProfileFundamentalsResponse) UnsetDaysToExercise() {
	o.DaysToExercise.Unset()
}

// GetMoneyness returns the Moneyness field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiMarketDataDomainModelsResponseProfileFundamentalsResponse) GetMoneyness() string {
	if o == nil || IsNil(o.Moneyness.Get()) {
		var ret string
		return ret
	}
	return *o.Moneyness.Get()
}

// GetMoneynessOk returns a tuple with the Moneyness field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiMarketDataDomainModelsResponseProfileFundamentalsResponse) GetMoneynessOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Moneyness.Get(), o.Moneyness.IsSet()
}

// HasMoneyness returns a boolean if a field has been set.
func (o *PiMarketDataDomainModelsResponseProfileFundamentalsResponse) HasMoneyness() bool {
	if o != nil && o.Moneyness.IsSet() {
		return true
	}

	return false
}

// SetMoneyness gets a reference to the given NullableString and assigns it to the Moneyness field.
func (o *PiMarketDataDomainModelsResponseProfileFundamentalsResponse) SetMoneyness(v string) {
	o.Moneyness.Set(&v)
}

// SetMoneynessNil sets the value for Moneyness to be an explicit nil
func (o *PiMarketDataDomainModelsResponseProfileFundamentalsResponse) SetMoneynessNil() {
	o.Moneyness.Set(nil)
}

// UnsetMoneyness ensures that no value is present for Moneyness, not even an explicit nil
func (o *PiMarketDataDomainModelsResponseProfileFundamentalsResponse) UnsetMoneyness() {
	o.Moneyness.Unset()
}

// GetDirection returns the Direction field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiMarketDataDomainModelsResponseProfileFundamentalsResponse) GetDirection() string {
	if o == nil || IsNil(o.Direction.Get()) {
		var ret string
		return ret
	}
	return *o.Direction.Get()
}

// GetDirectionOk returns a tuple with the Direction field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiMarketDataDomainModelsResponseProfileFundamentalsResponse) GetDirectionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Direction.Get(), o.Direction.IsSet()
}

// HasDirection returns a boolean if a field has been set.
func (o *PiMarketDataDomainModelsResponseProfileFundamentalsResponse) HasDirection() bool {
	if o != nil && o.Direction.IsSet() {
		return true
	}

	return false
}

// SetDirection gets a reference to the given NullableString and assigns it to the Direction field.
func (o *PiMarketDataDomainModelsResponseProfileFundamentalsResponse) SetDirection(v string) {
	o.Direction.Set(&v)
}

// SetDirectionNil sets the value for Direction to be an explicit nil
func (o *PiMarketDataDomainModelsResponseProfileFundamentalsResponse) SetDirectionNil() {
	o.Direction.Set(nil)
}

// UnsetDirection ensures that no value is present for Direction, not even an explicit nil
func (o *PiMarketDataDomainModelsResponseProfileFundamentalsResponse) UnsetDirection() {
	o.Direction.Unset()
}

// GetMultiplier returns the Multiplier field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiMarketDataDomainModelsResponseProfileFundamentalsResponse) GetMultiplier() string {
	if o == nil || IsNil(o.Multiplier.Get()) {
		var ret string
		return ret
	}
	return *o.Multiplier.Get()
}

// GetMultiplierOk returns a tuple with the Multiplier field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiMarketDataDomainModelsResponseProfileFundamentalsResponse) GetMultiplierOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Multiplier.Get(), o.Multiplier.IsSet()
}

// HasMultiplier returns a boolean if a field has been set.
func (o *PiMarketDataDomainModelsResponseProfileFundamentalsResponse) HasMultiplier() bool {
	if o != nil && o.Multiplier.IsSet() {
		return true
	}

	return false
}

// SetMultiplier gets a reference to the given NullableString and assigns it to the Multiplier field.
func (o *PiMarketDataDomainModelsResponseProfileFundamentalsResponse) SetMultiplier(v string) {
	o.Multiplier.Set(&v)
}

// SetMultiplierNil sets the value for Multiplier to be an explicit nil
func (o *PiMarketDataDomainModelsResponseProfileFundamentalsResponse) SetMultiplierNil() {
	o.Multiplier.Set(nil)
}

// UnsetMultiplier ensures that no value is present for Multiplier, not even an explicit nil
func (o *PiMarketDataDomainModelsResponseProfileFundamentalsResponse) UnsetMultiplier() {
	o.Multiplier.Unset()
}

// GetLastTradingDate returns the LastTradingDate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiMarketDataDomainModelsResponseProfileFundamentalsResponse) GetLastTradingDate() string {
	if o == nil || IsNil(o.LastTradingDate.Get()) {
		var ret string
		return ret
	}
	return *o.LastTradingDate.Get()
}

// GetLastTradingDateOk returns a tuple with the LastTradingDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiMarketDataDomainModelsResponseProfileFundamentalsResponse) GetLastTradingDateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.LastTradingDate.Get(), o.LastTradingDate.IsSet()
}

// HasLastTradingDate returns a boolean if a field has been set.
func (o *PiMarketDataDomainModelsResponseProfileFundamentalsResponse) HasLastTradingDate() bool {
	if o != nil && o.LastTradingDate.IsSet() {
		return true
	}

	return false
}

// SetLastTradingDate gets a reference to the given NullableString and assigns it to the LastTradingDate field.
func (o *PiMarketDataDomainModelsResponseProfileFundamentalsResponse) SetLastTradingDate(v string) {
	o.LastTradingDate.Set(&v)
}

// SetLastTradingDateNil sets the value for LastTradingDate to be an explicit nil
func (o *PiMarketDataDomainModelsResponseProfileFundamentalsResponse) SetLastTradingDateNil() {
	o.LastTradingDate.Set(nil)
}

// UnsetLastTradingDate ensures that no value is present for LastTradingDate, not even an explicit nil
func (o *PiMarketDataDomainModelsResponseProfileFundamentalsResponse) UnsetLastTradingDate() {
	o.LastTradingDate.Unset()
}

// GetDaysToLastTrade returns the DaysToLastTrade field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiMarketDataDomainModelsResponseProfileFundamentalsResponse) GetDaysToLastTrade() string {
	if o == nil || IsNil(o.DaysToLastTrade.Get()) {
		var ret string
		return ret
	}
	return *o.DaysToLastTrade.Get()
}

// GetDaysToLastTradeOk returns a tuple with the DaysToLastTrade field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiMarketDataDomainModelsResponseProfileFundamentalsResponse) GetDaysToLastTradeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.DaysToLastTrade.Get(), o.DaysToLastTrade.IsSet()
}

// HasDaysToLastTrade returns a boolean if a field has been set.
func (o *PiMarketDataDomainModelsResponseProfileFundamentalsResponse) HasDaysToLastTrade() bool {
	if o != nil && o.DaysToLastTrade.IsSet() {
		return true
	}

	return false
}

// SetDaysToLastTrade gets a reference to the given NullableString and assigns it to the DaysToLastTrade field.
func (o *PiMarketDataDomainModelsResponseProfileFundamentalsResponse) SetDaysToLastTrade(v string) {
	o.DaysToLastTrade.Set(&v)
}

// SetDaysToLastTradeNil sets the value for DaysToLastTrade to be an explicit nil
func (o *PiMarketDataDomainModelsResponseProfileFundamentalsResponse) SetDaysToLastTradeNil() {
	o.DaysToLastTrade.Set(nil)
}

// UnsetDaysToLastTrade ensures that no value is present for DaysToLastTrade, not even an explicit nil
func (o *PiMarketDataDomainModelsResponseProfileFundamentalsResponse) UnsetDaysToLastTrade() {
	o.DaysToLastTrade.Unset()
}

// GetMaturityDate returns the MaturityDate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiMarketDataDomainModelsResponseProfileFundamentalsResponse) GetMaturityDate() string {
	if o == nil || IsNil(o.MaturityDate.Get()) {
		var ret string
		return ret
	}
	return *o.MaturityDate.Get()
}

// GetMaturityDateOk returns a tuple with the MaturityDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiMarketDataDomainModelsResponseProfileFundamentalsResponse) GetMaturityDateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.MaturityDate.Get(), o.MaturityDate.IsSet()
}

// HasMaturityDate returns a boolean if a field has been set.
func (o *PiMarketDataDomainModelsResponseProfileFundamentalsResponse) HasMaturityDate() bool {
	if o != nil && o.MaturityDate.IsSet() {
		return true
	}

	return false
}

// SetMaturityDate gets a reference to the given NullableString and assigns it to the MaturityDate field.
func (o *PiMarketDataDomainModelsResponseProfileFundamentalsResponse) SetMaturityDate(v string) {
	o.MaturityDate.Set(&v)
}

// SetMaturityDateNil sets the value for MaturityDate to be an explicit nil
func (o *PiMarketDataDomainModelsResponseProfileFundamentalsResponse) SetMaturityDateNil() {
	o.MaturityDate.Set(nil)
}

// UnsetMaturityDate ensures that no value is present for MaturityDate, not even an explicit nil
func (o *PiMarketDataDomainModelsResponseProfileFundamentalsResponse) UnsetMaturityDate() {
	o.MaturityDate.Unset()
}

// GetIssuerSeries returns the IssuerSeries field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiMarketDataDomainModelsResponseProfileFundamentalsResponse) GetIssuerSeries() string {
	if o == nil || IsNil(o.IssuerSeries.Get()) {
		var ret string
		return ret
	}
	return *o.IssuerSeries.Get()
}

// GetIssuerSeriesOk returns a tuple with the IssuerSeries field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiMarketDataDomainModelsResponseProfileFundamentalsResponse) GetIssuerSeriesOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.IssuerSeries.Get(), o.IssuerSeries.IsSet()
}

// HasIssuerSeries returns a boolean if a field has been set.
func (o *PiMarketDataDomainModelsResponseProfileFundamentalsResponse) HasIssuerSeries() bool {
	if o != nil && o.IssuerSeries.IsSet() {
		return true
	}

	return false
}

// SetIssuerSeries gets a reference to the given NullableString and assigns it to the IssuerSeries field.
func (o *PiMarketDataDomainModelsResponseProfileFundamentalsResponse) SetIssuerSeries(v string) {
	o.IssuerSeries.Set(&v)
}

// SetIssuerSeriesNil sets the value for IssuerSeries to be an explicit nil
func (o *PiMarketDataDomainModelsResponseProfileFundamentalsResponse) SetIssuerSeriesNil() {
	o.IssuerSeries.Set(nil)
}

// UnsetIssuerSeries ensures that no value is present for IssuerSeries, not even an explicit nil
func (o *PiMarketDataDomainModelsResponseProfileFundamentalsResponse) UnsetIssuerSeries() {
	o.IssuerSeries.Unset()
}

// GetForeignCurrency returns the ForeignCurrency field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiMarketDataDomainModelsResponseProfileFundamentalsResponse) GetForeignCurrency() string {
	if o == nil || IsNil(o.ForeignCurrency.Get()) {
		var ret string
		return ret
	}
	return *o.ForeignCurrency.Get()
}

// GetForeignCurrencyOk returns a tuple with the ForeignCurrency field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiMarketDataDomainModelsResponseProfileFundamentalsResponse) GetForeignCurrencyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ForeignCurrency.Get(), o.ForeignCurrency.IsSet()
}

// HasForeignCurrency returns a boolean if a field has been set.
func (o *PiMarketDataDomainModelsResponseProfileFundamentalsResponse) HasForeignCurrency() bool {
	if o != nil && o.ForeignCurrency.IsSet() {
		return true
	}

	return false
}

// SetForeignCurrency gets a reference to the given NullableString and assigns it to the ForeignCurrency field.
func (o *PiMarketDataDomainModelsResponseProfileFundamentalsResponse) SetForeignCurrency(v string) {
	o.ForeignCurrency.Set(&v)
}

// SetForeignCurrencyNil sets the value for ForeignCurrency to be an explicit nil
func (o *PiMarketDataDomainModelsResponseProfileFundamentalsResponse) SetForeignCurrencyNil() {
	o.ForeignCurrency.Set(nil)
}

// UnsetForeignCurrency ensures that no value is present for ForeignCurrency, not even an explicit nil
func (o *PiMarketDataDomainModelsResponseProfileFundamentalsResponse) UnsetForeignCurrency() {
	o.ForeignCurrency.Unset()
}

// GetConversionRatio returns the ConversionRatio field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiMarketDataDomainModelsResponseProfileFundamentalsResponse) GetConversionRatio() string {
	if o == nil || IsNil(o.ConversionRatio.Get()) {
		var ret string
		return ret
	}
	return *o.ConversionRatio.Get()
}

// GetConversionRatioOk returns a tuple with the ConversionRatio field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiMarketDataDomainModelsResponseProfileFundamentalsResponse) GetConversionRatioOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ConversionRatio.Get(), o.ConversionRatio.IsSet()
}

// HasConversionRatio returns a boolean if a field has been set.
func (o *PiMarketDataDomainModelsResponseProfileFundamentalsResponse) HasConversionRatio() bool {
	if o != nil && o.ConversionRatio.IsSet() {
		return true
	}

	return false
}

// SetConversionRatio gets a reference to the given NullableString and assigns it to the ConversionRatio field.
func (o *PiMarketDataDomainModelsResponseProfileFundamentalsResponse) SetConversionRatio(v string) {
	o.ConversionRatio.Set(&v)
}

// SetConversionRatioNil sets the value for ConversionRatio to be an explicit nil
func (o *PiMarketDataDomainModelsResponseProfileFundamentalsResponse) SetConversionRatioNil() {
	o.ConversionRatio.Set(nil)
}

// UnsetConversionRatio ensures that no value is present for ConversionRatio, not even an explicit nil
func (o *PiMarketDataDomainModelsResponseProfileFundamentalsResponse) UnsetConversionRatio() {
	o.ConversionRatio.Unset()
}

// GetUnderlyingPrice returns the UnderlyingPrice field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiMarketDataDomainModelsResponseProfileFundamentalsResponse) GetUnderlyingPrice() string {
	if o == nil || IsNil(o.UnderlyingPrice.Get()) {
		var ret string
		return ret
	}
	return *o.UnderlyingPrice.Get()
}

// GetUnderlyingPriceOk returns a tuple with the UnderlyingPrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiMarketDataDomainModelsResponseProfileFundamentalsResponse) GetUnderlyingPriceOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.UnderlyingPrice.Get(), o.UnderlyingPrice.IsSet()
}

// HasUnderlyingPrice returns a boolean if a field has been set.
func (o *PiMarketDataDomainModelsResponseProfileFundamentalsResponse) HasUnderlyingPrice() bool {
	if o != nil && o.UnderlyingPrice.IsSet() {
		return true
	}

	return false
}

// SetUnderlyingPrice gets a reference to the given NullableString and assigns it to the UnderlyingPrice field.
func (o *PiMarketDataDomainModelsResponseProfileFundamentalsResponse) SetUnderlyingPrice(v string) {
	o.UnderlyingPrice.Set(&v)
}

// SetUnderlyingPriceNil sets the value for UnderlyingPrice to be an explicit nil
func (o *PiMarketDataDomainModelsResponseProfileFundamentalsResponse) SetUnderlyingPriceNil() {
	o.UnderlyingPrice.Set(nil)
}

// UnsetUnderlyingPrice ensures that no value is present for UnderlyingPrice, not even an explicit nil
func (o *PiMarketDataDomainModelsResponseProfileFundamentalsResponse) UnsetUnderlyingPrice() {
	o.UnderlyingPrice.Unset()
}

// GetBasis returns the Basis field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiMarketDataDomainModelsResponseProfileFundamentalsResponse) GetBasis() string {
	if o == nil || IsNil(o.Basis.Get()) {
		var ret string
		return ret
	}
	return *o.Basis.Get()
}

// GetBasisOk returns a tuple with the Basis field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiMarketDataDomainModelsResponseProfileFundamentalsResponse) GetBasisOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Basis.Get(), o.Basis.IsSet()
}

// HasBasis returns a boolean if a field has been set.
func (o *PiMarketDataDomainModelsResponseProfileFundamentalsResponse) HasBasis() bool {
	if o != nil && o.Basis.IsSet() {
		return true
	}

	return false
}

// SetBasis gets a reference to the given NullableString and assigns it to the Basis field.
func (o *PiMarketDataDomainModelsResponseProfileFundamentalsResponse) SetBasis(v string) {
	o.Basis.Set(&v)
}

// SetBasisNil sets the value for Basis to be an explicit nil
func (o *PiMarketDataDomainModelsResponseProfileFundamentalsResponse) SetBasisNil() {
	o.Basis.Set(nil)
}

// UnsetBasis ensures that no value is present for Basis, not even an explicit nil
func (o *PiMarketDataDomainModelsResponseProfileFundamentalsResponse) UnsetBasis() {
	o.Basis.Unset()
}

// GetOpenInterest returns the OpenInterest field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiMarketDataDomainModelsResponseProfileFundamentalsResponse) GetOpenInterest() string {
	if o == nil || IsNil(o.OpenInterest.Get()) {
		var ret string
		return ret
	}
	return *o.OpenInterest.Get()
}

// GetOpenInterestOk returns a tuple with the OpenInterest field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiMarketDataDomainModelsResponseProfileFundamentalsResponse) GetOpenInterestOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.OpenInterest.Get(), o.OpenInterest.IsSet()
}

// HasOpenInterest returns a boolean if a field has been set.
func (o *PiMarketDataDomainModelsResponseProfileFundamentalsResponse) HasOpenInterest() bool {
	if o != nil && o.OpenInterest.IsSet() {
		return true
	}

	return false
}

// SetOpenInterest gets a reference to the given NullableString and assigns it to the OpenInterest field.
func (o *PiMarketDataDomainModelsResponseProfileFundamentalsResponse) SetOpenInterest(v string) {
	o.OpenInterest.Set(&v)
}

// SetOpenInterestNil sets the value for OpenInterest to be an explicit nil
func (o *PiMarketDataDomainModelsResponseProfileFundamentalsResponse) SetOpenInterestNil() {
	o.OpenInterest.Set(nil)
}

// UnsetOpenInterest ensures that no value is present for OpenInterest, not even an explicit nil
func (o *PiMarketDataDomainModelsResponseProfileFundamentalsResponse) UnsetOpenInterest() {
	o.OpenInterest.Unset()
}

// GetContractSize returns the ContractSize field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiMarketDataDomainModelsResponseProfileFundamentalsResponse) GetContractSize() string {
	if o == nil || IsNil(o.ContractSize.Get()) {
		var ret string
		return ret
	}
	return *o.ContractSize.Get()
}

// GetContractSizeOk returns a tuple with the ContractSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiMarketDataDomainModelsResponseProfileFundamentalsResponse) GetContractSizeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ContractSize.Get(), o.ContractSize.IsSet()
}

// HasContractSize returns a boolean if a field has been set.
func (o *PiMarketDataDomainModelsResponseProfileFundamentalsResponse) HasContractSize() bool {
	if o != nil && o.ContractSize.IsSet() {
		return true
	}

	return false
}

// SetContractSize gets a reference to the given NullableString and assigns it to the ContractSize field.
func (o *PiMarketDataDomainModelsResponseProfileFundamentalsResponse) SetContractSize(v string) {
	o.ContractSize.Set(&v)
}

// SetContractSizeNil sets the value for ContractSize to be an explicit nil
func (o *PiMarketDataDomainModelsResponseProfileFundamentalsResponse) SetContractSizeNil() {
	o.ContractSize.Set(nil)
}

// UnsetContractSize ensures that no value is present for ContractSize, not even an explicit nil
func (o *PiMarketDataDomainModelsResponseProfileFundamentalsResponse) UnsetContractSize() {
	o.ContractSize.Unset()
}

// GetLastNavPerShare returns the LastNavPerShare field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiMarketDataDomainModelsResponseProfileFundamentalsResponse) GetLastNavPerShare() string {
	if o == nil || IsNil(o.LastNavPerShare.Get()) {
		var ret string
		return ret
	}
	return *o.LastNavPerShare.Get()
}

// GetLastNavPerShareOk returns a tuple with the LastNavPerShare field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiMarketDataDomainModelsResponseProfileFundamentalsResponse) GetLastNavPerShareOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.LastNavPerShare.Get(), o.LastNavPerShare.IsSet()
}

// HasLastNavPerShare returns a boolean if a field has been set.
func (o *PiMarketDataDomainModelsResponseProfileFundamentalsResponse) HasLastNavPerShare() bool {
	if o != nil && o.LastNavPerShare.IsSet() {
		return true
	}

	return false
}

// SetLastNavPerShare gets a reference to the given NullableString and assigns it to the LastNavPerShare field.
func (o *PiMarketDataDomainModelsResponseProfileFundamentalsResponse) SetLastNavPerShare(v string) {
	o.LastNavPerShare.Set(&v)
}

// SetLastNavPerShareNil sets the value for LastNavPerShare to be an explicit nil
func (o *PiMarketDataDomainModelsResponseProfileFundamentalsResponse) SetLastNavPerShareNil() {
	o.LastNavPerShare.Set(nil)
}

// UnsetLastNavPerShare ensures that no value is present for LastNavPerShare, not even an explicit nil
func (o *PiMarketDataDomainModelsResponseProfileFundamentalsResponse) UnsetLastNavPerShare() {
	o.LastNavPerShare.Unset()
}

// GetObjective returns the Objective field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiMarketDataDomainModelsResponseProfileFundamentalsResponse) GetObjective() string {
	if o == nil || IsNil(o.Objective.Get()) {
		var ret string
		return ret
	}
	return *o.Objective.Get()
}

// GetObjectiveOk returns a tuple with the Objective field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiMarketDataDomainModelsResponseProfileFundamentalsResponse) GetObjectiveOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Objective.Get(), o.Objective.IsSet()
}

// HasObjective returns a boolean if a field has been set.
func (o *PiMarketDataDomainModelsResponseProfileFundamentalsResponse) HasObjective() bool {
	if o != nil && o.Objective.IsSet() {
		return true
	}

	return false
}

// SetObjective gets a reference to the given NullableString and assigns it to the Objective field.
func (o *PiMarketDataDomainModelsResponseProfileFundamentalsResponse) SetObjective(v string) {
	o.Objective.Set(&v)
}

// SetObjectiveNil sets the value for Objective to be an explicit nil
func (o *PiMarketDataDomainModelsResponseProfileFundamentalsResponse) SetObjectiveNil() {
	o.Objective.Set(nil)
}

// UnsetObjective ensures that no value is present for Objective, not even an explicit nil
func (o *PiMarketDataDomainModelsResponseProfileFundamentalsResponse) UnsetObjective() {
	o.Objective.Unset()
}

// GetAssetClassFocus returns the AssetClassFocus field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiMarketDataDomainModelsResponseProfileFundamentalsResponse) GetAssetClassFocus() string {
	if o == nil || IsNil(o.AssetClassFocus.Get()) {
		var ret string
		return ret
	}
	return *o.AssetClassFocus.Get()
}

// GetAssetClassFocusOk returns a tuple with the AssetClassFocus field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiMarketDataDomainModelsResponseProfileFundamentalsResponse) GetAssetClassFocusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AssetClassFocus.Get(), o.AssetClassFocus.IsSet()
}

// HasAssetClassFocus returns a boolean if a field has been set.
func (o *PiMarketDataDomainModelsResponseProfileFundamentalsResponse) HasAssetClassFocus() bool {
	if o != nil && o.AssetClassFocus.IsSet() {
		return true
	}

	return false
}

// SetAssetClassFocus gets a reference to the given NullableString and assigns it to the AssetClassFocus field.
func (o *PiMarketDataDomainModelsResponseProfileFundamentalsResponse) SetAssetClassFocus(v string) {
	o.AssetClassFocus.Set(&v)
}

// SetAssetClassFocusNil sets the value for AssetClassFocus to be an explicit nil
func (o *PiMarketDataDomainModelsResponseProfileFundamentalsResponse) SetAssetClassFocusNil() {
	o.AssetClassFocus.Set(nil)
}

// UnsetAssetClassFocus ensures that no value is present for AssetClassFocus, not even an explicit nil
func (o *PiMarketDataDomainModelsResponseProfileFundamentalsResponse) UnsetAssetClassFocus() {
	o.AssetClassFocus.Unset()
}

// GetExpenseRatioPercentage returns the ExpenseRatioPercentage field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiMarketDataDomainModelsResponseProfileFundamentalsResponse) GetExpenseRatioPercentage() string {
	if o == nil || IsNil(o.ExpenseRatioPercentage.Get()) {
		var ret string
		return ret
	}
	return *o.ExpenseRatioPercentage.Get()
}

// GetExpenseRatioPercentageOk returns a tuple with the ExpenseRatioPercentage field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiMarketDataDomainModelsResponseProfileFundamentalsResponse) GetExpenseRatioPercentageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ExpenseRatioPercentage.Get(), o.ExpenseRatioPercentage.IsSet()
}

// HasExpenseRatioPercentage returns a boolean if a field has been set.
func (o *PiMarketDataDomainModelsResponseProfileFundamentalsResponse) HasExpenseRatioPercentage() bool {
	if o != nil && o.ExpenseRatioPercentage.IsSet() {
		return true
	}

	return false
}

// SetExpenseRatioPercentage gets a reference to the given NullableString and assigns it to the ExpenseRatioPercentage field.
func (o *PiMarketDataDomainModelsResponseProfileFundamentalsResponse) SetExpenseRatioPercentage(v string) {
	o.ExpenseRatioPercentage.Set(&v)
}

// SetExpenseRatioPercentageNil sets the value for ExpenseRatioPercentage to be an explicit nil
func (o *PiMarketDataDomainModelsResponseProfileFundamentalsResponse) SetExpenseRatioPercentageNil() {
	o.ExpenseRatioPercentage.Set(nil)
}

// UnsetExpenseRatioPercentage ensures that no value is present for ExpenseRatioPercentage, not even an explicit nil
func (o *PiMarketDataDomainModelsResponseProfileFundamentalsResponse) UnsetExpenseRatioPercentage() {
	o.ExpenseRatioPercentage.Unset()
}

// GetStrikePrice returns the StrikePrice field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiMarketDataDomainModelsResponseProfileFundamentalsResponse) GetStrikePrice() string {
	if o == nil || IsNil(o.StrikePrice.Get()) {
		var ret string
		return ret
	}
	return *o.StrikePrice.Get()
}

// GetStrikePriceOk returns a tuple with the StrikePrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiMarketDataDomainModelsResponseProfileFundamentalsResponse) GetStrikePriceOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.StrikePrice.Get(), o.StrikePrice.IsSet()
}

// HasStrikePrice returns a boolean if a field has been set.
func (o *PiMarketDataDomainModelsResponseProfileFundamentalsResponse) HasStrikePrice() bool {
	if o != nil && o.StrikePrice.IsSet() {
		return true
	}

	return false
}

// SetStrikePrice gets a reference to the given NullableString and assigns it to the StrikePrice field.
func (o *PiMarketDataDomainModelsResponseProfileFundamentalsResponse) SetStrikePrice(v string) {
	o.StrikePrice.Set(&v)
}

// SetStrikePriceNil sets the value for StrikePrice to be an explicit nil
func (o *PiMarketDataDomainModelsResponseProfileFundamentalsResponse) SetStrikePriceNil() {
	o.StrikePrice.Set(nil)
}

// UnsetStrikePrice ensures that no value is present for StrikePrice, not even an explicit nil
func (o *PiMarketDataDomainModelsResponseProfileFundamentalsResponse) UnsetStrikePrice() {
	o.StrikePrice.Unset()
}

// GetTheoreticalPrice returns the TheoreticalPrice field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiMarketDataDomainModelsResponseProfileFundamentalsResponse) GetTheoreticalPrice() string {
	if o == nil || IsNil(o.TheoreticalPrice.Get()) {
		var ret string
		return ret
	}
	return *o.TheoreticalPrice.Get()
}

// GetTheoreticalPriceOk returns a tuple with the TheoreticalPrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiMarketDataDomainModelsResponseProfileFundamentalsResponse) GetTheoreticalPriceOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TheoreticalPrice.Get(), o.TheoreticalPrice.IsSet()
}

// HasTheoreticalPrice returns a boolean if a field has been set.
func (o *PiMarketDataDomainModelsResponseProfileFundamentalsResponse) HasTheoreticalPrice() bool {
	if o != nil && o.TheoreticalPrice.IsSet() {
		return true
	}

	return false
}

// SetTheoreticalPrice gets a reference to the given NullableString and assigns it to the TheoreticalPrice field.
func (o *PiMarketDataDomainModelsResponseProfileFundamentalsResponse) SetTheoreticalPrice(v string) {
	o.TheoreticalPrice.Set(&v)
}

// SetTheoreticalPriceNil sets the value for TheoreticalPrice to be an explicit nil
func (o *PiMarketDataDomainModelsResponseProfileFundamentalsResponse) SetTheoreticalPriceNil() {
	o.TheoreticalPrice.Set(nil)
}

// UnsetTheoreticalPrice ensures that no value is present for TheoreticalPrice, not even an explicit nil
func (o *PiMarketDataDomainModelsResponseProfileFundamentalsResponse) UnsetTheoreticalPrice() {
	o.TheoreticalPrice.Unset()
}

// GetIntrinsicValue returns the IntrinsicValue field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiMarketDataDomainModelsResponseProfileFundamentalsResponse) GetIntrinsicValue() string {
	if o == nil || IsNil(o.IntrinsicValue.Get()) {
		var ret string
		return ret
	}
	return *o.IntrinsicValue.Get()
}

// GetIntrinsicValueOk returns a tuple with the IntrinsicValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiMarketDataDomainModelsResponseProfileFundamentalsResponse) GetIntrinsicValueOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.IntrinsicValue.Get(), o.IntrinsicValue.IsSet()
}

// HasIntrinsicValue returns a boolean if a field has been set.
func (o *PiMarketDataDomainModelsResponseProfileFundamentalsResponse) HasIntrinsicValue() bool {
	if o != nil && o.IntrinsicValue.IsSet() {
		return true
	}

	return false
}

// SetIntrinsicValue gets a reference to the given NullableString and assigns it to the IntrinsicValue field.
func (o *PiMarketDataDomainModelsResponseProfileFundamentalsResponse) SetIntrinsicValue(v string) {
	o.IntrinsicValue.Set(&v)
}

// SetIntrinsicValueNil sets the value for IntrinsicValue to be an explicit nil
func (o *PiMarketDataDomainModelsResponseProfileFundamentalsResponse) SetIntrinsicValueNil() {
	o.IntrinsicValue.Set(nil)
}

// UnsetIntrinsicValue ensures that no value is present for IntrinsicValue, not even an explicit nil
func (o *PiMarketDataDomainModelsResponseProfileFundamentalsResponse) UnsetIntrinsicValue() {
	o.IntrinsicValue.Unset()
}

// GetImpliedVolatilityPercentage returns the ImpliedVolatilityPercentage field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiMarketDataDomainModelsResponseProfileFundamentalsResponse) GetImpliedVolatilityPercentage() string {
	if o == nil || IsNil(o.ImpliedVolatilityPercentage.Get()) {
		var ret string
		return ret
	}
	return *o.ImpliedVolatilityPercentage.Get()
}

// GetImpliedVolatilityPercentageOk returns a tuple with the ImpliedVolatilityPercentage field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiMarketDataDomainModelsResponseProfileFundamentalsResponse) GetImpliedVolatilityPercentageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ImpliedVolatilityPercentage.Get(), o.ImpliedVolatilityPercentage.IsSet()
}

// HasImpliedVolatilityPercentage returns a boolean if a field has been set.
func (o *PiMarketDataDomainModelsResponseProfileFundamentalsResponse) HasImpliedVolatilityPercentage() bool {
	if o != nil && o.ImpliedVolatilityPercentage.IsSet() {
		return true
	}

	return false
}

// SetImpliedVolatilityPercentage gets a reference to the given NullableString and assigns it to the ImpliedVolatilityPercentage field.
func (o *PiMarketDataDomainModelsResponseProfileFundamentalsResponse) SetImpliedVolatilityPercentage(v string) {
	o.ImpliedVolatilityPercentage.Set(&v)
}

// SetImpliedVolatilityPercentageNil sets the value for ImpliedVolatilityPercentage to be an explicit nil
func (o *PiMarketDataDomainModelsResponseProfileFundamentalsResponse) SetImpliedVolatilityPercentageNil() {
	o.ImpliedVolatilityPercentage.Set(nil)
}

// UnsetImpliedVolatilityPercentage ensures that no value is present for ImpliedVolatilityPercentage, not even an explicit nil
func (o *PiMarketDataDomainModelsResponseProfileFundamentalsResponse) UnsetImpliedVolatilityPercentage() {
	o.ImpliedVolatilityPercentage.Unset()
}

func (o PiMarketDataDomainModelsResponseProfileFundamentalsResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PiMarketDataDomainModelsResponseProfileFundamentalsResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.MarketCapitalization.IsSet() {
		toSerialize["marketCapitalization"] = o.MarketCapitalization.Get()
	}
	if o.ShareFreeFloat.IsSet() {
		toSerialize["shareFreeFloat"] = o.ShareFreeFloat.Get()
	}
	if o.Industry.IsSet() {
		toSerialize["industry"] = o.Industry.Get()
	}
	if o.Sector.IsSet() {
		toSerialize["sector"] = o.Sector.Get()
	}
	if o.Country.IsSet() {
		toSerialize["country"] = o.Country.Get()
	}
	if o.PriceToEarningsRatio.IsSet() {
		toSerialize["priceToEarningsRatio"] = o.PriceToEarningsRatio.Get()
	}
	if o.PriceToBookRatio.IsSet() {
		toSerialize["priceToBookRatio"] = o.PriceToBookRatio.Get()
	}
	if o.PriceToSalesRatio.IsSet() {
		toSerialize["priceToSalesRatio"] = o.PriceToSalesRatio.Get()
	}
	if o.DividendYieldPercentage.IsSet() {
		toSerialize["dividendYieldPercentage"] = o.DividendYieldPercentage.Get()
	}
	if o.ExDividendDate.IsSet() {
		toSerialize["exDividendDate"] = o.ExDividendDate.Get()
	}
	if o.Units.IsSet() {
		toSerialize["units"] = o.Units.Get()
	}
	if o.Source.IsSet() {
		toSerialize["source"] = o.Source.Get()
	}
	if o.UnderlyingSymbol.IsSet() {
		toSerialize["underlyingSymbol"] = o.UnderlyingSymbol.Get()
	}
	if !IsNil(o.IsClickable) {
		toSerialize["isClickable"] = o.IsClickable
	}
	if o.UnderlyingVenue.IsSet() {
		toSerialize["underlyingVenue"] = o.UnderlyingVenue.Get()
	}
	if o.UnderlyingInstrumentType.IsSet() {
		toSerialize["underlyingInstrumentType"] = o.UnderlyingInstrumentType.Get()
	}
	if o.UnderlyingInstrumentCategory.IsSet() {
		toSerialize["underlyingInstrumentCategory"] = o.UnderlyingInstrumentCategory.Get()
	}
	if o.UnderlyingLogo.IsSet() {
		toSerialize["underlyingLogo"] = o.UnderlyingLogo.Get()
	}
	if o.ExerciseRatio.IsSet() {
		toSerialize["exerciseRatio"] = o.ExerciseRatio.Get()
	}
	if o.ExercisePrice.IsSet() {
		toSerialize["exercisePrice"] = o.ExercisePrice.Get()
	}
	if o.ExerciseDate.IsSet() {
		toSerialize["exerciseDate"] = o.ExerciseDate.Get()
	}
	if o.DaysToExercise.IsSet() {
		toSerialize["daysToExercise"] = o.DaysToExercise.Get()
	}
	if o.Moneyness.IsSet() {
		toSerialize["moneyness"] = o.Moneyness.Get()
	}
	if o.Direction.IsSet() {
		toSerialize["direction"] = o.Direction.Get()
	}
	if o.Multiplier.IsSet() {
		toSerialize["multiplier"] = o.Multiplier.Get()
	}
	if o.LastTradingDate.IsSet() {
		toSerialize["lastTradingDate"] = o.LastTradingDate.Get()
	}
	if o.DaysToLastTrade.IsSet() {
		toSerialize["daysToLastTrade"] = o.DaysToLastTrade.Get()
	}
	if o.MaturityDate.IsSet() {
		toSerialize["maturityDate"] = o.MaturityDate.Get()
	}
	if o.IssuerSeries.IsSet() {
		toSerialize["issuerSeries"] = o.IssuerSeries.Get()
	}
	if o.ForeignCurrency.IsSet() {
		toSerialize["foreignCurrency"] = o.ForeignCurrency.Get()
	}
	if o.ConversionRatio.IsSet() {
		toSerialize["conversionRatio"] = o.ConversionRatio.Get()
	}
	if o.UnderlyingPrice.IsSet() {
		toSerialize["underlyingPrice"] = o.UnderlyingPrice.Get()
	}
	if o.Basis.IsSet() {
		toSerialize["basis"] = o.Basis.Get()
	}
	if o.OpenInterest.IsSet() {
		toSerialize["openInterest"] = o.OpenInterest.Get()
	}
	if o.ContractSize.IsSet() {
		toSerialize["contractSize"] = o.ContractSize.Get()
	}
	if o.LastNavPerShare.IsSet() {
		toSerialize["lastNavPerShare"] = o.LastNavPerShare.Get()
	}
	if o.Objective.IsSet() {
		toSerialize["objective"] = o.Objective.Get()
	}
	if o.AssetClassFocus.IsSet() {
		toSerialize["assetClassFocus"] = o.AssetClassFocus.Get()
	}
	if o.ExpenseRatioPercentage.IsSet() {
		toSerialize["expenseRatioPercentage"] = o.ExpenseRatioPercentage.Get()
	}
	if o.StrikePrice.IsSet() {
		toSerialize["strikePrice"] = o.StrikePrice.Get()
	}
	if o.TheoreticalPrice.IsSet() {
		toSerialize["theoreticalPrice"] = o.TheoreticalPrice.Get()
	}
	if o.IntrinsicValue.IsSet() {
		toSerialize["intrinsicValue"] = o.IntrinsicValue.Get()
	}
	if o.ImpliedVolatilityPercentage.IsSet() {
		toSerialize["impliedVolatilityPercentage"] = o.ImpliedVolatilityPercentage.Get()
	}
	return toSerialize, nil
}

type NullablePiMarketDataDomainModelsResponseProfileFundamentalsResponse struct {
	value *PiMarketDataDomainModelsResponseProfileFundamentalsResponse
	isSet bool
}

func (v NullablePiMarketDataDomainModelsResponseProfileFundamentalsResponse) Get() *PiMarketDataDomainModelsResponseProfileFundamentalsResponse {
	return v.value
}

func (v *NullablePiMarketDataDomainModelsResponseProfileFundamentalsResponse) Set(val *PiMarketDataDomainModelsResponseProfileFundamentalsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullablePiMarketDataDomainModelsResponseProfileFundamentalsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullablePiMarketDataDomainModelsResponseProfileFundamentalsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePiMarketDataDomainModelsResponseProfileFundamentalsResponse(val *PiMarketDataDomainModelsResponseProfileFundamentalsResponse) *NullablePiMarketDataDomainModelsResponseProfileFundamentalsResponse {
	return &NullablePiMarketDataDomainModelsResponseProfileFundamentalsResponse{value: val, isSet: true}
}

func (v NullablePiMarketDataDomainModelsResponseProfileFundamentalsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePiMarketDataDomainModelsResponseProfileFundamentalsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
