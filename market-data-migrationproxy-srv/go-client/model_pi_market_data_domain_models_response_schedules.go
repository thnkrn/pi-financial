/*
MarketData Migration Proxy API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package go_client

import (
	"encoding/json"
)

// checks if the PiMarketDataDomainModelsResponseSchedules type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PiMarketDataDomainModelsResponseSchedules{}

// PiMarketDataDomainModelsResponseSchedules struct for PiMarketDataDomainModelsResponseSchedules
type PiMarketDataDomainModelsResponseSchedules struct {
	StatusName NullableString `json:"statusName,omitempty"`
	Date       NullableString `json:"date,omitempty"`
	StartTime  *int64         `json:"startTime,omitempty"`
	EndTime    *int64         `json:"endTime,omitempty"`
}

// NewPiMarketDataDomainModelsResponseSchedules instantiates a new PiMarketDataDomainModelsResponseSchedules object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPiMarketDataDomainModelsResponseSchedules() *PiMarketDataDomainModelsResponseSchedules {
	this := PiMarketDataDomainModelsResponseSchedules{}
	return &this
}

// NewPiMarketDataDomainModelsResponseSchedulesWithDefaults instantiates a new PiMarketDataDomainModelsResponseSchedules object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPiMarketDataDomainModelsResponseSchedulesWithDefaults() *PiMarketDataDomainModelsResponseSchedules {
	this := PiMarketDataDomainModelsResponseSchedules{}
	return &this
}

// GetStatusName returns the StatusName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiMarketDataDomainModelsResponseSchedules) GetStatusName() string {
	if o == nil || IsNil(o.StatusName.Get()) {
		var ret string
		return ret
	}
	return *o.StatusName.Get()
}

// GetStatusNameOk returns a tuple with the StatusName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiMarketDataDomainModelsResponseSchedules) GetStatusNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.StatusName.Get(), o.StatusName.IsSet()
}

// HasStatusName returns a boolean if a field has been set.
func (o *PiMarketDataDomainModelsResponseSchedules) HasStatusName() bool {
	if o != nil && o.StatusName.IsSet() {
		return true
	}

	return false
}

// SetStatusName gets a reference to the given NullableString and assigns it to the StatusName field.
func (o *PiMarketDataDomainModelsResponseSchedules) SetStatusName(v string) {
	o.StatusName.Set(&v)
}

// SetStatusNameNil sets the value for StatusName to be an explicit nil
func (o *PiMarketDataDomainModelsResponseSchedules) SetStatusNameNil() {
	o.StatusName.Set(nil)
}

// UnsetStatusName ensures that no value is present for StatusName, not even an explicit nil
func (o *PiMarketDataDomainModelsResponseSchedules) UnsetStatusName() {
	o.StatusName.Unset()
}

// GetDate returns the Date field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiMarketDataDomainModelsResponseSchedules) GetDate() string {
	if o == nil || IsNil(o.Date.Get()) {
		var ret string
		return ret
	}
	return *o.Date.Get()
}

// GetDateOk returns a tuple with the Date field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiMarketDataDomainModelsResponseSchedules) GetDateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Date.Get(), o.Date.IsSet()
}

// HasDate returns a boolean if a field has been set.
func (o *PiMarketDataDomainModelsResponseSchedules) HasDate() bool {
	if o != nil && o.Date.IsSet() {
		return true
	}

	return false
}

// SetDate gets a reference to the given NullableString and assigns it to the Date field.
func (o *PiMarketDataDomainModelsResponseSchedules) SetDate(v string) {
	o.Date.Set(&v)
}

// SetDateNil sets the value for Date to be an explicit nil
func (o *PiMarketDataDomainModelsResponseSchedules) SetDateNil() {
	o.Date.Set(nil)
}

// UnsetDate ensures that no value is present for Date, not even an explicit nil
func (o *PiMarketDataDomainModelsResponseSchedules) UnsetDate() {
	o.Date.Unset()
}

// GetStartTime returns the StartTime field value if set, zero value otherwise.
func (o *PiMarketDataDomainModelsResponseSchedules) GetStartTime() int64 {
	if o == nil || IsNil(o.StartTime) {
		var ret int64
		return ret
	}
	return *o.StartTime
}

// GetStartTimeOk returns a tuple with the StartTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PiMarketDataDomainModelsResponseSchedules) GetStartTimeOk() (*int64, bool) {
	if o == nil || IsNil(o.StartTime) {
		return nil, false
	}
	return o.StartTime, true
}

// HasStartTime returns a boolean if a field has been set.
func (o *PiMarketDataDomainModelsResponseSchedules) HasStartTime() bool {
	if o != nil && !IsNil(o.StartTime) {
		return true
	}

	return false
}

// SetStartTime gets a reference to the given int64 and assigns it to the StartTime field.
func (o *PiMarketDataDomainModelsResponseSchedules) SetStartTime(v int64) {
	o.StartTime = &v
}

// GetEndTime returns the EndTime field value if set, zero value otherwise.
func (o *PiMarketDataDomainModelsResponseSchedules) GetEndTime() int64 {
	if o == nil || IsNil(o.EndTime) {
		var ret int64
		return ret
	}
	return *o.EndTime
}

// GetEndTimeOk returns a tuple with the EndTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PiMarketDataDomainModelsResponseSchedules) GetEndTimeOk() (*int64, bool) {
	if o == nil || IsNil(o.EndTime) {
		return nil, false
	}
	return o.EndTime, true
}

// HasEndTime returns a boolean if a field has been set.
func (o *PiMarketDataDomainModelsResponseSchedules) HasEndTime() bool {
	if o != nil && !IsNil(o.EndTime) {
		return true
	}

	return false
}

// SetEndTime gets a reference to the given int64 and assigns it to the EndTime field.
func (o *PiMarketDataDomainModelsResponseSchedules) SetEndTime(v int64) {
	o.EndTime = &v
}

func (o PiMarketDataDomainModelsResponseSchedules) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PiMarketDataDomainModelsResponseSchedules) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.StatusName.IsSet() {
		toSerialize["statusName"] = o.StatusName.Get()
	}
	if o.Date.IsSet() {
		toSerialize["date"] = o.Date.Get()
	}
	if !IsNil(o.StartTime) {
		toSerialize["startTime"] = o.StartTime
	}
	if !IsNil(o.EndTime) {
		toSerialize["endTime"] = o.EndTime
	}
	return toSerialize, nil
}

type NullablePiMarketDataDomainModelsResponseSchedules struct {
	value *PiMarketDataDomainModelsResponseSchedules
	isSet bool
}

func (v NullablePiMarketDataDomainModelsResponseSchedules) Get() *PiMarketDataDomainModelsResponseSchedules {
	return v.value
}

func (v *NullablePiMarketDataDomainModelsResponseSchedules) Set(val *PiMarketDataDomainModelsResponseSchedules) {
	v.value = val
	v.isSet = true
}

func (v NullablePiMarketDataDomainModelsResponseSchedules) IsSet() bool {
	return v.isSet
}

func (v *NullablePiMarketDataDomainModelsResponseSchedules) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePiMarketDataDomainModelsResponseSchedules(val *PiMarketDataDomainModelsResponseSchedules) *NullablePiMarketDataDomainModelsResponseSchedules {
	return &NullablePiMarketDataDomainModelsResponseSchedules{value: val, isSet: true}
}

func (v NullablePiMarketDataDomainModelsResponseSchedules) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePiMarketDataDomainModelsResponseSchedules) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
