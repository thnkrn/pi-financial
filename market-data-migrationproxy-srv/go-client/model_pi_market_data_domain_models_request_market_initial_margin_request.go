/*
MarketData Migration Proxy API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package go_client

import (
	"encoding/json"
	"time"
)

// checks if the PiMarketDataDomainModelsRequestMarketInitialMarginRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PiMarketDataDomainModelsRequestMarketInitialMarginRequest{}

// PiMarketDataDomainModelsRequestMarketInitialMarginRequest struct for PiMarketDataDomainModelsRequestMarketInitialMarginRequest
type PiMarketDataDomainModelsRequestMarketInitialMarginRequest struct {
	AsOfDate *time.Time                                         `json:"asOfDate,omitempty"`
	Data     []PiMarketDataDomainModelsRequestInitialMarginData `json:"data,omitempty"`
}

// NewPiMarketDataDomainModelsRequestMarketInitialMarginRequest instantiates a new PiMarketDataDomainModelsRequestMarketInitialMarginRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPiMarketDataDomainModelsRequestMarketInitialMarginRequest() *PiMarketDataDomainModelsRequestMarketInitialMarginRequest {
	this := PiMarketDataDomainModelsRequestMarketInitialMarginRequest{}
	return &this
}

// NewPiMarketDataDomainModelsRequestMarketInitialMarginRequestWithDefaults instantiates a new PiMarketDataDomainModelsRequestMarketInitialMarginRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPiMarketDataDomainModelsRequestMarketInitialMarginRequestWithDefaults() *PiMarketDataDomainModelsRequestMarketInitialMarginRequest {
	this := PiMarketDataDomainModelsRequestMarketInitialMarginRequest{}
	return &this
}

// GetAsOfDate returns the AsOfDate field value if set, zero value otherwise.
func (o *PiMarketDataDomainModelsRequestMarketInitialMarginRequest) GetAsOfDate() time.Time {
	if o == nil || IsNil(o.AsOfDate) {
		var ret time.Time
		return ret
	}
	return *o.AsOfDate
}

// GetAsOfDateOk returns a tuple with the AsOfDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PiMarketDataDomainModelsRequestMarketInitialMarginRequest) GetAsOfDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.AsOfDate) {
		return nil, false
	}
	return o.AsOfDate, true
}

// HasAsOfDate returns a boolean if a field has been set.
func (o *PiMarketDataDomainModelsRequestMarketInitialMarginRequest) HasAsOfDate() bool {
	if o != nil && !IsNil(o.AsOfDate) {
		return true
	}

	return false
}

// SetAsOfDate gets a reference to the given time.Time and assigns it to the AsOfDate field.
func (o *PiMarketDataDomainModelsRequestMarketInitialMarginRequest) SetAsOfDate(v time.Time) {
	o.AsOfDate = &v
}

// GetData returns the Data field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiMarketDataDomainModelsRequestMarketInitialMarginRequest) GetData() []PiMarketDataDomainModelsRequestInitialMarginData {
	if o == nil {
		var ret []PiMarketDataDomainModelsRequestInitialMarginData
		return ret
	}
	return o.Data
}

// GetDataOk returns a tuple with the Data field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiMarketDataDomainModelsRequestMarketInitialMarginRequest) GetDataOk() ([]PiMarketDataDomainModelsRequestInitialMarginData, bool) {
	if o == nil || IsNil(o.Data) {
		return nil, false
	}
	return o.Data, true
}

// HasData returns a boolean if a field has been set.
func (o *PiMarketDataDomainModelsRequestMarketInitialMarginRequest) HasData() bool {
	if o != nil && !IsNil(o.Data) {
		return true
	}

	return false
}

// SetData gets a reference to the given []PiMarketDataDomainModelsRequestInitialMarginData and assigns it to the Data field.
func (o *PiMarketDataDomainModelsRequestMarketInitialMarginRequest) SetData(v []PiMarketDataDomainModelsRequestInitialMarginData) {
	o.Data = v
}

func (o PiMarketDataDomainModelsRequestMarketInitialMarginRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PiMarketDataDomainModelsRequestMarketInitialMarginRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AsOfDate) {
		toSerialize["asOfDate"] = o.AsOfDate
	}
	if o.Data != nil {
		toSerialize["data"] = o.Data
	}
	return toSerialize, nil
}

type NullablePiMarketDataDomainModelsRequestMarketInitialMarginRequest struct {
	value *PiMarketDataDomainModelsRequestMarketInitialMarginRequest
	isSet bool
}

func (v NullablePiMarketDataDomainModelsRequestMarketInitialMarginRequest) Get() *PiMarketDataDomainModelsRequestMarketInitialMarginRequest {
	return v.value
}

func (v *NullablePiMarketDataDomainModelsRequestMarketInitialMarginRequest) Set(val *PiMarketDataDomainModelsRequestMarketInitialMarginRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePiMarketDataDomainModelsRequestMarketInitialMarginRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePiMarketDataDomainModelsRequestMarketInitialMarginRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePiMarketDataDomainModelsRequestMarketInitialMarginRequest(val *PiMarketDataDomainModelsRequestMarketInitialMarginRequest) *NullablePiMarketDataDomainModelsRequestMarketInitialMarginRequest {
	return &NullablePiMarketDataDomainModelsRequestMarketInitialMarginRequest{value: val, isSet: true}
}

func (v NullablePiMarketDataDomainModelsRequestMarketInitialMarginRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePiMarketDataDomainModelsRequestMarketInitialMarginRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
