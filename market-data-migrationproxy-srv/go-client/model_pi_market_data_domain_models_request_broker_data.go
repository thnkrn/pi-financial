/*
MarketData Migration Proxy API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package go_client

import (
	"encoding/json"
)

// checks if the PiMarketDataDomainModelsRequestBrokerData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PiMarketDataDomainModelsRequestBrokerData{}

// PiMarketDataDomainModelsRequestBrokerData struct for PiMarketDataDomainModelsRequestBrokerData
type PiMarketDataDomainModelsRequestBrokerData struct {
	BrokerCode NullableString `json:"brokerCode,omitempty"`
	BrokerId   NullableString `json:"brokerId,omitempty"`
}

// NewPiMarketDataDomainModelsRequestBrokerData instantiates a new PiMarketDataDomainModelsRequestBrokerData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPiMarketDataDomainModelsRequestBrokerData() *PiMarketDataDomainModelsRequestBrokerData {
	this := PiMarketDataDomainModelsRequestBrokerData{}
	return &this
}

// NewPiMarketDataDomainModelsRequestBrokerDataWithDefaults instantiates a new PiMarketDataDomainModelsRequestBrokerData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPiMarketDataDomainModelsRequestBrokerDataWithDefaults() *PiMarketDataDomainModelsRequestBrokerData {
	this := PiMarketDataDomainModelsRequestBrokerData{}
	return &this
}

// GetBrokerCode returns the BrokerCode field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiMarketDataDomainModelsRequestBrokerData) GetBrokerCode() string {
	if o == nil || IsNil(o.BrokerCode.Get()) {
		var ret string
		return ret
	}
	return *o.BrokerCode.Get()
}

// GetBrokerCodeOk returns a tuple with the BrokerCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiMarketDataDomainModelsRequestBrokerData) GetBrokerCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.BrokerCode.Get(), o.BrokerCode.IsSet()
}

// HasBrokerCode returns a boolean if a field has been set.
func (o *PiMarketDataDomainModelsRequestBrokerData) HasBrokerCode() bool {
	if o != nil && o.BrokerCode.IsSet() {
		return true
	}

	return false
}

// SetBrokerCode gets a reference to the given NullableString and assigns it to the BrokerCode field.
func (o *PiMarketDataDomainModelsRequestBrokerData) SetBrokerCode(v string) {
	o.BrokerCode.Set(&v)
}

// SetBrokerCodeNil sets the value for BrokerCode to be an explicit nil
func (o *PiMarketDataDomainModelsRequestBrokerData) SetBrokerCodeNil() {
	o.BrokerCode.Set(nil)
}

// UnsetBrokerCode ensures that no value is present for BrokerCode, not even an explicit nil
func (o *PiMarketDataDomainModelsRequestBrokerData) UnsetBrokerCode() {
	o.BrokerCode.Unset()
}

// GetBrokerId returns the BrokerId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiMarketDataDomainModelsRequestBrokerData) GetBrokerId() string {
	if o == nil || IsNil(o.BrokerId.Get()) {
		var ret string
		return ret
	}
	return *o.BrokerId.Get()
}

// GetBrokerIdOk returns a tuple with the BrokerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiMarketDataDomainModelsRequestBrokerData) GetBrokerIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.BrokerId.Get(), o.BrokerId.IsSet()
}

// HasBrokerId returns a boolean if a field has been set.
func (o *PiMarketDataDomainModelsRequestBrokerData) HasBrokerId() bool {
	if o != nil && o.BrokerId.IsSet() {
		return true
	}

	return false
}

// SetBrokerId gets a reference to the given NullableString and assigns it to the BrokerId field.
func (o *PiMarketDataDomainModelsRequestBrokerData) SetBrokerId(v string) {
	o.BrokerId.Set(&v)
}

// SetBrokerIdNil sets the value for BrokerId to be an explicit nil
func (o *PiMarketDataDomainModelsRequestBrokerData) SetBrokerIdNil() {
	o.BrokerId.Set(nil)
}

// UnsetBrokerId ensures that no value is present for BrokerId, not even an explicit nil
func (o *PiMarketDataDomainModelsRequestBrokerData) UnsetBrokerId() {
	o.BrokerId.Unset()
}

func (o PiMarketDataDomainModelsRequestBrokerData) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PiMarketDataDomainModelsRequestBrokerData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.BrokerCode.IsSet() {
		toSerialize["brokerCode"] = o.BrokerCode.Get()
	}
	if o.BrokerId.IsSet() {
		toSerialize["brokerId"] = o.BrokerId.Get()
	}
	return toSerialize, nil
}

type NullablePiMarketDataDomainModelsRequestBrokerData struct {
	value *PiMarketDataDomainModelsRequestBrokerData
	isSet bool
}

func (v NullablePiMarketDataDomainModelsRequestBrokerData) Get() *PiMarketDataDomainModelsRequestBrokerData {
	return v.value
}

func (v *NullablePiMarketDataDomainModelsRequestBrokerData) Set(val *PiMarketDataDomainModelsRequestBrokerData) {
	v.value = val
	v.isSet = true
}

func (v NullablePiMarketDataDomainModelsRequestBrokerData) IsSet() bool {
	return v.isSet
}

func (v *NullablePiMarketDataDomainModelsRequestBrokerData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePiMarketDataDomainModelsRequestBrokerData(val *PiMarketDataDomainModelsRequestBrokerData) *NullablePiMarketDataDomainModelsRequestBrokerData {
	return &NullablePiMarketDataDomainModelsRequestBrokerData{value: val, isSet: true}
}

func (v NullablePiMarketDataDomainModelsRequestBrokerData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePiMarketDataDomainModelsRequestBrokerData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
