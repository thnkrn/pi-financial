/*
MarketData Migration Proxy API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package go_client

import (
	"encoding/json"
)

// checks if the PiMarketDataDomainModelsResponseTechnicalIndicatorsResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PiMarketDataDomainModelsResponseTechnicalIndicatorsResponse{}

// PiMarketDataDomainModelsResponseTechnicalIndicatorsResponse struct for PiMarketDataDomainModelsResponseTechnicalIndicatorsResponse
type PiMarketDataDomainModelsResponseTechnicalIndicatorsResponse struct {
	Boll []interface{} `json:"boll,omitempty"`
	Ema  []interface{} `json:"ema,omitempty"`
	Kdj  []interface{} `json:"kdj,omitempty"`
	Ma   []interface{} `json:"ma,omitempty"`
	Macd []interface{} `json:"macd,omitempty"`
	Rsi  []interface{} `json:"rsi,omitempty"`
}

// NewPiMarketDataDomainModelsResponseTechnicalIndicatorsResponse instantiates a new PiMarketDataDomainModelsResponseTechnicalIndicatorsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPiMarketDataDomainModelsResponseTechnicalIndicatorsResponse() *PiMarketDataDomainModelsResponseTechnicalIndicatorsResponse {
	this := PiMarketDataDomainModelsResponseTechnicalIndicatorsResponse{}
	return &this
}

// NewPiMarketDataDomainModelsResponseTechnicalIndicatorsResponseWithDefaults instantiates a new PiMarketDataDomainModelsResponseTechnicalIndicatorsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPiMarketDataDomainModelsResponseTechnicalIndicatorsResponseWithDefaults() *PiMarketDataDomainModelsResponseTechnicalIndicatorsResponse {
	this := PiMarketDataDomainModelsResponseTechnicalIndicatorsResponse{}
	return &this
}

// GetBoll returns the Boll field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiMarketDataDomainModelsResponseTechnicalIndicatorsResponse) GetBoll() []interface{} {
	if o == nil {
		var ret []interface{}
		return ret
	}
	return o.Boll
}

// GetBollOk returns a tuple with the Boll field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiMarketDataDomainModelsResponseTechnicalIndicatorsResponse) GetBollOk() ([]interface{}, bool) {
	if o == nil || IsNil(o.Boll) {
		return nil, false
	}
	return o.Boll, true
}

// HasBoll returns a boolean if a field has been set.
func (o *PiMarketDataDomainModelsResponseTechnicalIndicatorsResponse) HasBoll() bool {
	if o != nil && !IsNil(o.Boll) {
		return true
	}

	return false
}

// SetBoll gets a reference to the given []interface{} and assigns it to the Boll field.
func (o *PiMarketDataDomainModelsResponseTechnicalIndicatorsResponse) SetBoll(v []interface{}) {
	o.Boll = v
}

// GetEma returns the Ema field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiMarketDataDomainModelsResponseTechnicalIndicatorsResponse) GetEma() []interface{} {
	if o == nil {
		var ret []interface{}
		return ret
	}
	return o.Ema
}

// GetEmaOk returns a tuple with the Ema field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiMarketDataDomainModelsResponseTechnicalIndicatorsResponse) GetEmaOk() ([]interface{}, bool) {
	if o == nil || IsNil(o.Ema) {
		return nil, false
	}
	return o.Ema, true
}

// HasEma returns a boolean if a field has been set.
func (o *PiMarketDataDomainModelsResponseTechnicalIndicatorsResponse) HasEma() bool {
	if o != nil && !IsNil(o.Ema) {
		return true
	}

	return false
}

// SetEma gets a reference to the given []interface{} and assigns it to the Ema field.
func (o *PiMarketDataDomainModelsResponseTechnicalIndicatorsResponse) SetEma(v []interface{}) {
	o.Ema = v
}

// GetKdj returns the Kdj field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiMarketDataDomainModelsResponseTechnicalIndicatorsResponse) GetKdj() []interface{} {
	if o == nil {
		var ret []interface{}
		return ret
	}
	return o.Kdj
}

// GetKdjOk returns a tuple with the Kdj field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiMarketDataDomainModelsResponseTechnicalIndicatorsResponse) GetKdjOk() ([]interface{}, bool) {
	if o == nil || IsNil(o.Kdj) {
		return nil, false
	}
	return o.Kdj, true
}

// HasKdj returns a boolean if a field has been set.
func (o *PiMarketDataDomainModelsResponseTechnicalIndicatorsResponse) HasKdj() bool {
	if o != nil && !IsNil(o.Kdj) {
		return true
	}

	return false
}

// SetKdj gets a reference to the given []interface{} and assigns it to the Kdj field.
func (o *PiMarketDataDomainModelsResponseTechnicalIndicatorsResponse) SetKdj(v []interface{}) {
	o.Kdj = v
}

// GetMa returns the Ma field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiMarketDataDomainModelsResponseTechnicalIndicatorsResponse) GetMa() []interface{} {
	if o == nil {
		var ret []interface{}
		return ret
	}
	return o.Ma
}

// GetMaOk returns a tuple with the Ma field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiMarketDataDomainModelsResponseTechnicalIndicatorsResponse) GetMaOk() ([]interface{}, bool) {
	if o == nil || IsNil(o.Ma) {
		return nil, false
	}
	return o.Ma, true
}

// HasMa returns a boolean if a field has been set.
func (o *PiMarketDataDomainModelsResponseTechnicalIndicatorsResponse) HasMa() bool {
	if o != nil && !IsNil(o.Ma) {
		return true
	}

	return false
}

// SetMa gets a reference to the given []interface{} and assigns it to the Ma field.
func (o *PiMarketDataDomainModelsResponseTechnicalIndicatorsResponse) SetMa(v []interface{}) {
	o.Ma = v
}

// GetMacd returns the Macd field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiMarketDataDomainModelsResponseTechnicalIndicatorsResponse) GetMacd() []interface{} {
	if o == nil {
		var ret []interface{}
		return ret
	}
	return o.Macd
}

// GetMacdOk returns a tuple with the Macd field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiMarketDataDomainModelsResponseTechnicalIndicatorsResponse) GetMacdOk() ([]interface{}, bool) {
	if o == nil || IsNil(o.Macd) {
		return nil, false
	}
	return o.Macd, true
}

// HasMacd returns a boolean if a field has been set.
func (o *PiMarketDataDomainModelsResponseTechnicalIndicatorsResponse) HasMacd() bool {
	if o != nil && !IsNil(o.Macd) {
		return true
	}

	return false
}

// SetMacd gets a reference to the given []interface{} and assigns it to the Macd field.
func (o *PiMarketDataDomainModelsResponseTechnicalIndicatorsResponse) SetMacd(v []interface{}) {
	o.Macd = v
}

// GetRsi returns the Rsi field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiMarketDataDomainModelsResponseTechnicalIndicatorsResponse) GetRsi() []interface{} {
	if o == nil {
		var ret []interface{}
		return ret
	}
	return o.Rsi
}

// GetRsiOk returns a tuple with the Rsi field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiMarketDataDomainModelsResponseTechnicalIndicatorsResponse) GetRsiOk() ([]interface{}, bool) {
	if o == nil || IsNil(o.Rsi) {
		return nil, false
	}
	return o.Rsi, true
}

// HasRsi returns a boolean if a field has been set.
func (o *PiMarketDataDomainModelsResponseTechnicalIndicatorsResponse) HasRsi() bool {
	if o != nil && !IsNil(o.Rsi) {
		return true
	}

	return false
}

// SetRsi gets a reference to the given []interface{} and assigns it to the Rsi field.
func (o *PiMarketDataDomainModelsResponseTechnicalIndicatorsResponse) SetRsi(v []interface{}) {
	o.Rsi = v
}

func (o PiMarketDataDomainModelsResponseTechnicalIndicatorsResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PiMarketDataDomainModelsResponseTechnicalIndicatorsResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Boll != nil {
		toSerialize["boll"] = o.Boll
	}
	if o.Ema != nil {
		toSerialize["ema"] = o.Ema
	}
	if o.Kdj != nil {
		toSerialize["kdj"] = o.Kdj
	}
	if o.Ma != nil {
		toSerialize["ma"] = o.Ma
	}
	if o.Macd != nil {
		toSerialize["macd"] = o.Macd
	}
	if o.Rsi != nil {
		toSerialize["rsi"] = o.Rsi
	}
	return toSerialize, nil
}

type NullablePiMarketDataDomainModelsResponseTechnicalIndicatorsResponse struct {
	value *PiMarketDataDomainModelsResponseTechnicalIndicatorsResponse
	isSet bool
}

func (v NullablePiMarketDataDomainModelsResponseTechnicalIndicatorsResponse) Get() *PiMarketDataDomainModelsResponseTechnicalIndicatorsResponse {
	return v.value
}

func (v *NullablePiMarketDataDomainModelsResponseTechnicalIndicatorsResponse) Set(val *PiMarketDataDomainModelsResponseTechnicalIndicatorsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullablePiMarketDataDomainModelsResponseTechnicalIndicatorsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullablePiMarketDataDomainModelsResponseTechnicalIndicatorsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePiMarketDataDomainModelsResponseTechnicalIndicatorsResponse(val *PiMarketDataDomainModelsResponseTechnicalIndicatorsResponse) *NullablePiMarketDataDomainModelsResponseTechnicalIndicatorsResponse {
	return &NullablePiMarketDataDomainModelsResponseTechnicalIndicatorsResponse{value: val, isSet: true}
}

func (v NullablePiMarketDataDomainModelsResponseTechnicalIndicatorsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePiMarketDataDomainModelsResponseTechnicalIndicatorsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
