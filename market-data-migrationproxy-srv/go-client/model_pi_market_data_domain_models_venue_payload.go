/*
MarketData Migration Proxy API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package go_client

import (
	"encoding/json"
)

// checks if the PiMarketDataDomainModelsVenuePayload type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PiMarketDataDomainModelsVenuePayload{}

// PiMarketDataDomainModelsVenuePayload struct for PiMarketDataDomainModelsVenuePayload
type PiMarketDataDomainModelsVenuePayload struct {
	Param []PiMarketDataDomainModelsCommonPayload `json:"param,omitempty"`
}

// NewPiMarketDataDomainModelsVenuePayload instantiates a new PiMarketDataDomainModelsVenuePayload object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPiMarketDataDomainModelsVenuePayload() *PiMarketDataDomainModelsVenuePayload {
	this := PiMarketDataDomainModelsVenuePayload{}
	return &this
}

// NewPiMarketDataDomainModelsVenuePayloadWithDefaults instantiates a new PiMarketDataDomainModelsVenuePayload object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPiMarketDataDomainModelsVenuePayloadWithDefaults() *PiMarketDataDomainModelsVenuePayload {
	this := PiMarketDataDomainModelsVenuePayload{}
	return &this
}

// GetParam returns the Param field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiMarketDataDomainModelsVenuePayload) GetParam() []PiMarketDataDomainModelsCommonPayload {
	if o == nil {
		var ret []PiMarketDataDomainModelsCommonPayload
		return ret
	}
	return o.Param
}

// GetParamOk returns a tuple with the Param field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiMarketDataDomainModelsVenuePayload) GetParamOk() ([]PiMarketDataDomainModelsCommonPayload, bool) {
	if o == nil || IsNil(o.Param) {
		return nil, false
	}
	return o.Param, true
}

// HasParam returns a boolean if a field has been set.
func (o *PiMarketDataDomainModelsVenuePayload) HasParam() bool {
	if o != nil && !IsNil(o.Param) {
		return true
	}

	return false
}

// SetParam gets a reference to the given []PiMarketDataDomainModelsCommonPayload and assigns it to the Param field.
func (o *PiMarketDataDomainModelsVenuePayload) SetParam(v []PiMarketDataDomainModelsCommonPayload) {
	o.Param = v
}

func (o PiMarketDataDomainModelsVenuePayload) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PiMarketDataDomainModelsVenuePayload) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Param != nil {
		toSerialize["param"] = o.Param
	}
	return toSerialize, nil
}

type NullablePiMarketDataDomainModelsVenuePayload struct {
	value *PiMarketDataDomainModelsVenuePayload
	isSet bool
}

func (v NullablePiMarketDataDomainModelsVenuePayload) Get() *PiMarketDataDomainModelsVenuePayload {
	return v.value
}

func (v *NullablePiMarketDataDomainModelsVenuePayload) Set(val *PiMarketDataDomainModelsVenuePayload) {
	v.value = val
	v.isSet = true
}

func (v NullablePiMarketDataDomainModelsVenuePayload) IsSet() bool {
	return v.isSet
}

func (v *NullablePiMarketDataDomainModelsVenuePayload) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePiMarketDataDomainModelsVenuePayload(val *PiMarketDataDomainModelsVenuePayload) *NullablePiMarketDataDomainModelsVenuePayload {
	return &NullablePiMarketDataDomainModelsVenuePayload{value: val, isSet: true}
}

func (v NullablePiMarketDataDomainModelsVenuePayload) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePiMarketDataDomainModelsVenuePayload) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
