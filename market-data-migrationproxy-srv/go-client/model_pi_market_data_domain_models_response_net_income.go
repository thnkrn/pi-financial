/*
MarketData Migration Proxy API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package go_client

import (
	"encoding/json"
)

// checks if the PiMarketDataDomainModelsResponseNetIncome type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PiMarketDataDomainModelsResponseNetIncome{}

// PiMarketDataDomainModelsResponseNetIncome struct for PiMarketDataDomainModelsResponseNetIncome
type PiMarketDataDomainModelsResponseNetIncome struct {
	Yy            NullableString `json:"yy,omitempty"`
	List          []string       `json:"list,omitempty"`
	StatementType NullableString `json:"statementType,omitempty"`
}

// NewPiMarketDataDomainModelsResponseNetIncome instantiates a new PiMarketDataDomainModelsResponseNetIncome object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPiMarketDataDomainModelsResponseNetIncome() *PiMarketDataDomainModelsResponseNetIncome {
	this := PiMarketDataDomainModelsResponseNetIncome{}
	return &this
}

// NewPiMarketDataDomainModelsResponseNetIncomeWithDefaults instantiates a new PiMarketDataDomainModelsResponseNetIncome object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPiMarketDataDomainModelsResponseNetIncomeWithDefaults() *PiMarketDataDomainModelsResponseNetIncome {
	this := PiMarketDataDomainModelsResponseNetIncome{}
	return &this
}

// GetYy returns the Yy field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiMarketDataDomainModelsResponseNetIncome) GetYy() string {
	if o == nil || IsNil(o.Yy.Get()) {
		var ret string
		return ret
	}
	return *o.Yy.Get()
}

// GetYyOk returns a tuple with the Yy field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiMarketDataDomainModelsResponseNetIncome) GetYyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Yy.Get(), o.Yy.IsSet()
}

// HasYy returns a boolean if a field has been set.
func (o *PiMarketDataDomainModelsResponseNetIncome) HasYy() bool {
	if o != nil && o.Yy.IsSet() {
		return true
	}

	return false
}

// SetYy gets a reference to the given NullableString and assigns it to the Yy field.
func (o *PiMarketDataDomainModelsResponseNetIncome) SetYy(v string) {
	o.Yy.Set(&v)
}

// SetYyNil sets the value for Yy to be an explicit nil
func (o *PiMarketDataDomainModelsResponseNetIncome) SetYyNil() {
	o.Yy.Set(nil)
}

// UnsetYy ensures that no value is present for Yy, not even an explicit nil
func (o *PiMarketDataDomainModelsResponseNetIncome) UnsetYy() {
	o.Yy.Unset()
}

// GetList returns the List field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiMarketDataDomainModelsResponseNetIncome) GetList() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.List
}

// GetListOk returns a tuple with the List field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiMarketDataDomainModelsResponseNetIncome) GetListOk() ([]string, bool) {
	if o == nil || IsNil(o.List) {
		return nil, false
	}
	return o.List, true
}

// HasList returns a boolean if a field has been set.
func (o *PiMarketDataDomainModelsResponseNetIncome) HasList() bool {
	if o != nil && !IsNil(o.List) {
		return true
	}

	return false
}

// SetList gets a reference to the given []string and assigns it to the List field.
func (o *PiMarketDataDomainModelsResponseNetIncome) SetList(v []string) {
	o.List = v
}

// GetStatementType returns the StatementType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiMarketDataDomainModelsResponseNetIncome) GetStatementType() string {
	if o == nil || IsNil(o.StatementType.Get()) {
		var ret string
		return ret
	}
	return *o.StatementType.Get()
}

// GetStatementTypeOk returns a tuple with the StatementType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiMarketDataDomainModelsResponseNetIncome) GetStatementTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.StatementType.Get(), o.StatementType.IsSet()
}

// HasStatementType returns a boolean if a field has been set.
func (o *PiMarketDataDomainModelsResponseNetIncome) HasStatementType() bool {
	if o != nil && o.StatementType.IsSet() {
		return true
	}

	return false
}

// SetStatementType gets a reference to the given NullableString and assigns it to the StatementType field.
func (o *PiMarketDataDomainModelsResponseNetIncome) SetStatementType(v string) {
	o.StatementType.Set(&v)
}

// SetStatementTypeNil sets the value for StatementType to be an explicit nil
func (o *PiMarketDataDomainModelsResponseNetIncome) SetStatementTypeNil() {
	o.StatementType.Set(nil)
}

// UnsetStatementType ensures that no value is present for StatementType, not even an explicit nil
func (o *PiMarketDataDomainModelsResponseNetIncome) UnsetStatementType() {
	o.StatementType.Unset()
}

func (o PiMarketDataDomainModelsResponseNetIncome) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PiMarketDataDomainModelsResponseNetIncome) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Yy.IsSet() {
		toSerialize["yy"] = o.Yy.Get()
	}
	if o.List != nil {
		toSerialize["list"] = o.List
	}
	if o.StatementType.IsSet() {
		toSerialize["statementType"] = o.StatementType.Get()
	}
	return toSerialize, nil
}

type NullablePiMarketDataDomainModelsResponseNetIncome struct {
	value *PiMarketDataDomainModelsResponseNetIncome
	isSet bool
}

func (v NullablePiMarketDataDomainModelsResponseNetIncome) Get() *PiMarketDataDomainModelsResponseNetIncome {
	return v.value
}

func (v *NullablePiMarketDataDomainModelsResponseNetIncome) Set(val *PiMarketDataDomainModelsResponseNetIncome) {
	v.value = val
	v.isSet = true
}

func (v NullablePiMarketDataDomainModelsResponseNetIncome) IsSet() bool {
	return v.isSet
}

func (v *NullablePiMarketDataDomainModelsResponseNetIncome) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePiMarketDataDomainModelsResponseNetIncome(val *PiMarketDataDomainModelsResponseNetIncome) *NullablePiMarketDataDomainModelsResponseNetIncome {
	return &NullablePiMarketDataDomainModelsResponseNetIncome{value: val, isSet: true}
}

func (v NullablePiMarketDataDomainModelsResponseNetIncome) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePiMarketDataDomainModelsResponseNetIncome) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
