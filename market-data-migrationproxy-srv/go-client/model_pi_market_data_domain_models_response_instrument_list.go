/*
MarketData Migration Proxy API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package go_client

import (
	"encoding/json"
)

// checks if the PiMarketDataDomainModelsResponseInstrumentList type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PiMarketDataDomainModelsResponseInstrumentList{}

// PiMarketDataDomainModelsResponseInstrumentList struct for PiMarketDataDomainModelsResponseInstrumentList
type PiMarketDataDomainModelsResponseInstrumentList struct {
	Order              *int32         `json:"order,omitempty"`
	InstrumentType     NullableString `json:"instrumentType,omitempty"`
	InstrumentCategory NullableString `json:"instrumentCategory,omitempty"`
	Venue              NullableString `json:"venue,omitempty"`
	Symbol             NullableString `json:"symbol,omitempty"`
	FriendlyName       NullableString `json:"friendlyName,omitempty"`
	Logo               NullableString `json:"logo,omitempty"`
	Unit               NullableString `json:"unit,omitempty"`
	Price              NullableString `json:"price,omitempty"`
	PriceChange        NullableString `json:"priceChange,omitempty"`
	PriceChangeRatio   NullableString `json:"priceChangeRatio,omitempty"`
	TotalValue         NullableString `json:"totalValue,omitempty"`
	TotalVolume        NullableString `json:"totalVolume,omitempty"`
}

// NewPiMarketDataDomainModelsResponseInstrumentList instantiates a new PiMarketDataDomainModelsResponseInstrumentList object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPiMarketDataDomainModelsResponseInstrumentList() *PiMarketDataDomainModelsResponseInstrumentList {
	this := PiMarketDataDomainModelsResponseInstrumentList{}
	return &this
}

// NewPiMarketDataDomainModelsResponseInstrumentListWithDefaults instantiates a new PiMarketDataDomainModelsResponseInstrumentList object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPiMarketDataDomainModelsResponseInstrumentListWithDefaults() *PiMarketDataDomainModelsResponseInstrumentList {
	this := PiMarketDataDomainModelsResponseInstrumentList{}
	return &this
}

// GetOrder returns the Order field value if set, zero value otherwise.
func (o *PiMarketDataDomainModelsResponseInstrumentList) GetOrder() int32 {
	if o == nil || IsNil(o.Order) {
		var ret int32
		return ret
	}
	return *o.Order
}

// GetOrderOk returns a tuple with the Order field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PiMarketDataDomainModelsResponseInstrumentList) GetOrderOk() (*int32, bool) {
	if o == nil || IsNil(o.Order) {
		return nil, false
	}
	return o.Order, true
}

// HasOrder returns a boolean if a field has been set.
func (o *PiMarketDataDomainModelsResponseInstrumentList) HasOrder() bool {
	if o != nil && !IsNil(o.Order) {
		return true
	}

	return false
}

// SetOrder gets a reference to the given int32 and assigns it to the Order field.
func (o *PiMarketDataDomainModelsResponseInstrumentList) SetOrder(v int32) {
	o.Order = &v
}

// GetInstrumentType returns the InstrumentType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiMarketDataDomainModelsResponseInstrumentList) GetInstrumentType() string {
	if o == nil || IsNil(o.InstrumentType.Get()) {
		var ret string
		return ret
	}
	return *o.InstrumentType.Get()
}

// GetInstrumentTypeOk returns a tuple with the InstrumentType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiMarketDataDomainModelsResponseInstrumentList) GetInstrumentTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.InstrumentType.Get(), o.InstrumentType.IsSet()
}

// HasInstrumentType returns a boolean if a field has been set.
func (o *PiMarketDataDomainModelsResponseInstrumentList) HasInstrumentType() bool {
	if o != nil && o.InstrumentType.IsSet() {
		return true
	}

	return false
}

// SetInstrumentType gets a reference to the given NullableString and assigns it to the InstrumentType field.
func (o *PiMarketDataDomainModelsResponseInstrumentList) SetInstrumentType(v string) {
	o.InstrumentType.Set(&v)
}

// SetInstrumentTypeNil sets the value for InstrumentType to be an explicit nil
func (o *PiMarketDataDomainModelsResponseInstrumentList) SetInstrumentTypeNil() {
	o.InstrumentType.Set(nil)
}

// UnsetInstrumentType ensures that no value is present for InstrumentType, not even an explicit nil
func (o *PiMarketDataDomainModelsResponseInstrumentList) UnsetInstrumentType() {
	o.InstrumentType.Unset()
}

// GetInstrumentCategory returns the InstrumentCategory field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiMarketDataDomainModelsResponseInstrumentList) GetInstrumentCategory() string {
	if o == nil || IsNil(o.InstrumentCategory.Get()) {
		var ret string
		return ret
	}
	return *o.InstrumentCategory.Get()
}

// GetInstrumentCategoryOk returns a tuple with the InstrumentCategory field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiMarketDataDomainModelsResponseInstrumentList) GetInstrumentCategoryOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.InstrumentCategory.Get(), o.InstrumentCategory.IsSet()
}

// HasInstrumentCategory returns a boolean if a field has been set.
func (o *PiMarketDataDomainModelsResponseInstrumentList) HasInstrumentCategory() bool {
	if o != nil && o.InstrumentCategory.IsSet() {
		return true
	}

	return false
}

// SetInstrumentCategory gets a reference to the given NullableString and assigns it to the InstrumentCategory field.
func (o *PiMarketDataDomainModelsResponseInstrumentList) SetInstrumentCategory(v string) {
	o.InstrumentCategory.Set(&v)
}

// SetInstrumentCategoryNil sets the value for InstrumentCategory to be an explicit nil
func (o *PiMarketDataDomainModelsResponseInstrumentList) SetInstrumentCategoryNil() {
	o.InstrumentCategory.Set(nil)
}

// UnsetInstrumentCategory ensures that no value is present for InstrumentCategory, not even an explicit nil
func (o *PiMarketDataDomainModelsResponseInstrumentList) UnsetInstrumentCategory() {
	o.InstrumentCategory.Unset()
}

// GetVenue returns the Venue field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiMarketDataDomainModelsResponseInstrumentList) GetVenue() string {
	if o == nil || IsNil(o.Venue.Get()) {
		var ret string
		return ret
	}
	return *o.Venue.Get()
}

// GetVenueOk returns a tuple with the Venue field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiMarketDataDomainModelsResponseInstrumentList) GetVenueOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Venue.Get(), o.Venue.IsSet()
}

// HasVenue returns a boolean if a field has been set.
func (o *PiMarketDataDomainModelsResponseInstrumentList) HasVenue() bool {
	if o != nil && o.Venue.IsSet() {
		return true
	}

	return false
}

// SetVenue gets a reference to the given NullableString and assigns it to the Venue field.
func (o *PiMarketDataDomainModelsResponseInstrumentList) SetVenue(v string) {
	o.Venue.Set(&v)
}

// SetVenueNil sets the value for Venue to be an explicit nil
func (o *PiMarketDataDomainModelsResponseInstrumentList) SetVenueNil() {
	o.Venue.Set(nil)
}

// UnsetVenue ensures that no value is present for Venue, not even an explicit nil
func (o *PiMarketDataDomainModelsResponseInstrumentList) UnsetVenue() {
	o.Venue.Unset()
}

// GetSymbol returns the Symbol field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiMarketDataDomainModelsResponseInstrumentList) GetSymbol() string {
	if o == nil || IsNil(o.Symbol.Get()) {
		var ret string
		return ret
	}
	return *o.Symbol.Get()
}

// GetSymbolOk returns a tuple with the Symbol field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiMarketDataDomainModelsResponseInstrumentList) GetSymbolOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Symbol.Get(), o.Symbol.IsSet()
}

// HasSymbol returns a boolean if a field has been set.
func (o *PiMarketDataDomainModelsResponseInstrumentList) HasSymbol() bool {
	if o != nil && o.Symbol.IsSet() {
		return true
	}

	return false
}

// SetSymbol gets a reference to the given NullableString and assigns it to the Symbol field.
func (o *PiMarketDataDomainModelsResponseInstrumentList) SetSymbol(v string) {
	o.Symbol.Set(&v)
}

// SetSymbolNil sets the value for Symbol to be an explicit nil
func (o *PiMarketDataDomainModelsResponseInstrumentList) SetSymbolNil() {
	o.Symbol.Set(nil)
}

// UnsetSymbol ensures that no value is present for Symbol, not even an explicit nil
func (o *PiMarketDataDomainModelsResponseInstrumentList) UnsetSymbol() {
	o.Symbol.Unset()
}

// GetFriendlyName returns the FriendlyName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiMarketDataDomainModelsResponseInstrumentList) GetFriendlyName() string {
	if o == nil || IsNil(o.FriendlyName.Get()) {
		var ret string
		return ret
	}
	return *o.FriendlyName.Get()
}

// GetFriendlyNameOk returns a tuple with the FriendlyName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiMarketDataDomainModelsResponseInstrumentList) GetFriendlyNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.FriendlyName.Get(), o.FriendlyName.IsSet()
}

// HasFriendlyName returns a boolean if a field has been set.
func (o *PiMarketDataDomainModelsResponseInstrumentList) HasFriendlyName() bool {
	if o != nil && o.FriendlyName.IsSet() {
		return true
	}

	return false
}

// SetFriendlyName gets a reference to the given NullableString and assigns it to the FriendlyName field.
func (o *PiMarketDataDomainModelsResponseInstrumentList) SetFriendlyName(v string) {
	o.FriendlyName.Set(&v)
}

// SetFriendlyNameNil sets the value for FriendlyName to be an explicit nil
func (o *PiMarketDataDomainModelsResponseInstrumentList) SetFriendlyNameNil() {
	o.FriendlyName.Set(nil)
}

// UnsetFriendlyName ensures that no value is present for FriendlyName, not even an explicit nil
func (o *PiMarketDataDomainModelsResponseInstrumentList) UnsetFriendlyName() {
	o.FriendlyName.Unset()
}

// GetLogo returns the Logo field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiMarketDataDomainModelsResponseInstrumentList) GetLogo() string {
	if o == nil || IsNil(o.Logo.Get()) {
		var ret string
		return ret
	}
	return *o.Logo.Get()
}

// GetLogoOk returns a tuple with the Logo field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiMarketDataDomainModelsResponseInstrumentList) GetLogoOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Logo.Get(), o.Logo.IsSet()
}

// HasLogo returns a boolean if a field has been set.
func (o *PiMarketDataDomainModelsResponseInstrumentList) HasLogo() bool {
	if o != nil && o.Logo.IsSet() {
		return true
	}

	return false
}

// SetLogo gets a reference to the given NullableString and assigns it to the Logo field.
func (o *PiMarketDataDomainModelsResponseInstrumentList) SetLogo(v string) {
	o.Logo.Set(&v)
}

// SetLogoNil sets the value for Logo to be an explicit nil
func (o *PiMarketDataDomainModelsResponseInstrumentList) SetLogoNil() {
	o.Logo.Set(nil)
}

// UnsetLogo ensures that no value is present for Logo, not even an explicit nil
func (o *PiMarketDataDomainModelsResponseInstrumentList) UnsetLogo() {
	o.Logo.Unset()
}

// GetUnit returns the Unit field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiMarketDataDomainModelsResponseInstrumentList) GetUnit() string {
	if o == nil || IsNil(o.Unit.Get()) {
		var ret string
		return ret
	}
	return *o.Unit.Get()
}

// GetUnitOk returns a tuple with the Unit field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiMarketDataDomainModelsResponseInstrumentList) GetUnitOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Unit.Get(), o.Unit.IsSet()
}

// HasUnit returns a boolean if a field has been set.
func (o *PiMarketDataDomainModelsResponseInstrumentList) HasUnit() bool {
	if o != nil && o.Unit.IsSet() {
		return true
	}

	return false
}

// SetUnit gets a reference to the given NullableString and assigns it to the Unit field.
func (o *PiMarketDataDomainModelsResponseInstrumentList) SetUnit(v string) {
	o.Unit.Set(&v)
}

// SetUnitNil sets the value for Unit to be an explicit nil
func (o *PiMarketDataDomainModelsResponseInstrumentList) SetUnitNil() {
	o.Unit.Set(nil)
}

// UnsetUnit ensures that no value is present for Unit, not even an explicit nil
func (o *PiMarketDataDomainModelsResponseInstrumentList) UnsetUnit() {
	o.Unit.Unset()
}

// GetPrice returns the Price field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiMarketDataDomainModelsResponseInstrumentList) GetPrice() string {
	if o == nil || IsNil(o.Price.Get()) {
		var ret string
		return ret
	}
	return *o.Price.Get()
}

// GetPriceOk returns a tuple with the Price field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiMarketDataDomainModelsResponseInstrumentList) GetPriceOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Price.Get(), o.Price.IsSet()
}

// HasPrice returns a boolean if a field has been set.
func (o *PiMarketDataDomainModelsResponseInstrumentList) HasPrice() bool {
	if o != nil && o.Price.IsSet() {
		return true
	}

	return false
}

// SetPrice gets a reference to the given NullableString and assigns it to the Price field.
func (o *PiMarketDataDomainModelsResponseInstrumentList) SetPrice(v string) {
	o.Price.Set(&v)
}

// SetPriceNil sets the value for Price to be an explicit nil
func (o *PiMarketDataDomainModelsResponseInstrumentList) SetPriceNil() {
	o.Price.Set(nil)
}

// UnsetPrice ensures that no value is present for Price, not even an explicit nil
func (o *PiMarketDataDomainModelsResponseInstrumentList) UnsetPrice() {
	o.Price.Unset()
}

// GetPriceChange returns the PriceChange field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiMarketDataDomainModelsResponseInstrumentList) GetPriceChange() string {
	if o == nil || IsNil(o.PriceChange.Get()) {
		var ret string
		return ret
	}
	return *o.PriceChange.Get()
}

// GetPriceChangeOk returns a tuple with the PriceChange field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiMarketDataDomainModelsResponseInstrumentList) GetPriceChangeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PriceChange.Get(), o.PriceChange.IsSet()
}

// HasPriceChange returns a boolean if a field has been set.
func (o *PiMarketDataDomainModelsResponseInstrumentList) HasPriceChange() bool {
	if o != nil && o.PriceChange.IsSet() {
		return true
	}

	return false
}

// SetPriceChange gets a reference to the given NullableString and assigns it to the PriceChange field.
func (o *PiMarketDataDomainModelsResponseInstrumentList) SetPriceChange(v string) {
	o.PriceChange.Set(&v)
}

// SetPriceChangeNil sets the value for PriceChange to be an explicit nil
func (o *PiMarketDataDomainModelsResponseInstrumentList) SetPriceChangeNil() {
	o.PriceChange.Set(nil)
}

// UnsetPriceChange ensures that no value is present for PriceChange, not even an explicit nil
func (o *PiMarketDataDomainModelsResponseInstrumentList) UnsetPriceChange() {
	o.PriceChange.Unset()
}

// GetPriceChangeRatio returns the PriceChangeRatio field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiMarketDataDomainModelsResponseInstrumentList) GetPriceChangeRatio() string {
	if o == nil || IsNil(o.PriceChangeRatio.Get()) {
		var ret string
		return ret
	}
	return *o.PriceChangeRatio.Get()
}

// GetPriceChangeRatioOk returns a tuple with the PriceChangeRatio field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiMarketDataDomainModelsResponseInstrumentList) GetPriceChangeRatioOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PriceChangeRatio.Get(), o.PriceChangeRatio.IsSet()
}

// HasPriceChangeRatio returns a boolean if a field has been set.
func (o *PiMarketDataDomainModelsResponseInstrumentList) HasPriceChangeRatio() bool {
	if o != nil && o.PriceChangeRatio.IsSet() {
		return true
	}

	return false
}

// SetPriceChangeRatio gets a reference to the given NullableString and assigns it to the PriceChangeRatio field.
func (o *PiMarketDataDomainModelsResponseInstrumentList) SetPriceChangeRatio(v string) {
	o.PriceChangeRatio.Set(&v)
}

// SetPriceChangeRatioNil sets the value for PriceChangeRatio to be an explicit nil
func (o *PiMarketDataDomainModelsResponseInstrumentList) SetPriceChangeRatioNil() {
	o.PriceChangeRatio.Set(nil)
}

// UnsetPriceChangeRatio ensures that no value is present for PriceChangeRatio, not even an explicit nil
func (o *PiMarketDataDomainModelsResponseInstrumentList) UnsetPriceChangeRatio() {
	o.PriceChangeRatio.Unset()
}

// GetTotalValue returns the TotalValue field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiMarketDataDomainModelsResponseInstrumentList) GetTotalValue() string {
	if o == nil || IsNil(o.TotalValue.Get()) {
		var ret string
		return ret
	}
	return *o.TotalValue.Get()
}

// GetTotalValueOk returns a tuple with the TotalValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiMarketDataDomainModelsResponseInstrumentList) GetTotalValueOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TotalValue.Get(), o.TotalValue.IsSet()
}

// HasTotalValue returns a boolean if a field has been set.
func (o *PiMarketDataDomainModelsResponseInstrumentList) HasTotalValue() bool {
	if o != nil && o.TotalValue.IsSet() {
		return true
	}

	return false
}

// SetTotalValue gets a reference to the given NullableString and assigns it to the TotalValue field.
func (o *PiMarketDataDomainModelsResponseInstrumentList) SetTotalValue(v string) {
	o.TotalValue.Set(&v)
}

// SetTotalValueNil sets the value for TotalValue to be an explicit nil
func (o *PiMarketDataDomainModelsResponseInstrumentList) SetTotalValueNil() {
	o.TotalValue.Set(nil)
}

// UnsetTotalValue ensures that no value is present for TotalValue, not even an explicit nil
func (o *PiMarketDataDomainModelsResponseInstrumentList) UnsetTotalValue() {
	o.TotalValue.Unset()
}

// GetTotalVolume returns the TotalVolume field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiMarketDataDomainModelsResponseInstrumentList) GetTotalVolume() string {
	if o == nil || IsNil(o.TotalVolume.Get()) {
		var ret string
		return ret
	}
	return *o.TotalVolume.Get()
}

// GetTotalVolumeOk returns a tuple with the TotalVolume field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiMarketDataDomainModelsResponseInstrumentList) GetTotalVolumeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TotalVolume.Get(), o.TotalVolume.IsSet()
}

// HasTotalVolume returns a boolean if a field has been set.
func (o *PiMarketDataDomainModelsResponseInstrumentList) HasTotalVolume() bool {
	if o != nil && o.TotalVolume.IsSet() {
		return true
	}

	return false
}

// SetTotalVolume gets a reference to the given NullableString and assigns it to the TotalVolume field.
func (o *PiMarketDataDomainModelsResponseInstrumentList) SetTotalVolume(v string) {
	o.TotalVolume.Set(&v)
}

// SetTotalVolumeNil sets the value for TotalVolume to be an explicit nil
func (o *PiMarketDataDomainModelsResponseInstrumentList) SetTotalVolumeNil() {
	o.TotalVolume.Set(nil)
}

// UnsetTotalVolume ensures that no value is present for TotalVolume, not even an explicit nil
func (o *PiMarketDataDomainModelsResponseInstrumentList) UnsetTotalVolume() {
	o.TotalVolume.Unset()
}

func (o PiMarketDataDomainModelsResponseInstrumentList) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PiMarketDataDomainModelsResponseInstrumentList) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Order) {
		toSerialize["order"] = o.Order
	}
	if o.InstrumentType.IsSet() {
		toSerialize["instrumentType"] = o.InstrumentType.Get()
	}
	if o.InstrumentCategory.IsSet() {
		toSerialize["instrumentCategory"] = o.InstrumentCategory.Get()
	}
	if o.Venue.IsSet() {
		toSerialize["venue"] = o.Venue.Get()
	}
	if o.Symbol.IsSet() {
		toSerialize["symbol"] = o.Symbol.Get()
	}
	if o.FriendlyName.IsSet() {
		toSerialize["friendlyName"] = o.FriendlyName.Get()
	}
	if o.Logo.IsSet() {
		toSerialize["logo"] = o.Logo.Get()
	}
	if o.Unit.IsSet() {
		toSerialize["unit"] = o.Unit.Get()
	}
	if o.Price.IsSet() {
		toSerialize["price"] = o.Price.Get()
	}
	if o.PriceChange.IsSet() {
		toSerialize["priceChange"] = o.PriceChange.Get()
	}
	if o.PriceChangeRatio.IsSet() {
		toSerialize["priceChangeRatio"] = o.PriceChangeRatio.Get()
	}
	if o.TotalValue.IsSet() {
		toSerialize["totalValue"] = o.TotalValue.Get()
	}
	if o.TotalVolume.IsSet() {
		toSerialize["totalVolume"] = o.TotalVolume.Get()
	}
	return toSerialize, nil
}

type NullablePiMarketDataDomainModelsResponseInstrumentList struct {
	value *PiMarketDataDomainModelsResponseInstrumentList
	isSet bool
}

func (v NullablePiMarketDataDomainModelsResponseInstrumentList) Get() *PiMarketDataDomainModelsResponseInstrumentList {
	return v.value
}

func (v *NullablePiMarketDataDomainModelsResponseInstrumentList) Set(val *PiMarketDataDomainModelsResponseInstrumentList) {
	v.value = val
	v.isSet = true
}

func (v NullablePiMarketDataDomainModelsResponseInstrumentList) IsSet() bool {
	return v.isSet
}

func (v *NullablePiMarketDataDomainModelsResponseInstrumentList) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePiMarketDataDomainModelsResponseInstrumentList(val *PiMarketDataDomainModelsResponseInstrumentList) *NullablePiMarketDataDomainModelsResponseInstrumentList {
	return &NullablePiMarketDataDomainModelsResponseInstrumentList{value: val, isSet: true}
}

func (v NullablePiMarketDataDomainModelsResponseInstrumentList) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePiMarketDataDomainModelsResponseInstrumentList) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
