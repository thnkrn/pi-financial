/*
MarketData Migration Proxy API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package go_client

import (
	"encoding/json"
)

// checks if the PiMarketDataDomainModelsResponseFilterInstrumentsResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PiMarketDataDomainModelsResponseFilterInstrumentsResponse{}

// PiMarketDataDomainModelsResponseFilterInstrumentsResponse struct for PiMarketDataDomainModelsResponseFilterInstrumentsResponse
type PiMarketDataDomainModelsResponseFilterInstrumentsResponse struct {
	InstrumentCategoryList []PiMarketDataDomainModelsResponseInstrumentCategoryList `json:"instrumentCategoryList,omitempty"`
}

// NewPiMarketDataDomainModelsResponseFilterInstrumentsResponse instantiates a new PiMarketDataDomainModelsResponseFilterInstrumentsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPiMarketDataDomainModelsResponseFilterInstrumentsResponse() *PiMarketDataDomainModelsResponseFilterInstrumentsResponse {
	this := PiMarketDataDomainModelsResponseFilterInstrumentsResponse{}
	return &this
}

// NewPiMarketDataDomainModelsResponseFilterInstrumentsResponseWithDefaults instantiates a new PiMarketDataDomainModelsResponseFilterInstrumentsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPiMarketDataDomainModelsResponseFilterInstrumentsResponseWithDefaults() *PiMarketDataDomainModelsResponseFilterInstrumentsResponse {
	this := PiMarketDataDomainModelsResponseFilterInstrumentsResponse{}
	return &this
}

// GetInstrumentCategoryList returns the InstrumentCategoryList field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiMarketDataDomainModelsResponseFilterInstrumentsResponse) GetInstrumentCategoryList() []PiMarketDataDomainModelsResponseInstrumentCategoryList {
	if o == nil {
		var ret []PiMarketDataDomainModelsResponseInstrumentCategoryList
		return ret
	}
	return o.InstrumentCategoryList
}

// GetInstrumentCategoryListOk returns a tuple with the InstrumentCategoryList field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiMarketDataDomainModelsResponseFilterInstrumentsResponse) GetInstrumentCategoryListOk() ([]PiMarketDataDomainModelsResponseInstrumentCategoryList, bool) {
	if o == nil || IsNil(o.InstrumentCategoryList) {
		return nil, false
	}
	return o.InstrumentCategoryList, true
}

// HasInstrumentCategoryList returns a boolean if a field has been set.
func (o *PiMarketDataDomainModelsResponseFilterInstrumentsResponse) HasInstrumentCategoryList() bool {
	if o != nil && !IsNil(o.InstrumentCategoryList) {
		return true
	}

	return false
}

// SetInstrumentCategoryList gets a reference to the given []PiMarketDataDomainModelsResponseInstrumentCategoryList and assigns it to the InstrumentCategoryList field.
func (o *PiMarketDataDomainModelsResponseFilterInstrumentsResponse) SetInstrumentCategoryList(v []PiMarketDataDomainModelsResponseInstrumentCategoryList) {
	o.InstrumentCategoryList = v
}

func (o PiMarketDataDomainModelsResponseFilterInstrumentsResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PiMarketDataDomainModelsResponseFilterInstrumentsResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.InstrumentCategoryList != nil {
		toSerialize["instrumentCategoryList"] = o.InstrumentCategoryList
	}
	return toSerialize, nil
}

type NullablePiMarketDataDomainModelsResponseFilterInstrumentsResponse struct {
	value *PiMarketDataDomainModelsResponseFilterInstrumentsResponse
	isSet bool
}

func (v NullablePiMarketDataDomainModelsResponseFilterInstrumentsResponse) Get() *PiMarketDataDomainModelsResponseFilterInstrumentsResponse {
	return v.value
}

func (v *NullablePiMarketDataDomainModelsResponseFilterInstrumentsResponse) Set(val *PiMarketDataDomainModelsResponseFilterInstrumentsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullablePiMarketDataDomainModelsResponseFilterInstrumentsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullablePiMarketDataDomainModelsResponseFilterInstrumentsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePiMarketDataDomainModelsResponseFilterInstrumentsResponse(val *PiMarketDataDomainModelsResponseFilterInstrumentsResponse) *NullablePiMarketDataDomainModelsResponseFilterInstrumentsResponse {
	return &NullablePiMarketDataDomainModelsResponseFilterInstrumentsResponse{value: val, isSet: true}
}

func (v NullablePiMarketDataDomainModelsResponseFilterInstrumentsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePiMarketDataDomainModelsResponseFilterInstrumentsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
