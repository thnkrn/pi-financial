/*
MarketData Migration Proxy API

Testing MarketDataManagementAPIService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package go_client

import (
	"context"
	"testing"

	openapiclient "github.com/pi-financial/market-data-migrationproxy-srv/go-client"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
)

func Test_go_client_MarketDataManagementAPIService(t *testing.T) {

	configuration := openapiclient.NewConfiguration()
	apiClient := openapiclient.NewAPIClient(configuration)

	t.Run("Test MarketDataManagementAPIService PostGeCuratedFilter", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		httpRes, err := apiClient.MarketDataManagementAPI.PostGeCuratedFilter(context.Background()).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test MarketDataManagementAPIService PostGeCuratedList", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		httpRes, err := apiClient.MarketDataManagementAPI.PostGeCuratedList(context.Background()).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test MarketDataManagementAPIService PostGeCuratedMember", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		httpRes, err := apiClient.MarketDataManagementAPI.PostGeCuratedMember(context.Background()).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test MarketDataManagementAPIService PostSetCuratedFilter", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		httpRes, err := apiClient.MarketDataManagementAPI.PostSetCuratedFilter(context.Background()).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test MarketDataManagementAPIService PostSetCuratedList", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		httpRes, err := apiClient.MarketDataManagementAPI.PostSetCuratedList(context.Background()).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test MarketDataManagementAPIService PostSetCuratedMember", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		httpRes, err := apiClient.MarketDataManagementAPI.PostSetCuratedMember(context.Background()).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}
