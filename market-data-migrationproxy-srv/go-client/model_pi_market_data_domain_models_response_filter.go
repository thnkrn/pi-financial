/*
MarketData Migration Proxy API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package go_client

import (
	"encoding/json"
)

// checks if the PiMarketDataDomainModelsResponseFilter type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PiMarketDataDomainModelsResponseFilter{}

// PiMarketDataDomainModelsResponseFilter struct for PiMarketDataDomainModelsResponseFilter
type PiMarketDataDomainModelsResponseFilter struct {
	FilterId            *int32         `json:"filterId,omitempty"`
	FilterName          NullableString `json:"filterName,omitempty"`
	IsHighLight         *bool          `json:"isHighLight,omitempty"`
	IsDefault           *bool          `json:"isDefault,omitempty"`
	Order               *int32         `json:"order,omitempty"`
	Nav                 NullableString `json:"nav,omitempty"`
	NavChange           NullableString `json:"navChange,omitempty"`
	NavChangePercentage NullableString `json:"navChangePercentage,omitempty"`
}

// NewPiMarketDataDomainModelsResponseFilter instantiates a new PiMarketDataDomainModelsResponseFilter object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPiMarketDataDomainModelsResponseFilter() *PiMarketDataDomainModelsResponseFilter {
	this := PiMarketDataDomainModelsResponseFilter{}
	return &this
}

// NewPiMarketDataDomainModelsResponseFilterWithDefaults instantiates a new PiMarketDataDomainModelsResponseFilter object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPiMarketDataDomainModelsResponseFilterWithDefaults() *PiMarketDataDomainModelsResponseFilter {
	this := PiMarketDataDomainModelsResponseFilter{}
	return &this
}

// GetFilterId returns the FilterId field value if set, zero value otherwise.
func (o *PiMarketDataDomainModelsResponseFilter) GetFilterId() int32 {
	if o == nil || IsNil(o.FilterId) {
		var ret int32
		return ret
	}
	return *o.FilterId
}

// GetFilterIdOk returns a tuple with the FilterId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PiMarketDataDomainModelsResponseFilter) GetFilterIdOk() (*int32, bool) {
	if o == nil || IsNil(o.FilterId) {
		return nil, false
	}
	return o.FilterId, true
}

// HasFilterId returns a boolean if a field has been set.
func (o *PiMarketDataDomainModelsResponseFilter) HasFilterId() bool {
	if o != nil && !IsNil(o.FilterId) {
		return true
	}

	return false
}

// SetFilterId gets a reference to the given int32 and assigns it to the FilterId field.
func (o *PiMarketDataDomainModelsResponseFilter) SetFilterId(v int32) {
	o.FilterId = &v
}

// GetFilterName returns the FilterName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiMarketDataDomainModelsResponseFilter) GetFilterName() string {
	if o == nil || IsNil(o.FilterName.Get()) {
		var ret string
		return ret
	}
	return *o.FilterName.Get()
}

// GetFilterNameOk returns a tuple with the FilterName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiMarketDataDomainModelsResponseFilter) GetFilterNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.FilterName.Get(), o.FilterName.IsSet()
}

// HasFilterName returns a boolean if a field has been set.
func (o *PiMarketDataDomainModelsResponseFilter) HasFilterName() bool {
	if o != nil && o.FilterName.IsSet() {
		return true
	}

	return false
}

// SetFilterName gets a reference to the given NullableString and assigns it to the FilterName field.
func (o *PiMarketDataDomainModelsResponseFilter) SetFilterName(v string) {
	o.FilterName.Set(&v)
}

// SetFilterNameNil sets the value for FilterName to be an explicit nil
func (o *PiMarketDataDomainModelsResponseFilter) SetFilterNameNil() {
	o.FilterName.Set(nil)
}

// UnsetFilterName ensures that no value is present for FilterName, not even an explicit nil
func (o *PiMarketDataDomainModelsResponseFilter) UnsetFilterName() {
	o.FilterName.Unset()
}

// GetIsHighLight returns the IsHighLight field value if set, zero value otherwise.
func (o *PiMarketDataDomainModelsResponseFilter) GetIsHighLight() bool {
	if o == nil || IsNil(o.IsHighLight) {
		var ret bool
		return ret
	}
	return *o.IsHighLight
}

// GetIsHighLightOk returns a tuple with the IsHighLight field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PiMarketDataDomainModelsResponseFilter) GetIsHighLightOk() (*bool, bool) {
	if o == nil || IsNil(o.IsHighLight) {
		return nil, false
	}
	return o.IsHighLight, true
}

// HasIsHighLight returns a boolean if a field has been set.
func (o *PiMarketDataDomainModelsResponseFilter) HasIsHighLight() bool {
	if o != nil && !IsNil(o.IsHighLight) {
		return true
	}

	return false
}

// SetIsHighLight gets a reference to the given bool and assigns it to the IsHighLight field.
func (o *PiMarketDataDomainModelsResponseFilter) SetIsHighLight(v bool) {
	o.IsHighLight = &v
}

// GetIsDefault returns the IsDefault field value if set, zero value otherwise.
func (o *PiMarketDataDomainModelsResponseFilter) GetIsDefault() bool {
	if o == nil || IsNil(o.IsDefault) {
		var ret bool
		return ret
	}
	return *o.IsDefault
}

// GetIsDefaultOk returns a tuple with the IsDefault field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PiMarketDataDomainModelsResponseFilter) GetIsDefaultOk() (*bool, bool) {
	if o == nil || IsNil(o.IsDefault) {
		return nil, false
	}
	return o.IsDefault, true
}

// HasIsDefault returns a boolean if a field has been set.
func (o *PiMarketDataDomainModelsResponseFilter) HasIsDefault() bool {
	if o != nil && !IsNil(o.IsDefault) {
		return true
	}

	return false
}

// SetIsDefault gets a reference to the given bool and assigns it to the IsDefault field.
func (o *PiMarketDataDomainModelsResponseFilter) SetIsDefault(v bool) {
	o.IsDefault = &v
}

// GetOrder returns the Order field value if set, zero value otherwise.
func (o *PiMarketDataDomainModelsResponseFilter) GetOrder() int32 {
	if o == nil || IsNil(o.Order) {
		var ret int32
		return ret
	}
	return *o.Order
}

// GetOrderOk returns a tuple with the Order field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PiMarketDataDomainModelsResponseFilter) GetOrderOk() (*int32, bool) {
	if o == nil || IsNil(o.Order) {
		return nil, false
	}
	return o.Order, true
}

// HasOrder returns a boolean if a field has been set.
func (o *PiMarketDataDomainModelsResponseFilter) HasOrder() bool {
	if o != nil && !IsNil(o.Order) {
		return true
	}

	return false
}

// SetOrder gets a reference to the given int32 and assigns it to the Order field.
func (o *PiMarketDataDomainModelsResponseFilter) SetOrder(v int32) {
	o.Order = &v
}

// GetNav returns the Nav field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiMarketDataDomainModelsResponseFilter) GetNav() string {
	if o == nil || IsNil(o.Nav.Get()) {
		var ret string
		return ret
	}
	return *o.Nav.Get()
}

// GetNavOk returns a tuple with the Nav field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiMarketDataDomainModelsResponseFilter) GetNavOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Nav.Get(), o.Nav.IsSet()
}

// HasNav returns a boolean if a field has been set.
func (o *PiMarketDataDomainModelsResponseFilter) HasNav() bool {
	if o != nil && o.Nav.IsSet() {
		return true
	}

	return false
}

// SetNav gets a reference to the given NullableString and assigns it to the Nav field.
func (o *PiMarketDataDomainModelsResponseFilter) SetNav(v string) {
	o.Nav.Set(&v)
}

// SetNavNil sets the value for Nav to be an explicit nil
func (o *PiMarketDataDomainModelsResponseFilter) SetNavNil() {
	o.Nav.Set(nil)
}

// UnsetNav ensures that no value is present for Nav, not even an explicit nil
func (o *PiMarketDataDomainModelsResponseFilter) UnsetNav() {
	o.Nav.Unset()
}

// GetNavChange returns the NavChange field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiMarketDataDomainModelsResponseFilter) GetNavChange() string {
	if o == nil || IsNil(o.NavChange.Get()) {
		var ret string
		return ret
	}
	return *o.NavChange.Get()
}

// GetNavChangeOk returns a tuple with the NavChange field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiMarketDataDomainModelsResponseFilter) GetNavChangeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.NavChange.Get(), o.NavChange.IsSet()
}

// HasNavChange returns a boolean if a field has been set.
func (o *PiMarketDataDomainModelsResponseFilter) HasNavChange() bool {
	if o != nil && o.NavChange.IsSet() {
		return true
	}

	return false
}

// SetNavChange gets a reference to the given NullableString and assigns it to the NavChange field.
func (o *PiMarketDataDomainModelsResponseFilter) SetNavChange(v string) {
	o.NavChange.Set(&v)
}

// SetNavChangeNil sets the value for NavChange to be an explicit nil
func (o *PiMarketDataDomainModelsResponseFilter) SetNavChangeNil() {
	o.NavChange.Set(nil)
}

// UnsetNavChange ensures that no value is present for NavChange, not even an explicit nil
func (o *PiMarketDataDomainModelsResponseFilter) UnsetNavChange() {
	o.NavChange.Unset()
}

// GetNavChangePercentage returns the NavChangePercentage field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiMarketDataDomainModelsResponseFilter) GetNavChangePercentage() string {
	if o == nil || IsNil(o.NavChangePercentage.Get()) {
		var ret string
		return ret
	}
	return *o.NavChangePercentage.Get()
}

// GetNavChangePercentageOk returns a tuple with the NavChangePercentage field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiMarketDataDomainModelsResponseFilter) GetNavChangePercentageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.NavChangePercentage.Get(), o.NavChangePercentage.IsSet()
}

// HasNavChangePercentage returns a boolean if a field has been set.
func (o *PiMarketDataDomainModelsResponseFilter) HasNavChangePercentage() bool {
	if o != nil && o.NavChangePercentage.IsSet() {
		return true
	}

	return false
}

// SetNavChangePercentage gets a reference to the given NullableString and assigns it to the NavChangePercentage field.
func (o *PiMarketDataDomainModelsResponseFilter) SetNavChangePercentage(v string) {
	o.NavChangePercentage.Set(&v)
}

// SetNavChangePercentageNil sets the value for NavChangePercentage to be an explicit nil
func (o *PiMarketDataDomainModelsResponseFilter) SetNavChangePercentageNil() {
	o.NavChangePercentage.Set(nil)
}

// UnsetNavChangePercentage ensures that no value is present for NavChangePercentage, not even an explicit nil
func (o *PiMarketDataDomainModelsResponseFilter) UnsetNavChangePercentage() {
	o.NavChangePercentage.Unset()
}

func (o PiMarketDataDomainModelsResponseFilter) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PiMarketDataDomainModelsResponseFilter) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.FilterId) {
		toSerialize["filterId"] = o.FilterId
	}
	if o.FilterName.IsSet() {
		toSerialize["filterName"] = o.FilterName.Get()
	}
	if !IsNil(o.IsHighLight) {
		toSerialize["isHighLight"] = o.IsHighLight
	}
	if !IsNil(o.IsDefault) {
		toSerialize["isDefault"] = o.IsDefault
	}
	if !IsNil(o.Order) {
		toSerialize["order"] = o.Order
	}
	if o.Nav.IsSet() {
		toSerialize["nav"] = o.Nav.Get()
	}
	if o.NavChange.IsSet() {
		toSerialize["navChange"] = o.NavChange.Get()
	}
	if o.NavChangePercentage.IsSet() {
		toSerialize["navChangePercentage"] = o.NavChangePercentage.Get()
	}
	return toSerialize, nil
}

type NullablePiMarketDataDomainModelsResponseFilter struct {
	value *PiMarketDataDomainModelsResponseFilter
	isSet bool
}

func (v NullablePiMarketDataDomainModelsResponseFilter) Get() *PiMarketDataDomainModelsResponseFilter {
	return v.value
}

func (v *NullablePiMarketDataDomainModelsResponseFilter) Set(val *PiMarketDataDomainModelsResponseFilter) {
	v.value = val
	v.isSet = true
}

func (v NullablePiMarketDataDomainModelsResponseFilter) IsSet() bool {
	return v.isSet
}

func (v *NullablePiMarketDataDomainModelsResponseFilter) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePiMarketDataDomainModelsResponseFilter(val *PiMarketDataDomainModelsResponseFilter) *NullablePiMarketDataDomainModelsResponseFilter {
	return &NullablePiMarketDataDomainModelsResponseFilter{value: val, isSet: true}
}

func (v NullablePiMarketDataDomainModelsResponseFilter) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePiMarketDataDomainModelsResponseFilter) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
