/*
MarketData Migration Proxy API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package go_client

import (
	"encoding/json"
)

// checks if the PiMarketDataDomainModelsResponseInstrumentsResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PiMarketDataDomainModelsResponseInstrumentsResponse{}

// PiMarketDataDomainModelsResponseInstrumentsResponse struct for PiMarketDataDomainModelsResponseInstrumentsResponse
type PiMarketDataDomainModelsResponseInstrumentsResponse struct {
	InstrumentList []PiMarketDataDomainModelsResponseInstrumentList `json:"instrumentList,omitempty"`
}

// NewPiMarketDataDomainModelsResponseInstrumentsResponse instantiates a new PiMarketDataDomainModelsResponseInstrumentsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPiMarketDataDomainModelsResponseInstrumentsResponse() *PiMarketDataDomainModelsResponseInstrumentsResponse {
	this := PiMarketDataDomainModelsResponseInstrumentsResponse{}
	return &this
}

// NewPiMarketDataDomainModelsResponseInstrumentsResponseWithDefaults instantiates a new PiMarketDataDomainModelsResponseInstrumentsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPiMarketDataDomainModelsResponseInstrumentsResponseWithDefaults() *PiMarketDataDomainModelsResponseInstrumentsResponse {
	this := PiMarketDataDomainModelsResponseInstrumentsResponse{}
	return &this
}

// GetInstrumentList returns the InstrumentList field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiMarketDataDomainModelsResponseInstrumentsResponse) GetInstrumentList() []PiMarketDataDomainModelsResponseInstrumentList {
	if o == nil {
		var ret []PiMarketDataDomainModelsResponseInstrumentList
		return ret
	}
	return o.InstrumentList
}

// GetInstrumentListOk returns a tuple with the InstrumentList field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiMarketDataDomainModelsResponseInstrumentsResponse) GetInstrumentListOk() ([]PiMarketDataDomainModelsResponseInstrumentList, bool) {
	if o == nil || IsNil(o.InstrumentList) {
		return nil, false
	}
	return o.InstrumentList, true
}

// HasInstrumentList returns a boolean if a field has been set.
func (o *PiMarketDataDomainModelsResponseInstrumentsResponse) HasInstrumentList() bool {
	if o != nil && !IsNil(o.InstrumentList) {
		return true
	}

	return false
}

// SetInstrumentList gets a reference to the given []PiMarketDataDomainModelsResponseInstrumentList and assigns it to the InstrumentList field.
func (o *PiMarketDataDomainModelsResponseInstrumentsResponse) SetInstrumentList(v []PiMarketDataDomainModelsResponseInstrumentList) {
	o.InstrumentList = v
}

func (o PiMarketDataDomainModelsResponseInstrumentsResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PiMarketDataDomainModelsResponseInstrumentsResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.InstrumentList != nil {
		toSerialize["instrumentList"] = o.InstrumentList
	}
	return toSerialize, nil
}

type NullablePiMarketDataDomainModelsResponseInstrumentsResponse struct {
	value *PiMarketDataDomainModelsResponseInstrumentsResponse
	isSet bool
}

func (v NullablePiMarketDataDomainModelsResponseInstrumentsResponse) Get() *PiMarketDataDomainModelsResponseInstrumentsResponse {
	return v.value
}

func (v *NullablePiMarketDataDomainModelsResponseInstrumentsResponse) Set(val *PiMarketDataDomainModelsResponseInstrumentsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullablePiMarketDataDomainModelsResponseInstrumentsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullablePiMarketDataDomainModelsResponseInstrumentsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePiMarketDataDomainModelsResponseInstrumentsResponse(val *PiMarketDataDomainModelsResponseInstrumentsResponse) *NullablePiMarketDataDomainModelsResponseInstrumentsResponse {
	return &NullablePiMarketDataDomainModelsResponseInstrumentsResponse{value: val, isSet: true}
}

func (v NullablePiMarketDataDomainModelsResponseInstrumentsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePiMarketDataDomainModelsResponseInstrumentsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
