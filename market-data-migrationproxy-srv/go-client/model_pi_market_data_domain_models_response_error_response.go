/*
MarketData Migration Proxy API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package go_client

import (
	"encoding/json"
)

// checks if the PiMarketDataDomainModelsResponseErrorResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PiMarketDataDomainModelsResponseErrorResponse{}

// PiMarketDataDomainModelsResponseErrorResponse struct for PiMarketDataDomainModelsResponseErrorResponse
type PiMarketDataDomainModelsResponseErrorResponse struct {
	Code    NullableString `json:"code,omitempty"`
	Message NullableString `json:"message,omitempty"`
}

// NewPiMarketDataDomainModelsResponseErrorResponse instantiates a new PiMarketDataDomainModelsResponseErrorResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPiMarketDataDomainModelsResponseErrorResponse() *PiMarketDataDomainModelsResponseErrorResponse {
	this := PiMarketDataDomainModelsResponseErrorResponse{}
	return &this
}

// NewPiMarketDataDomainModelsResponseErrorResponseWithDefaults instantiates a new PiMarketDataDomainModelsResponseErrorResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPiMarketDataDomainModelsResponseErrorResponseWithDefaults() *PiMarketDataDomainModelsResponseErrorResponse {
	this := PiMarketDataDomainModelsResponseErrorResponse{}
	return &this
}

// GetCode returns the Code field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiMarketDataDomainModelsResponseErrorResponse) GetCode() string {
	if o == nil || IsNil(o.Code.Get()) {
		var ret string
		return ret
	}
	return *o.Code.Get()
}

// GetCodeOk returns a tuple with the Code field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiMarketDataDomainModelsResponseErrorResponse) GetCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Code.Get(), o.Code.IsSet()
}

// HasCode returns a boolean if a field has been set.
func (o *PiMarketDataDomainModelsResponseErrorResponse) HasCode() bool {
	if o != nil && o.Code.IsSet() {
		return true
	}

	return false
}

// SetCode gets a reference to the given NullableString and assigns it to the Code field.
func (o *PiMarketDataDomainModelsResponseErrorResponse) SetCode(v string) {
	o.Code.Set(&v)
}

// SetCodeNil sets the value for Code to be an explicit nil
func (o *PiMarketDataDomainModelsResponseErrorResponse) SetCodeNil() {
	o.Code.Set(nil)
}

// UnsetCode ensures that no value is present for Code, not even an explicit nil
func (o *PiMarketDataDomainModelsResponseErrorResponse) UnsetCode() {
	o.Code.Unset()
}

// GetMessage returns the Message field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiMarketDataDomainModelsResponseErrorResponse) GetMessage() string {
	if o == nil || IsNil(o.Message.Get()) {
		var ret string
		return ret
	}
	return *o.Message.Get()
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiMarketDataDomainModelsResponseErrorResponse) GetMessageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Message.Get(), o.Message.IsSet()
}

// HasMessage returns a boolean if a field has been set.
func (o *PiMarketDataDomainModelsResponseErrorResponse) HasMessage() bool {
	if o != nil && o.Message.IsSet() {
		return true
	}

	return false
}

// SetMessage gets a reference to the given NullableString and assigns it to the Message field.
func (o *PiMarketDataDomainModelsResponseErrorResponse) SetMessage(v string) {
	o.Message.Set(&v)
}

// SetMessageNil sets the value for Message to be an explicit nil
func (o *PiMarketDataDomainModelsResponseErrorResponse) SetMessageNil() {
	o.Message.Set(nil)
}

// UnsetMessage ensures that no value is present for Message, not even an explicit nil
func (o *PiMarketDataDomainModelsResponseErrorResponse) UnsetMessage() {
	o.Message.Unset()
}

func (o PiMarketDataDomainModelsResponseErrorResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PiMarketDataDomainModelsResponseErrorResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Code.IsSet() {
		toSerialize["code"] = o.Code.Get()
	}
	if o.Message.IsSet() {
		toSerialize["message"] = o.Message.Get()
	}
	return toSerialize, nil
}

type NullablePiMarketDataDomainModelsResponseErrorResponse struct {
	value *PiMarketDataDomainModelsResponseErrorResponse
	isSet bool
}

func (v NullablePiMarketDataDomainModelsResponseErrorResponse) Get() *PiMarketDataDomainModelsResponseErrorResponse {
	return v.value
}

func (v *NullablePiMarketDataDomainModelsResponseErrorResponse) Set(val *PiMarketDataDomainModelsResponseErrorResponse) {
	v.value = val
	v.isSet = true
}

func (v NullablePiMarketDataDomainModelsResponseErrorResponse) IsSet() bool {
	return v.isSet
}

func (v *NullablePiMarketDataDomainModelsResponseErrorResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePiMarketDataDomainModelsResponseErrorResponse(val *PiMarketDataDomainModelsResponseErrorResponse) *NullablePiMarketDataDomainModelsResponseErrorResponse {
	return &NullablePiMarketDataDomainModelsResponseErrorResponse{value: val, isSet: true}
}

func (v NullablePiMarketDataDomainModelsResponseErrorResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePiMarketDataDomainModelsResponseErrorResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
