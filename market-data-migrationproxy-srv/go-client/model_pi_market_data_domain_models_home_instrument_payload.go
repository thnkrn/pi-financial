/*
MarketData Migration Proxy API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package go_client

import (
	"encoding/json"
)

// checks if the PiMarketDataDomainModelsHomeInstrumentPayload type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PiMarketDataDomainModelsHomeInstrumentPayload{}

// PiMarketDataDomainModelsHomeInstrumentPayload struct for PiMarketDataDomainModelsHomeInstrumentPayload
type PiMarketDataDomainModelsHomeInstrumentPayload struct {
	RelevantTo NullableString `json:"relevantTo,omitempty"`
	ListName   NullableString `json:"listName,omitempty"`
}

// NewPiMarketDataDomainModelsHomeInstrumentPayload instantiates a new PiMarketDataDomainModelsHomeInstrumentPayload object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPiMarketDataDomainModelsHomeInstrumentPayload() *PiMarketDataDomainModelsHomeInstrumentPayload {
	this := PiMarketDataDomainModelsHomeInstrumentPayload{}
	return &this
}

// NewPiMarketDataDomainModelsHomeInstrumentPayloadWithDefaults instantiates a new PiMarketDataDomainModelsHomeInstrumentPayload object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPiMarketDataDomainModelsHomeInstrumentPayloadWithDefaults() *PiMarketDataDomainModelsHomeInstrumentPayload {
	this := PiMarketDataDomainModelsHomeInstrumentPayload{}
	return &this
}

// GetRelevantTo returns the RelevantTo field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiMarketDataDomainModelsHomeInstrumentPayload) GetRelevantTo() string {
	if o == nil || IsNil(o.RelevantTo.Get()) {
		var ret string
		return ret
	}
	return *o.RelevantTo.Get()
}

// GetRelevantToOk returns a tuple with the RelevantTo field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiMarketDataDomainModelsHomeInstrumentPayload) GetRelevantToOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.RelevantTo.Get(), o.RelevantTo.IsSet()
}

// HasRelevantTo returns a boolean if a field has been set.
func (o *PiMarketDataDomainModelsHomeInstrumentPayload) HasRelevantTo() bool {
	if o != nil && o.RelevantTo.IsSet() {
		return true
	}

	return false
}

// SetRelevantTo gets a reference to the given NullableString and assigns it to the RelevantTo field.
func (o *PiMarketDataDomainModelsHomeInstrumentPayload) SetRelevantTo(v string) {
	o.RelevantTo.Set(&v)
}

// SetRelevantToNil sets the value for RelevantTo to be an explicit nil
func (o *PiMarketDataDomainModelsHomeInstrumentPayload) SetRelevantToNil() {
	o.RelevantTo.Set(nil)
}

// UnsetRelevantTo ensures that no value is present for RelevantTo, not even an explicit nil
func (o *PiMarketDataDomainModelsHomeInstrumentPayload) UnsetRelevantTo() {
	o.RelevantTo.Unset()
}

// GetListName returns the ListName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiMarketDataDomainModelsHomeInstrumentPayload) GetListName() string {
	if o == nil || IsNil(o.ListName.Get()) {
		var ret string
		return ret
	}
	return *o.ListName.Get()
}

// GetListNameOk returns a tuple with the ListName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiMarketDataDomainModelsHomeInstrumentPayload) GetListNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ListName.Get(), o.ListName.IsSet()
}

// HasListName returns a boolean if a field has been set.
func (o *PiMarketDataDomainModelsHomeInstrumentPayload) HasListName() bool {
	if o != nil && o.ListName.IsSet() {
		return true
	}

	return false
}

// SetListName gets a reference to the given NullableString and assigns it to the ListName field.
func (o *PiMarketDataDomainModelsHomeInstrumentPayload) SetListName(v string) {
	o.ListName.Set(&v)
}

// SetListNameNil sets the value for ListName to be an explicit nil
func (o *PiMarketDataDomainModelsHomeInstrumentPayload) SetListNameNil() {
	o.ListName.Set(nil)
}

// UnsetListName ensures that no value is present for ListName, not even an explicit nil
func (o *PiMarketDataDomainModelsHomeInstrumentPayload) UnsetListName() {
	o.ListName.Unset()
}

func (o PiMarketDataDomainModelsHomeInstrumentPayload) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PiMarketDataDomainModelsHomeInstrumentPayload) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.RelevantTo.IsSet() {
		toSerialize["relevantTo"] = o.RelevantTo.Get()
	}
	if o.ListName.IsSet() {
		toSerialize["listName"] = o.ListName.Get()
	}
	return toSerialize, nil
}

type NullablePiMarketDataDomainModelsHomeInstrumentPayload struct {
	value *PiMarketDataDomainModelsHomeInstrumentPayload
	isSet bool
}

func (v NullablePiMarketDataDomainModelsHomeInstrumentPayload) Get() *PiMarketDataDomainModelsHomeInstrumentPayload {
	return v.value
}

func (v *NullablePiMarketDataDomainModelsHomeInstrumentPayload) Set(val *PiMarketDataDomainModelsHomeInstrumentPayload) {
	v.value = val
	v.isSet = true
}

func (v NullablePiMarketDataDomainModelsHomeInstrumentPayload) IsSet() bool {
	return v.isSet
}

func (v *NullablePiMarketDataDomainModelsHomeInstrumentPayload) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePiMarketDataDomainModelsHomeInstrumentPayload(val *PiMarketDataDomainModelsHomeInstrumentPayload) *NullablePiMarketDataDomainModelsHomeInstrumentPayload {
	return &NullablePiMarketDataDomainModelsHomeInstrumentPayload{value: val, isSet: true}
}

func (v NullablePiMarketDataDomainModelsHomeInstrumentPayload) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePiMarketDataDomainModelsHomeInstrumentPayload) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
