/*
MarketData Migration Proxy API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package go_client

import (
	"encoding/json"
)

// checks if the PiMarketDataDomainModelsResponseFiltersResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PiMarketDataDomainModelsResponseFiltersResponse{}

// PiMarketDataDomainModelsResponseFiltersResponse struct for PiMarketDataDomainModelsResponseFiltersResponse
type PiMarketDataDomainModelsResponseFiltersResponse struct {
	Data []PiMarketDataDomainModelsResponseBody `json:"data,omitempty"`
}

// NewPiMarketDataDomainModelsResponseFiltersResponse instantiates a new PiMarketDataDomainModelsResponseFiltersResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPiMarketDataDomainModelsResponseFiltersResponse() *PiMarketDataDomainModelsResponseFiltersResponse {
	this := PiMarketDataDomainModelsResponseFiltersResponse{}
	return &this
}

// NewPiMarketDataDomainModelsResponseFiltersResponseWithDefaults instantiates a new PiMarketDataDomainModelsResponseFiltersResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPiMarketDataDomainModelsResponseFiltersResponseWithDefaults() *PiMarketDataDomainModelsResponseFiltersResponse {
	this := PiMarketDataDomainModelsResponseFiltersResponse{}
	return &this
}

// GetData returns the Data field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PiMarketDataDomainModelsResponseFiltersResponse) GetData() []PiMarketDataDomainModelsResponseBody {
	if o == nil {
		var ret []PiMarketDataDomainModelsResponseBody
		return ret
	}
	return o.Data
}

// GetDataOk returns a tuple with the Data field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PiMarketDataDomainModelsResponseFiltersResponse) GetDataOk() ([]PiMarketDataDomainModelsResponseBody, bool) {
	if o == nil || IsNil(o.Data) {
		return nil, false
	}
	return o.Data, true
}

// HasData returns a boolean if a field has been set.
func (o *PiMarketDataDomainModelsResponseFiltersResponse) HasData() bool {
	if o != nil && !IsNil(o.Data) {
		return true
	}

	return false
}

// SetData gets a reference to the given []PiMarketDataDomainModelsResponseBody and assigns it to the Data field.
func (o *PiMarketDataDomainModelsResponseFiltersResponse) SetData(v []PiMarketDataDomainModelsResponseBody) {
	o.Data = v
}

func (o PiMarketDataDomainModelsResponseFiltersResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PiMarketDataDomainModelsResponseFiltersResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Data != nil {
		toSerialize["data"] = o.Data
	}
	return toSerialize, nil
}

type NullablePiMarketDataDomainModelsResponseFiltersResponse struct {
	value *PiMarketDataDomainModelsResponseFiltersResponse
	isSet bool
}

func (v NullablePiMarketDataDomainModelsResponseFiltersResponse) Get() *PiMarketDataDomainModelsResponseFiltersResponse {
	return v.value
}

func (v *NullablePiMarketDataDomainModelsResponseFiltersResponse) Set(val *PiMarketDataDomainModelsResponseFiltersResponse) {
	v.value = val
	v.isSet = true
}

func (v NullablePiMarketDataDomainModelsResponseFiltersResponse) IsSet() bool {
	return v.isSet
}

func (v *NullablePiMarketDataDomainModelsResponseFiltersResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePiMarketDataDomainModelsResponseFiltersResponse(val *PiMarketDataDomainModelsResponseFiltersResponse) *NullablePiMarketDataDomainModelsResponseFiltersResponse {
	return &NullablePiMarketDataDomainModelsResponseFiltersResponse{value: val, isSet: true}
}

func (v NullablePiMarketDataDomainModelsResponseFiltersResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePiMarketDataDomainModelsResponseFiltersResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
