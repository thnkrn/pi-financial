// <auto-generated />
using System;
using System.ComponentModel.DataAnnotations;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Pi.TfexService.Infrastructure;

#nullable disable

namespace Pi.TfexService.Migrations.Migrations.TfexDb
{
    [DbContext(typeof(TfexDbContext))]
    [Migration("20241209044035_EditActivityLogColumn")]
    partial class EditActivityLogColumn
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseCollation("utf8mb4_0900_ai_ci")
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("Pi.TfexService.Domain.Models.ActivitiesLog.ActivitiesLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(36)
                        .HasColumnType("char(36)")
                        .HasColumnName("id");

                    b.Property<string>("AccountCode")
                        .IsRequired()
                        .HasMaxLength(36)
                        .HasColumnType("varchar(36)")
                        .HasColumnName("account_code");

                    b.Property<DateTime?>("CompletedAt")
                        .HasMaxLength(6)
                        .HasColumnType("datetime(6)")
                        .HasColumnName("completed_at");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("NOW()");

                    b.Property<string>("CustomerCode")
                        .IsRequired()
                        .HasMaxLength(36)
                        .HasColumnType("varchar(36)")
                        .HasColumnName("customer_code");

                    b.Property<string>("FailedReason")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("failed_reason");

                    b.Property<bool>("IsSuccess")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("is_success");

                    b.Property<string>("OrderNo")
                        .HasMaxLength(36)
                        .HasColumnType("varchar(36)")
                        .HasColumnName("order_no");

                    b.Property<decimal?>("Price")
                        .HasPrecision(65, 30)
                        .HasColumnType("decimal(65,30)")
                        .HasColumnName("price");

                    b.Property<string>("PriceType")
                        .HasMaxLength(36)
                        .HasColumnType("varchar(36)")
                        .HasColumnName("price_type");

                    b.Property<int?>("Qty")
                        .HasColumnType("int")
                        .HasColumnName("qty");

                    b.Property<string>("RejectCode")
                        .HasMaxLength(36)
                        .HasColumnType("varchar(36)")
                        .HasColumnName("reject_code");

                    b.Property<string>("RejectReason")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("reject_reason");

                    b.Property<string>("RequestBody")
                        .HasColumnType("longtext")
                        .HasColumnName("request_body")
                        .HasAnnotation("Microsoft.EntityFrameworkCore.DataEncryption.IsEncrypted", true)
                        .HasAnnotation("Microsoft.EntityFrameworkCore.DataEncryption.StorageFormat", CryptoStorageFormat.Default);

                    b.Property<string>("RequestType")
                        .IsRequired()
                        .HasMaxLength(36)
                        .HasColumnType("varchar(36)")
                        .HasColumnName("request_type");

                    b.Property<DateTime?>("RequestedAt")
                        .HasMaxLength(6)
                        .HasColumnType("datetime(6)")
                        .HasColumnName("requested_at");

                    b.Property<string>("ResponseBody")
                        .HasColumnType("longtext")
                        .HasColumnName("response_body")
                        .HasAnnotation("Microsoft.EntityFrameworkCore.DataEncryption.IsEncrypted", true)
                        .HasAnnotation("Microsoft.EntityFrameworkCore.DataEncryption.StorageFormat", CryptoStorageFormat.Default);

                    b.Property<DateTime>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("timestamp(6)")
                        .HasColumnName("row_version");

                    b.Property<string>("Side")
                        .HasMaxLength(36)
                        .HasColumnType("varchar(36)")
                        .HasColumnName("side");

                    b.Property<string>("Symbol")
                        .HasMaxLength(36)
                        .HasColumnType("varchar(36)")
                        .HasColumnName("symbol");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("updated_at")
                        .HasDefaultValueSql("NOW()");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasMaxLength(36)
                        .HasColumnType("varchar(36)")
                        .HasColumnName("user_id");

                    b.HasKey("Id")
                        .HasName("pk_activities_logs");

                    b.HasIndex("OrderNo")
                        .HasDatabaseName("ix_activities_logs_order_no");

                    b.ToTable("activities_logs", (string)null);
                });

            modelBuilder.Entity("Pi.TfexService.Domain.Models.InitialMargin.InitialMargin", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(36)
                        .HasColumnType("char(36)")
                        .HasColumnName("id");

                    b.Property<DateOnly>("AsOfDate")
                        .HasMaxLength(6)
                        .HasColumnType("date")
                        .HasColumnName("as_of_date");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("NOW()");

                    b.Property<decimal>("Im")
                        .HasPrecision(65, 30)
                        .HasColumnType("decimal(65,30)")
                        .HasColumnName("im");

                    b.Property<decimal>("ImOutright")
                        .HasPrecision(65, 30)
                        .HasColumnType("decimal(65,30)")
                        .HasColumnName("im_outright");

                    b.Property<decimal>("ImSpread")
                        .HasPrecision(65, 30)
                        .HasColumnType("decimal(65,30)")
                        .HasColumnName("im_spread");

                    b.Property<string>("ProductType")
                        .IsRequired()
                        .HasMaxLength(6)
                        .HasColumnType("varchar(6)")
                        .HasColumnName("product_type");

                    b.Property<DateTime>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("timestamp(6)")
                        .HasColumnName("row_version");

                    b.Property<string>("Symbol")
                        .IsRequired()
                        .HasMaxLength(36)
                        .HasColumnType("varchar(36)")
                        .HasColumnName("symbol");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("updated_at")
                        .HasDefaultValueSql("NOW()");

                    b.HasKey("Id")
                        .HasName("pk_initial_margins");

                    b.HasIndex("Symbol")
                        .HasDatabaseName("ix_initial_margins_symbol");

                    b.ToTable("initial_margins", (string)null);
                });
#pragma warning restore 612, 618
        }
    }
}
